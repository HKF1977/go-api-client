/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 5.1.5
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PutLdapGroupSchemaSettingsRequest struct for PutLdapGroupSchemaSettingsRequest
type PutLdapGroupSchemaSettingsRequest struct {
	// Require use of LDAP groups
	GroupRequired bool `json:"group_required"`
	// Base DN from which to search for Groups
	GroupBase *string `json:"group_base,omitempty"`
	// Attribute type for the Groups
	GroupIdAttribute *string `json:"group_id_attribute,omitempty"`
	// Search filter for Groups
	GroupListFilter *string `json:"group_list_filter,omitempty"`
	// ttribute used to search for a user within the Group
	GroupMemberAttribute *string `json:"group_member_attribute,omitempty"`
	// Format of the Group Member attribute
	GroupMemberAttrFormat *string `json:"group_member_attr_format,omitempty"`
	// Default=subtree
	GroupSearchScope *string `json:"group_search_scope,omitempty"`
}

// NewPutLdapGroupSchemaSettingsRequest instantiates a new PutLdapGroupSchemaSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutLdapGroupSchemaSettingsRequest(groupRequired bool) *PutLdapGroupSchemaSettingsRequest {
	this := PutLdapGroupSchemaSettingsRequest{}
	this.GroupRequired = groupRequired
	return &this
}

// NewPutLdapGroupSchemaSettingsRequestWithDefaults instantiates a new PutLdapGroupSchemaSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutLdapGroupSchemaSettingsRequestWithDefaults() *PutLdapGroupSchemaSettingsRequest {
	this := PutLdapGroupSchemaSettingsRequest{}
	return &this
}

// GetGroupRequired returns the GroupRequired field value
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.GroupRequired
}

// GetGroupRequiredOk returns a tuple with the GroupRequired field value
// and a boolean to check if the value has been set.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupRequired, true
}

// SetGroupRequired sets field value
func (o *PutLdapGroupSchemaSettingsRequest) SetGroupRequired(v bool) {
	o.GroupRequired = v
}

// GetGroupBase returns the GroupBase field value if set, zero value otherwise.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupBase() string {
	if o == nil || o.GroupBase == nil {
		var ret string
		return ret
	}
	return *o.GroupBase
}

// GetGroupBaseOk returns a tuple with the GroupBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupBaseOk() (*string, bool) {
	if o == nil || o.GroupBase == nil {
		return nil, false
	}
	return o.GroupBase, true
}

// HasGroupBase returns a boolean if a field has been set.
func (o *PutLdapGroupSchemaSettingsRequest) HasGroupBase() bool {
	if o != nil && o.GroupBase != nil {
		return true
	}

	return false
}

// SetGroupBase gets a reference to the given string and assigns it to the GroupBase field.
func (o *PutLdapGroupSchemaSettingsRequest) SetGroupBase(v string) {
	o.GroupBase = &v
}

// GetGroupIdAttribute returns the GroupIdAttribute field value if set, zero value otherwise.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupIdAttribute() string {
	if o == nil || o.GroupIdAttribute == nil {
		var ret string
		return ret
	}
	return *o.GroupIdAttribute
}

// GetGroupIdAttributeOk returns a tuple with the GroupIdAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupIdAttributeOk() (*string, bool) {
	if o == nil || o.GroupIdAttribute == nil {
		return nil, false
	}
	return o.GroupIdAttribute, true
}

// HasGroupIdAttribute returns a boolean if a field has been set.
func (o *PutLdapGroupSchemaSettingsRequest) HasGroupIdAttribute() bool {
	if o != nil && o.GroupIdAttribute != nil {
		return true
	}

	return false
}

// SetGroupIdAttribute gets a reference to the given string and assigns it to the GroupIdAttribute field.
func (o *PutLdapGroupSchemaSettingsRequest) SetGroupIdAttribute(v string) {
	o.GroupIdAttribute = &v
}

// GetGroupListFilter returns the GroupListFilter field value if set, zero value otherwise.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupListFilter() string {
	if o == nil || o.GroupListFilter == nil {
		var ret string
		return ret
	}
	return *o.GroupListFilter
}

// GetGroupListFilterOk returns a tuple with the GroupListFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupListFilterOk() (*string, bool) {
	if o == nil || o.GroupListFilter == nil {
		return nil, false
	}
	return o.GroupListFilter, true
}

// HasGroupListFilter returns a boolean if a field has been set.
func (o *PutLdapGroupSchemaSettingsRequest) HasGroupListFilter() bool {
	if o != nil && o.GroupListFilter != nil {
		return true
	}

	return false
}

// SetGroupListFilter gets a reference to the given string and assigns it to the GroupListFilter field.
func (o *PutLdapGroupSchemaSettingsRequest) SetGroupListFilter(v string) {
	o.GroupListFilter = &v
}

// GetGroupMemberAttribute returns the GroupMemberAttribute field value if set, zero value otherwise.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupMemberAttribute() string {
	if o == nil || o.GroupMemberAttribute == nil {
		var ret string
		return ret
	}
	return *o.GroupMemberAttribute
}

// GetGroupMemberAttributeOk returns a tuple with the GroupMemberAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupMemberAttributeOk() (*string, bool) {
	if o == nil || o.GroupMemberAttribute == nil {
		return nil, false
	}
	return o.GroupMemberAttribute, true
}

// HasGroupMemberAttribute returns a boolean if a field has been set.
func (o *PutLdapGroupSchemaSettingsRequest) HasGroupMemberAttribute() bool {
	if o != nil && o.GroupMemberAttribute != nil {
		return true
	}

	return false
}

// SetGroupMemberAttribute gets a reference to the given string and assigns it to the GroupMemberAttribute field.
func (o *PutLdapGroupSchemaSettingsRequest) SetGroupMemberAttribute(v string) {
	o.GroupMemberAttribute = &v
}

// GetGroupMemberAttrFormat returns the GroupMemberAttrFormat field value if set, zero value otherwise.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupMemberAttrFormat() string {
	if o == nil || o.GroupMemberAttrFormat == nil {
		var ret string
		return ret
	}
	return *o.GroupMemberAttrFormat
}

// GetGroupMemberAttrFormatOk returns a tuple with the GroupMemberAttrFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupMemberAttrFormatOk() (*string, bool) {
	if o == nil || o.GroupMemberAttrFormat == nil {
		return nil, false
	}
	return o.GroupMemberAttrFormat, true
}

// HasGroupMemberAttrFormat returns a boolean if a field has been set.
func (o *PutLdapGroupSchemaSettingsRequest) HasGroupMemberAttrFormat() bool {
	if o != nil && o.GroupMemberAttrFormat != nil {
		return true
	}

	return false
}

// SetGroupMemberAttrFormat gets a reference to the given string and assigns it to the GroupMemberAttrFormat field.
func (o *PutLdapGroupSchemaSettingsRequest) SetGroupMemberAttrFormat(v string) {
	o.GroupMemberAttrFormat = &v
}

// GetGroupSearchScope returns the GroupSearchScope field value if set, zero value otherwise.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupSearchScope() string {
	if o == nil || o.GroupSearchScope == nil {
		var ret string
		return ret
	}
	return *o.GroupSearchScope
}

// GetGroupSearchScopeOk returns a tuple with the GroupSearchScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLdapGroupSchemaSettingsRequest) GetGroupSearchScopeOk() (*string, bool) {
	if o == nil || o.GroupSearchScope == nil {
		return nil, false
	}
	return o.GroupSearchScope, true
}

// HasGroupSearchScope returns a boolean if a field has been set.
func (o *PutLdapGroupSchemaSettingsRequest) HasGroupSearchScope() bool {
	if o != nil && o.GroupSearchScope != nil {
		return true
	}

	return false
}

// SetGroupSearchScope gets a reference to the given string and assigns it to the GroupSearchScope field.
func (o *PutLdapGroupSchemaSettingsRequest) SetGroupSearchScope(v string) {
	o.GroupSearchScope = &v
}

func (o PutLdapGroupSchemaSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["group_required"] = o.GroupRequired
	}
	if o.GroupBase != nil {
		toSerialize["group_base"] = o.GroupBase
	}
	if o.GroupIdAttribute != nil {
		toSerialize["group_id_attribute"] = o.GroupIdAttribute
	}
	if o.GroupListFilter != nil {
		toSerialize["group_list_filter"] = o.GroupListFilter
	}
	if o.GroupMemberAttribute != nil {
		toSerialize["group_member_attribute"] = o.GroupMemberAttribute
	}
	if o.GroupMemberAttrFormat != nil {
		toSerialize["group_member_attr_format"] = o.GroupMemberAttrFormat
	}
	if o.GroupSearchScope != nil {
		toSerialize["group_search_scope"] = o.GroupSearchScope
	}
	return json.Marshal(toSerialize)
}

type NullablePutLdapGroupSchemaSettingsRequest struct {
	value *PutLdapGroupSchemaSettingsRequest
	isSet bool
}

func (v NullablePutLdapGroupSchemaSettingsRequest) Get() *PutLdapGroupSchemaSettingsRequest {
	return v.value
}

func (v *NullablePutLdapGroupSchemaSettingsRequest) Set(val *PutLdapGroupSchemaSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutLdapGroupSchemaSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutLdapGroupSchemaSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutLdapGroupSchemaSettingsRequest(val *PutLdapGroupSchemaSettingsRequest) *NullablePutLdapGroupSchemaSettingsRequest {
	return &NullablePutLdapGroupSchemaSettingsRequest{value: val, isSet: true}
}

func (v NullablePutLdapGroupSchemaSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutLdapGroupSchemaSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


