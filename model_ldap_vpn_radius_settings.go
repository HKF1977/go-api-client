/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 5.1.5
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LdapVpnRadiusSettings struct for LdapVpnRadiusSettings
type LdapVpnRadiusSettings struct {
	VpnAuthEnabled *bool `json:"vpn_auth_enabled,omitempty"`
	VpnAuthProvider *string `json:"vpn_auth_provider,omitempty"`
	// IP address or resolvable hostname
	VpnRadiusServer *string `json:"vpn_radius_server,omitempty"`
	// Authentication port
	VpnRadiusAuthPort *int32 `json:"vpn_radius_auth_port,omitempty"`
	// Accounting port
	VpnRadiusAccountingPort *int32 `json:"vpn_radius_accounting_port,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewLdapVpnRadiusSettings instantiates a new LdapVpnRadiusSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapVpnRadiusSettings() *LdapVpnRadiusSettings {
	this := LdapVpnRadiusSettings{}
	return &this
}

// NewLdapVpnRadiusSettingsWithDefaults instantiates a new LdapVpnRadiusSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapVpnRadiusSettingsWithDefaults() *LdapVpnRadiusSettings {
	this := LdapVpnRadiusSettings{}
	return &this
}

// GetVpnAuthEnabled returns the VpnAuthEnabled field value if set, zero value otherwise.
func (o *LdapVpnRadiusSettings) GetVpnAuthEnabled() bool {
	if o == nil || o.VpnAuthEnabled == nil {
		var ret bool
		return ret
	}
	return *o.VpnAuthEnabled
}

// GetVpnAuthEnabledOk returns a tuple with the VpnAuthEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapVpnRadiusSettings) GetVpnAuthEnabledOk() (*bool, bool) {
	if o == nil || o.VpnAuthEnabled == nil {
		return nil, false
	}
	return o.VpnAuthEnabled, true
}

// HasVpnAuthEnabled returns a boolean if a field has been set.
func (o *LdapVpnRadiusSettings) HasVpnAuthEnabled() bool {
	if o != nil && o.VpnAuthEnabled != nil {
		return true
	}

	return false
}

// SetVpnAuthEnabled gets a reference to the given bool and assigns it to the VpnAuthEnabled field.
func (o *LdapVpnRadiusSettings) SetVpnAuthEnabled(v bool) {
	o.VpnAuthEnabled = &v
}

// GetVpnAuthProvider returns the VpnAuthProvider field value if set, zero value otherwise.
func (o *LdapVpnRadiusSettings) GetVpnAuthProvider() string {
	if o == nil || o.VpnAuthProvider == nil {
		var ret string
		return ret
	}
	return *o.VpnAuthProvider
}

// GetVpnAuthProviderOk returns a tuple with the VpnAuthProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapVpnRadiusSettings) GetVpnAuthProviderOk() (*string, bool) {
	if o == nil || o.VpnAuthProvider == nil {
		return nil, false
	}
	return o.VpnAuthProvider, true
}

// HasVpnAuthProvider returns a boolean if a field has been set.
func (o *LdapVpnRadiusSettings) HasVpnAuthProvider() bool {
	if o != nil && o.VpnAuthProvider != nil {
		return true
	}

	return false
}

// SetVpnAuthProvider gets a reference to the given string and assigns it to the VpnAuthProvider field.
func (o *LdapVpnRadiusSettings) SetVpnAuthProvider(v string) {
	o.VpnAuthProvider = &v
}

// GetVpnRadiusServer returns the VpnRadiusServer field value if set, zero value otherwise.
func (o *LdapVpnRadiusSettings) GetVpnRadiusServer() string {
	if o == nil || o.VpnRadiusServer == nil {
		var ret string
		return ret
	}
	return *o.VpnRadiusServer
}

// GetVpnRadiusServerOk returns a tuple with the VpnRadiusServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapVpnRadiusSettings) GetVpnRadiusServerOk() (*string, bool) {
	if o == nil || o.VpnRadiusServer == nil {
		return nil, false
	}
	return o.VpnRadiusServer, true
}

// HasVpnRadiusServer returns a boolean if a field has been set.
func (o *LdapVpnRadiusSettings) HasVpnRadiusServer() bool {
	if o != nil && o.VpnRadiusServer != nil {
		return true
	}

	return false
}

// SetVpnRadiusServer gets a reference to the given string and assigns it to the VpnRadiusServer field.
func (o *LdapVpnRadiusSettings) SetVpnRadiusServer(v string) {
	o.VpnRadiusServer = &v
}

// GetVpnRadiusAuthPort returns the VpnRadiusAuthPort field value if set, zero value otherwise.
func (o *LdapVpnRadiusSettings) GetVpnRadiusAuthPort() int32 {
	if o == nil || o.VpnRadiusAuthPort == nil {
		var ret int32
		return ret
	}
	return *o.VpnRadiusAuthPort
}

// GetVpnRadiusAuthPortOk returns a tuple with the VpnRadiusAuthPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapVpnRadiusSettings) GetVpnRadiusAuthPortOk() (*int32, bool) {
	if o == nil || o.VpnRadiusAuthPort == nil {
		return nil, false
	}
	return o.VpnRadiusAuthPort, true
}

// HasVpnRadiusAuthPort returns a boolean if a field has been set.
func (o *LdapVpnRadiusSettings) HasVpnRadiusAuthPort() bool {
	if o != nil && o.VpnRadiusAuthPort != nil {
		return true
	}

	return false
}

// SetVpnRadiusAuthPort gets a reference to the given int32 and assigns it to the VpnRadiusAuthPort field.
func (o *LdapVpnRadiusSettings) SetVpnRadiusAuthPort(v int32) {
	o.VpnRadiusAuthPort = &v
}

// GetVpnRadiusAccountingPort returns the VpnRadiusAccountingPort field value if set, zero value otherwise.
func (o *LdapVpnRadiusSettings) GetVpnRadiusAccountingPort() int32 {
	if o == nil || o.VpnRadiusAccountingPort == nil {
		var ret int32
		return ret
	}
	return *o.VpnRadiusAccountingPort
}

// GetVpnRadiusAccountingPortOk returns a tuple with the VpnRadiusAccountingPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapVpnRadiusSettings) GetVpnRadiusAccountingPortOk() (*int32, bool) {
	if o == nil || o.VpnRadiusAccountingPort == nil {
		return nil, false
	}
	return o.VpnRadiusAccountingPort, true
}

// HasVpnRadiusAccountingPort returns a boolean if a field has been set.
func (o *LdapVpnRadiusSettings) HasVpnRadiusAccountingPort() bool {
	if o != nil && o.VpnRadiusAccountingPort != nil {
		return true
	}

	return false
}

// SetVpnRadiusAccountingPort gets a reference to the given int32 and assigns it to the VpnRadiusAccountingPort field.
func (o *LdapVpnRadiusSettings) SetVpnRadiusAccountingPort(v int32) {
	o.VpnRadiusAccountingPort = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *LdapVpnRadiusSettings) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapVpnRadiusSettings) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *LdapVpnRadiusSettings) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *LdapVpnRadiusSettings) SetToken(v string) {
	o.Token = &v
}

func (o LdapVpnRadiusSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VpnAuthEnabled != nil {
		toSerialize["vpn_auth_enabled"] = o.VpnAuthEnabled
	}
	if o.VpnAuthProvider != nil {
		toSerialize["vpn_auth_provider"] = o.VpnAuthProvider
	}
	if o.VpnRadiusServer != nil {
		toSerialize["vpn_radius_server"] = o.VpnRadiusServer
	}
	if o.VpnRadiusAuthPort != nil {
		toSerialize["vpn_radius_auth_port"] = o.VpnRadiusAuthPort
	}
	if o.VpnRadiusAccountingPort != nil {
		toSerialize["vpn_radius_accounting_port"] = o.VpnRadiusAccountingPort
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableLdapVpnRadiusSettings struct {
	value *LdapVpnRadiusSettings
	isSet bool
}

func (v NullableLdapVpnRadiusSettings) Get() *LdapVpnRadiusSettings {
	return v.value
}

func (v *NullableLdapVpnRadiusSettings) Set(val *LdapVpnRadiusSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapVpnRadiusSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapVpnRadiusSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapVpnRadiusSettings(val *LdapVpnRadiusSettings) *NullableLdapVpnRadiusSettings {
	return &NullableLdapVpnRadiusSettings{value: val, isSet: true}
}

func (v NullableLdapVpnRadiusSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapVpnRadiusSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


