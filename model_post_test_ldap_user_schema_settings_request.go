/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 5.1.5
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostTestLdapUserSchemaSettingsRequest struct for PostTestLdapUserSchemaSettingsRequest
type PostTestLdapUserSchemaSettingsRequest struct {
	// Base DN from which to search for Users
	UserBase string `json:"user_base"`
	// Attribute type for the Users
	UserIdAttribute string `json:"user_id_attribute"`
	// Search filter for Users
	UserListFilter *string `json:"user_list_filter,omitempty"`
	// Number of records to return. Default = 100
	Limit *int32 `json:"limit,omitempty"`
}

// NewPostTestLdapUserSchemaSettingsRequest instantiates a new PostTestLdapUserSchemaSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTestLdapUserSchemaSettingsRequest(userBase string, userIdAttribute string) *PostTestLdapUserSchemaSettingsRequest {
	this := PostTestLdapUserSchemaSettingsRequest{}
	this.UserBase = userBase
	this.UserIdAttribute = userIdAttribute
	var limit int32 = 100
	this.Limit = &limit
	return &this
}

// NewPostTestLdapUserSchemaSettingsRequestWithDefaults instantiates a new PostTestLdapUserSchemaSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTestLdapUserSchemaSettingsRequestWithDefaults() *PostTestLdapUserSchemaSettingsRequest {
	this := PostTestLdapUserSchemaSettingsRequest{}
	var limit int32 = 100
	this.Limit = &limit
	return &this
}

// GetUserBase returns the UserBase field value
func (o *PostTestLdapUserSchemaSettingsRequest) GetUserBase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserBase
}

// GetUserBaseOk returns a tuple with the UserBase field value
// and a boolean to check if the value has been set.
func (o *PostTestLdapUserSchemaSettingsRequest) GetUserBaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserBase, true
}

// SetUserBase sets field value
func (o *PostTestLdapUserSchemaSettingsRequest) SetUserBase(v string) {
	o.UserBase = v
}

// GetUserIdAttribute returns the UserIdAttribute field value
func (o *PostTestLdapUserSchemaSettingsRequest) GetUserIdAttribute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserIdAttribute
}

// GetUserIdAttributeOk returns a tuple with the UserIdAttribute field value
// and a boolean to check if the value has been set.
func (o *PostTestLdapUserSchemaSettingsRequest) GetUserIdAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserIdAttribute, true
}

// SetUserIdAttribute sets field value
func (o *PostTestLdapUserSchemaSettingsRequest) SetUserIdAttribute(v string) {
	o.UserIdAttribute = v
}

// GetUserListFilter returns the UserListFilter field value if set, zero value otherwise.
func (o *PostTestLdapUserSchemaSettingsRequest) GetUserListFilter() string {
	if o == nil || o.UserListFilter == nil {
		var ret string
		return ret
	}
	return *o.UserListFilter
}

// GetUserListFilterOk returns a tuple with the UserListFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapUserSchemaSettingsRequest) GetUserListFilterOk() (*string, bool) {
	if o == nil || o.UserListFilter == nil {
		return nil, false
	}
	return o.UserListFilter, true
}

// HasUserListFilter returns a boolean if a field has been set.
func (o *PostTestLdapUserSchemaSettingsRequest) HasUserListFilter() bool {
	if o != nil && o.UserListFilter != nil {
		return true
	}

	return false
}

// SetUserListFilter gets a reference to the given string and assigns it to the UserListFilter field.
func (o *PostTestLdapUserSchemaSettingsRequest) SetUserListFilter(v string) {
	o.UserListFilter = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *PostTestLdapUserSchemaSettingsRequest) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapUserSchemaSettingsRequest) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *PostTestLdapUserSchemaSettingsRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *PostTestLdapUserSchemaSettingsRequest) SetLimit(v int32) {
	o.Limit = &v
}

func (o PostTestLdapUserSchemaSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user_base"] = o.UserBase
	}
	if true {
		toSerialize["user_id_attribute"] = o.UserIdAttribute
	}
	if o.UserListFilter != nil {
		toSerialize["user_list_filter"] = o.UserListFilter
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullablePostTestLdapUserSchemaSettingsRequest struct {
	value *PostTestLdapUserSchemaSettingsRequest
	isSet bool
}

func (v NullablePostTestLdapUserSchemaSettingsRequest) Get() *PostTestLdapUserSchemaSettingsRequest {
	return v.value
}

func (v *NullablePostTestLdapUserSchemaSettingsRequest) Set(val *PostTestLdapUserSchemaSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTestLdapUserSchemaSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTestLdapUserSchemaSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTestLdapUserSchemaSettingsRequest(val *PostTestLdapUserSchemaSettingsRequest) *NullablePostTestLdapUserSchemaSettingsRequest {
	return &NullablePostTestLdapUserSchemaSettingsRequest{value: val, isSet: true}
}

func (v NullablePostTestLdapUserSchemaSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTestLdapUserSchemaSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


