/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 5.1.5
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostTestLdapGroupSchemaSettingsRequest struct for PostTestLdapGroupSchemaSettingsRequest
type PostTestLdapGroupSchemaSettingsRequest struct {
	// Base DN from which to search for Groups
	GroupBase string `json:"group_base"`
	// Attribute type for the Groups
	GroupIdAttribute string `json:"group_id_attribute"`
	// Search filter for Groups
	GroupListFilter *string `json:"group_list_filter,omitempty"`
	// ttribute used to search for a user within the Group
	GroupMemberAttribute *string `json:"group_member_attribute,omitempty"`
	// Format of the Group Member attribute
	GroupMemberAttrFormat *string `json:"group_member_attr_format,omitempty"`
	// Default=subtree
	GroupSearchScope *string `json:"group_search_scope,omitempty"`
	// Number of records to return. Default = 100
	Limit *int32 `json:"limit,omitempty"`
}

// NewPostTestLdapGroupSchemaSettingsRequest instantiates a new PostTestLdapGroupSchemaSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTestLdapGroupSchemaSettingsRequest(groupBase string, groupIdAttribute string) *PostTestLdapGroupSchemaSettingsRequest {
	this := PostTestLdapGroupSchemaSettingsRequest{}
	this.GroupBase = groupBase
	this.GroupIdAttribute = groupIdAttribute
	var limit int32 = 100
	this.Limit = &limit
	return &this
}

// NewPostTestLdapGroupSchemaSettingsRequestWithDefaults instantiates a new PostTestLdapGroupSchemaSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTestLdapGroupSchemaSettingsRequestWithDefaults() *PostTestLdapGroupSchemaSettingsRequest {
	this := PostTestLdapGroupSchemaSettingsRequest{}
	var limit int32 = 100
	this.Limit = &limit
	return &this
}

// GetGroupBase returns the GroupBase field value
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupBase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupBase
}

// GetGroupBaseOk returns a tuple with the GroupBase field value
// and a boolean to check if the value has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupBaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupBase, true
}

// SetGroupBase sets field value
func (o *PostTestLdapGroupSchemaSettingsRequest) SetGroupBase(v string) {
	o.GroupBase = v
}

// GetGroupIdAttribute returns the GroupIdAttribute field value
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupIdAttribute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupIdAttribute
}

// GetGroupIdAttributeOk returns a tuple with the GroupIdAttribute field value
// and a boolean to check if the value has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupIdAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupIdAttribute, true
}

// SetGroupIdAttribute sets field value
func (o *PostTestLdapGroupSchemaSettingsRequest) SetGroupIdAttribute(v string) {
	o.GroupIdAttribute = v
}

// GetGroupListFilter returns the GroupListFilter field value if set, zero value otherwise.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupListFilter() string {
	if o == nil || o.GroupListFilter == nil {
		var ret string
		return ret
	}
	return *o.GroupListFilter
}

// GetGroupListFilterOk returns a tuple with the GroupListFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupListFilterOk() (*string, bool) {
	if o == nil || o.GroupListFilter == nil {
		return nil, false
	}
	return o.GroupListFilter, true
}

// HasGroupListFilter returns a boolean if a field has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) HasGroupListFilter() bool {
	if o != nil && o.GroupListFilter != nil {
		return true
	}

	return false
}

// SetGroupListFilter gets a reference to the given string and assigns it to the GroupListFilter field.
func (o *PostTestLdapGroupSchemaSettingsRequest) SetGroupListFilter(v string) {
	o.GroupListFilter = &v
}

// GetGroupMemberAttribute returns the GroupMemberAttribute field value if set, zero value otherwise.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupMemberAttribute() string {
	if o == nil || o.GroupMemberAttribute == nil {
		var ret string
		return ret
	}
	return *o.GroupMemberAttribute
}

// GetGroupMemberAttributeOk returns a tuple with the GroupMemberAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupMemberAttributeOk() (*string, bool) {
	if o == nil || o.GroupMemberAttribute == nil {
		return nil, false
	}
	return o.GroupMemberAttribute, true
}

// HasGroupMemberAttribute returns a boolean if a field has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) HasGroupMemberAttribute() bool {
	if o != nil && o.GroupMemberAttribute != nil {
		return true
	}

	return false
}

// SetGroupMemberAttribute gets a reference to the given string and assigns it to the GroupMemberAttribute field.
func (o *PostTestLdapGroupSchemaSettingsRequest) SetGroupMemberAttribute(v string) {
	o.GroupMemberAttribute = &v
}

// GetGroupMemberAttrFormat returns the GroupMemberAttrFormat field value if set, zero value otherwise.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupMemberAttrFormat() string {
	if o == nil || o.GroupMemberAttrFormat == nil {
		var ret string
		return ret
	}
	return *o.GroupMemberAttrFormat
}

// GetGroupMemberAttrFormatOk returns a tuple with the GroupMemberAttrFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupMemberAttrFormatOk() (*string, bool) {
	if o == nil || o.GroupMemberAttrFormat == nil {
		return nil, false
	}
	return o.GroupMemberAttrFormat, true
}

// HasGroupMemberAttrFormat returns a boolean if a field has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) HasGroupMemberAttrFormat() bool {
	if o != nil && o.GroupMemberAttrFormat != nil {
		return true
	}

	return false
}

// SetGroupMemberAttrFormat gets a reference to the given string and assigns it to the GroupMemberAttrFormat field.
func (o *PostTestLdapGroupSchemaSettingsRequest) SetGroupMemberAttrFormat(v string) {
	o.GroupMemberAttrFormat = &v
}

// GetGroupSearchScope returns the GroupSearchScope field value if set, zero value otherwise.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupSearchScope() string {
	if o == nil || o.GroupSearchScope == nil {
		var ret string
		return ret
	}
	return *o.GroupSearchScope
}

// GetGroupSearchScopeOk returns a tuple with the GroupSearchScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetGroupSearchScopeOk() (*string, bool) {
	if o == nil || o.GroupSearchScope == nil {
		return nil, false
	}
	return o.GroupSearchScope, true
}

// HasGroupSearchScope returns a boolean if a field has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) HasGroupSearchScope() bool {
	if o != nil && o.GroupSearchScope != nil {
		return true
	}

	return false
}

// SetGroupSearchScope gets a reference to the given string and assigns it to the GroupSearchScope field.
func (o *PostTestLdapGroupSchemaSettingsRequest) SetGroupSearchScope(v string) {
	o.GroupSearchScope = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *PostTestLdapGroupSchemaSettingsRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *PostTestLdapGroupSchemaSettingsRequest) SetLimit(v int32) {
	o.Limit = &v
}

func (o PostTestLdapGroupSchemaSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["group_base"] = o.GroupBase
	}
	if true {
		toSerialize["group_id_attribute"] = o.GroupIdAttribute
	}
	if o.GroupListFilter != nil {
		toSerialize["group_list_filter"] = o.GroupListFilter
	}
	if o.GroupMemberAttribute != nil {
		toSerialize["group_member_attribute"] = o.GroupMemberAttribute
	}
	if o.GroupMemberAttrFormat != nil {
		toSerialize["group_member_attr_format"] = o.GroupMemberAttrFormat
	}
	if o.GroupSearchScope != nil {
		toSerialize["group_search_scope"] = o.GroupSearchScope
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullablePostTestLdapGroupSchemaSettingsRequest struct {
	value *PostTestLdapGroupSchemaSettingsRequest
	isSet bool
}

func (v NullablePostTestLdapGroupSchemaSettingsRequest) Get() *PostTestLdapGroupSchemaSettingsRequest {
	return v.value
}

func (v *NullablePostTestLdapGroupSchemaSettingsRequest) Set(val *PostTestLdapGroupSchemaSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTestLdapGroupSchemaSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTestLdapGroupSchemaSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTestLdapGroupSchemaSettingsRequest(val *PostTestLdapGroupSchemaSettingsRequest) *NullablePostTestLdapGroupSchemaSettingsRequest {
	return &NullablePostTestLdapGroupSchemaSettingsRequest{value: val, isSet: true}
}

func (v NullablePostTestLdapGroupSchemaSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTestLdapGroupSchemaSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


