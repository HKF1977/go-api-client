/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 5.1.5
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostTestLdapSettings200Response struct for PostTestLdapSettings200Response
type PostTestLdapSettings200Response struct {
	Response *PostTestLdapSettings200ResponseResponse `json:"response,omitempty"`
}

// NewPostTestLdapSettings200Response instantiates a new PostTestLdapSettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTestLdapSettings200Response() *PostTestLdapSettings200Response {
	this := PostTestLdapSettings200Response{}
	return &this
}

// NewPostTestLdapSettings200ResponseWithDefaults instantiates a new PostTestLdapSettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTestLdapSettings200ResponseWithDefaults() *PostTestLdapSettings200Response {
	this := PostTestLdapSettings200Response{}
	return &this
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *PostTestLdapSettings200Response) GetResponse() PostTestLdapSettings200ResponseResponse {
	if o == nil || o.Response == nil {
		var ret PostTestLdapSettings200ResponseResponse
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapSettings200Response) GetResponseOk() (*PostTestLdapSettings200ResponseResponse, bool) {
	if o == nil || o.Response == nil {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *PostTestLdapSettings200Response) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given PostTestLdapSettings200ResponseResponse and assigns it to the Response field.
func (o *PostTestLdapSettings200Response) SetResponse(v PostTestLdapSettings200ResponseResponse) {
	o.Response = &v
}

func (o PostTestLdapSettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Response != nil {
		toSerialize["response"] = o.Response
	}
	return json.Marshal(toSerialize)
}

type NullablePostTestLdapSettings200Response struct {
	value *PostTestLdapSettings200Response
	isSet bool
}

func (v NullablePostTestLdapSettings200Response) Get() *PostTestLdapSettings200Response {
	return v.value
}

func (v *NullablePostTestLdapSettings200Response) Set(val *PostTestLdapSettings200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTestLdapSettings200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTestLdapSettings200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTestLdapSettings200Response(val *PostTestLdapSettings200Response) *NullablePostTestLdapSettings200Response {
	return &NullablePostTestLdapSettings200Response{value: val, isSet: true}
}

func (v NullablePostTestLdapSettings200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTestLdapSettings200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


