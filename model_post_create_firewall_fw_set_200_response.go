/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 5.1.5
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// PostCreateFirewallFwSet200Response - struct for PostCreateFirewallFwSet200Response
type PostCreateFirewallFwSet200Response struct {
	ERRORUNKNOWN *ERRORUNKNOWN
	FirewallFWSetDetail *FirewallFWSetDetail
}

// ERRORUNKNOWNAsPostCreateFirewallFwSet200Response is a convenience function that returns ERRORUNKNOWN wrapped in PostCreateFirewallFwSet200Response
func ERRORUNKNOWNAsPostCreateFirewallFwSet200Response(v *ERRORUNKNOWN) PostCreateFirewallFwSet200Response {
	return PostCreateFirewallFwSet200Response{
		ERRORUNKNOWN: v,
	}
}

// FirewallFWSetDetailAsPostCreateFirewallFwSet200Response is a convenience function that returns FirewallFWSetDetail wrapped in PostCreateFirewallFwSet200Response
func FirewallFWSetDetailAsPostCreateFirewallFwSet200Response(v *FirewallFWSetDetail) PostCreateFirewallFwSet200Response {
	return PostCreateFirewallFwSet200Response{
		FirewallFWSetDetail: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *PostCreateFirewallFwSet200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ERRORUNKNOWN
	err = newStrictDecoder(data).Decode(&dst.ERRORUNKNOWN)
	if err == nil {
		jsonERRORUNKNOWN, _ := json.Marshal(dst.ERRORUNKNOWN)
		if string(jsonERRORUNKNOWN) == "{}" { // empty struct
			dst.ERRORUNKNOWN = nil
		} else {
			match++
		}
	} else {
		dst.ERRORUNKNOWN = nil
	}

	// try to unmarshal data into FirewallFWSetDetail
	err = newStrictDecoder(data).Decode(&dst.FirewallFWSetDetail)
	if err == nil {
		jsonFirewallFWSetDetail, _ := json.Marshal(dst.FirewallFWSetDetail)
		if string(jsonFirewallFWSetDetail) == "{}" { // empty struct
			dst.FirewallFWSetDetail = nil
		} else {
			match++
		}
	} else {
		dst.FirewallFWSetDetail = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ERRORUNKNOWN = nil
		dst.FirewallFWSetDetail = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(PostCreateFirewallFwSet200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(PostCreateFirewallFwSet200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src PostCreateFirewallFwSet200Response) MarshalJSON() ([]byte, error) {
	if src.ERRORUNKNOWN != nil {
		return json.Marshal(&src.ERRORUNKNOWN)
	}

	if src.FirewallFWSetDetail != nil {
		return json.Marshal(&src.FirewallFWSetDetail)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *PostCreateFirewallFwSet200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ERRORUNKNOWN != nil {
		return obj.ERRORUNKNOWN
	}

	if obj.FirewallFWSetDetail != nil {
		return obj.FirewallFWSetDetail
	}

	// all schemas are nil
	return nil
}

type NullablePostCreateFirewallFwSet200Response struct {
	value *PostCreateFirewallFwSet200Response
	isSet bool
}

func (v NullablePostCreateFirewallFwSet200Response) Get() *PostCreateFirewallFwSet200Response {
	return v.value
}

func (v *NullablePostCreateFirewallFwSet200Response) Set(val *PostCreateFirewallFwSet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCreateFirewallFwSet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCreateFirewallFwSet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCreateFirewallFwSet200Response(val *PostCreateFirewallFwSet200Response) *NullablePostCreateFirewallFwSet200Response {
	return &NullablePostCreateFirewallFwSet200Response{value: val, isSet: true}
}

func (v NullablePostCreateFirewallFwSet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCreateFirewallFwSet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


