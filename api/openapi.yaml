openapi: 3.0.0
info:
  contact:
    email: support@cohesive.net
    name: Cohesive Networks Support team
    url: https://support.cohesive.net
  description: "Cohesive networks VNS3 provides complete control of your network's\
    \ addressing, routes, rules and edge enabling a secure, connected and reactive\
    \ cloud network.\n"
  termsOfService: https://www.cohesive.net/legal-disclaimer
  title: VNS3 Controller API
  version: 5.1.5
  x-origin:
  - format: openapi
    url: https://cohesive-networks.s3.amazonaws.com/apis/vns3/vns3-v5-1-5.oasv3.json
    version: "3.0"
  x-preferred: true
  x-providerName: cohesive.net
servers:
- url: https://vns3-host:8000/api
security:
- basicAuth: []
tags:
- description: "Sysadmin functions for system status, device access and system actions"
  name: System Administration
- description: Manage access to VNS3 with API tokens and admin access URLs
  name: Access
- description: "VNS3 configuration such as licensing, VNS3:Management System, SSL\
    \ certs and keyset generation"
  name: Configuration
- description: Control and manage your IPSec tunnels
  name: IPsec
- description: "Functions for managing Firewall rules, subgroups (chains) and IPSets"
  name: Firewall
- description: Control the network route table
  name: Routing
- description: Configure and control encrypted overlay network
  name: Overlay Network
- description: Manage VNS3 controller peering for mesh topologies
  name: Peering
- description: Collection for viewing and editing virtual and system interfaces
  name: Interfaces
- description: Backup management with device snapshots
  name: Snapshots
- description: Deploy and manage plugin functionality on the edge of the network with
    containers
  name: Network Edge Plugins
- description: Configure and control Border Gateway Protocol system and peering
  name: BGP
- description: Setup and view alerts and monitors for feedback and analysis of your
    network
  name: Monitoring and Alerting
paths:
  /remote_support:
    get:
      description: Get remote support configuration details
      operationId: getRemoteSupportDetails
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
              schema:
                $ref: '#/components/schemas/RemoteSupportConfigResponse'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get remote support
      tags:
      - System Administration
      x-sdk-module: sys_admin
    put:
      description: |
        Enables and disables remote support. Revokes the validity of current  remote support keypair
      operationId: putUpdateRemoteSupport
      requestBody:
        content:
          application/json:
            example:
              enabled: true
            schema:
              $ref: '#/components/schemas/UpdateRemoteSupportConfigRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                revoke_credential: false
              schema:
                $ref: '#/components/schemas/RemoteSupportStatusResponse'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347731532179638778333642624237974834407"
                  message: enabled is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update remote support config
      tags:
      - System Administration
      x-sdk-module: sys_admin
  /remote_support/keypair:
    post:
      description: |
        Generating a remote support key which can be shared with Cohesive to provide  access to the internal of the VNS3 Manager remotely as a "one time key".  Once Cohesive has used the key it can be revoked and access terminated.
      operationId: postGenerateSupportKeypair
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
        description: |
          Encrypted passphrase file which will be used to generate an X509 key for  accessing the VNS3 Manager in support mode. These are generated and owned by Cohesive.  Contact support@cohesive.net for an encrypted passphrase file.
        required: true
      responses:
        "201":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
            text/plain:
              schema:
                format: binary
                type: string
          description: SSH key .pem file
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347797058992573673734848595852371200179"
                  message: Bad encrypted passphrase
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Generate support keypair
      tags:
      - System Administration
      x-sdk-module: sys_admin
  /cloud_data:
    get:
      description: Returns cloud-specific data depending upon cloud type. Supports
        EC2 and GCE. More clouds coming soon.
      operationId: getCloudData
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  cloud_type: ec2
                  cloud_data:
                    accountId: "10801293012"
                    availabilityZone: us-east-1a
                    ramdiskId: null
                    kernelId: null
                    pendingTime: 2019-07-19T21:45:07.000Z
                    architecture: x86_64
                    privateIp: 192.168.1.211
                    devpayProductCodes: null
                    marketplaceProductCodes: null
                    version: 2017-09-30T00:00:00.000Z
                    region: us-east-1
                    imageId: ami-8400209011nsd0111
                    billingProducts: null
                    instanceId: i-123123asdf0t41211
                    instanceType: t2.micro
              schema:
                $ref: '#/components/schemas/CloudInfoDetail'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get cloud details
      tags:
      - System Administration
      x-sdk-module: sys_admin
  /server:
    put:
      description: Server action for VNS3 controller. Currently only reboot supported.
      operationId: putServerAction
      requestBody:
        content:
          application/json:
            example:
              reboot: true
            schema:
              $ref: '#/components/schemas/RebootRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: rebooting
              schema:
                $ref: '#/components/schemas/SimpleStatusResponse'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348220177382578437853325229350053485636"
                  message: Nothing to do
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Take server action
      tags:
      - System Administration
      x-sdk-module: sys_admin
  /status:
    get:
      description: Describe Runtime status details
      operationId: getRuntimeStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeStatusDetail'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get runtime status
      tags:
      - System Administration
      x-sdk-module: sys_admin
  /status/system:
    get:
      description: "Provides information about the underlying appliance; memory, cpu,\
        \ disk space, etc."
      operationId: getSystemStatus
      parameters:
      - description: Unix timestamp
        explode: true
        in: query
        name: timestamp
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatusDetail'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get system status
      tags:
      - System Administration
      x-sdk-module: sys_admin
  /status/task:
    get:
      description: Describe task status details
      operationId: getTaskStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTaskTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatusDetail'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564152929359289894296619951832390615371038"
                  message: token is missing
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get task status
      tags:
      - System Administration
      x-sdk-module: sys_admin
  /access/tokens:
    get:
      description: Retrieve list of api tokens
      operationId: getApiTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get API access tokens
      tags:
      - Access
      x-sdk-module: access
  /access/token:
    post:
      description: Create api token
      operationId: createApiToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAPITokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenDetail'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347797058992573673734848595852371200179"
                  message: "expires range must be between 60 and 31,536,000"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create API token
      tags:
      - Access
      x-sdk-module: access
  /access/token/{token_id}:
    delete:
      description: Delete API token by ID
      operationId: deleteApiToken
      parameters:
      - description: Token ID
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response: Token deleted
              schema:
                $ref: '#/components/schemas/SimpleStringResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested api token does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete API token
      tags:
      - Access
      x-sdk-module: access
    get:
      description: Retrieve details for specific access token (including expired ones)
      operationId: getApiToken
      parameters:
      - description: Token ID
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1access~1token/post/responses/201/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested api token does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get API access token
      tags:
      - Access
      x-sdk-module: access
    put:
      description: Expire API token
      operationId: putExpireApiToken
      parameters:
      - description: Token ID
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpireRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1access~1token/post/responses/201/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested api token does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Expire API token
      tags:
      - Access
      x-sdk-module: access
  /access/urls:
    get:
      description: "Retrieve list of users' access urls, including expired ones"
      operationId: getAccessUrls
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUrlListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get access URLs
      tags:
      - Access
      x-sdk-module: access
  /access/url:
    delete:
      description: Delete access URL by ID or URL
      operationId: deleteAccessUrlBySearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccessURLRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                response: Access url deleted
              schema:
                $ref: '#/paths/~1access~1token~1%7Btoken_id%7D/delete/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Invalid or missing access url
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Find and delete access URL
      tags:
      - Access
      x-sdk-module: access
    post:
      description: Create access URL
      operationId: createAccessUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessURLRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUrlDetail'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347797058992573673734848595852371200179"
                  message: expires range must be between 60 and 259200
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create access URL
      tags:
      - Access
      x-sdk-module: access
  /access/url/{access_url_id}:
    delete:
      description: Delete access URL by ID
      operationId: deleteAccessUrl
      parameters:
      - description: Access URL ID
        explode: false
        in: path
        name: access_url_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response: Access url deleted
              schema:
                $ref: '#/paths/~1access~1token~1%7Btoken_id%7D/delete/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Invalid or missing access url
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete access URL
      tags:
      - Access
      x-sdk-module: access
    get:
      description: Retrieve details for specific access url (including expired ones)
      operationId: getAccessUrl
      parameters:
      - description: Access URL ID
        explode: false
        in: path
        name: access_url_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1access~1url/post/responses/201/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Invalid or missing access url
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get access URL
      tags:
      - Access
      x-sdk-module: access
    put:
      description: Expire access URL
      operationId: putExpireAccessUrl
      parameters:
      - description: Access URL ID
        explode: false
        in: path
        name: access_url_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpireRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1access~1url/post/responses/201/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Invalid or missing access url
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Expire access URL
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap:
    get:
      description: get LDAP settings
      operationId: getLdapSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1settings~1ldap/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get LDAP settings
      tags:
      - Access
      x-sdk-module: access
    post:
      description: Test LDAP settings
      operationId: postTestLdapSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTestLdapSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postTestLdapSettings_200_response'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Test LDAP settings
      tags:
      - Access
      x-sdk-module: access
    put:
      description: Put LDAP settings
      operationId: putLdapSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putLdapSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapSettingsResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Put LDAP settings
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap/user_schema:
    get:
      description: get LDAP user schema settings
      operationId: getLdapUserSchemaSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1settings~1ldap~1user_schema/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get LDAP user schema settings
      tags:
      - Access
      x-sdk-module: access
    post:
      description: Test LDAP user schema settings
      operationId: postTestLdapUserSchemaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTestLdapUserSchemaSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postTestLdapUserSchemaSettings_200_response'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Test LDAP user schema settings
      tags:
      - Access
      x-sdk-module: access
    put:
      description: Put LDAP user schema settings
      operationId: putLdapUserSchemaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putLdapUserSchemaSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapUserSettingsResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Put LDAP user schema settings
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap/group_schema:
    get:
      description: get LDAP group schema settings
      operationId: getLdapGroupSchemaSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1settings~1ldap~1group_schema/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get LDAP group schema settings
      tags:
      - Access
      x-sdk-module: access
    post:
      description: Test LDAP group schema settings
      operationId: postTestLdapGroupSchemaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTestLdapGroupSchemaSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postTestLdapGroupSchemaSettings_200_response'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Test LDAP group schema settings
      tags:
      - Access
      x-sdk-module: access
    put:
      description: Put LDAP group schema settings
      operationId: putLdapGroupSchemaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putLdapGroupSchemaSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapGroupSettingsResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Put LDAP group schema settings
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap/vpn_schema:
    get:
      description: get LDAP VPN schema settings
      operationId: getLdapVpnSchemaSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1settings~1ldap~1vpn_schema/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get LDAP VPN schema settings
      tags:
      - Access
      x-sdk-module: access
    post:
      description: Test LDAP VPN schema settings
      operationId: postTestLdapVpnSchemaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTestLdapVpnSchemaSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postTestLdapUserSchemaSettings_200_response'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Test LDAP VPN schema settings
      tags:
      - Access
      x-sdk-module: access
    put:
      description: Put LDAP VPN schema settings
      operationId: putLdapVpnSchemaSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putLdapVpnSchemaSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapVpnSchemaSettingsResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Put LDAP VPN schema settings
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap/vpn_radius:
    get:
      description: get LDAP VPN Radius settings
      operationId: getLdapVpnRadiusSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1settings~1ldap~1vpn_radius/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get LDAP VPN Radius settings
      tags:
      - Access
      x-sdk-module: access
    put:
      description: Create/overwrite vpn RADIUS settings
      operationId: putLdapVpnRadiusSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putLdapVpnRadiusSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapVpnRadiusSettingsResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Put LDAP VPN Radius settings
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap/enabled:
    put:
      description: Enable/disable LDAP
      operationId: putEnableLdap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putEnableLdapRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleEnabledResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Enable/disable LDAP
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap/encrypt_auth_cert:
    put:
      description: Upload LDAP authentication certicate file
      operationId: putUploadLdapAuthCert
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
        description: Authentication cert
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response: Authentication certificate saved!
              schema:
                $ref: '#/components/schemas/putUploadLdapAuthCert_200_response'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Upload LDAP Auth Cert
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap/encrypt_auth_key:
    put:
      description: Upload authentication key file
      operationId: putUploadLdapAuthKey
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response: Authentication certificate removed!
              schema:
                $ref: '#/components/schemas/putUploadLdapAuthCert_200_response'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Upload LDAP Auth Key
      tags:
      - Access
      x-sdk-module: access
  /settings/ldap/encrypt_ca_cert:
    put:
      description: Upload LDAP CA certicate file
      operationId: putUploadLdapCaCert
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response: CA certificate saved!
              schema:
                $ref: '#/components/schemas/putUploadLdapAuthCert_200_response'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Upload LDAP CA cert
      tags:
      - Access
      x-sdk-module: access
  /admin_ui:
    put:
      description: |
        Update Admin UI settings. Enable/Disable and set credentials.
      operationId: putUpdateAdminUi
      requestBody:
        content:
          application/json:
            example:
              enabled: true
              admin_username: vnscubed_user
              admin_password: supersecurepassword
            schema:
              $ref: '#/components/schemas/UpdateAdminUISettingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  enabled: true
                  username: vnscubed_user
              schema:
                $ref: '#/components/schemas/AdminUISettingsDetail'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348220177382578437853325229350053485636"
                  message: admin_username is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update admin UI settings
      tags:
      - Configuration
      x-sdk-module: config
  /api_password:
    put:
      description: |
        Allows you to change the API password/secret key.  To change the Web UI password (or username) use PUT admin_ui.
      operationId: putUpdateApiPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  password_reset: ok
              schema:
                $ref: '#/components/schemas/PasswordResetResponse'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348220177382578437853325229350053485636"
                  message: Invalid password
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update API password
      tags:
      - Configuration
      x-sdk-module: config
  /config:
    get:
      description: Describe Runtime Configuration for VNS3 Controller
      operationId: getConfig
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  asn: 65001
                  topology_name: Cohesive
                  controller_name: Controller 1
                  topology_checksum: a04a92073a4f6f32a2abce45439a2d8c016334dc
                  manager_id: 1
                  ntp_hosts: 0.ubuntu.pool.ntp.org 1.ubuntu.pool.ntp.org 2.ubuntu.pool.ntp.org
                    3.ubuntu.pool.ntp.org ntp.ubuntu.com time.apple.com
                  vns3_version: 4.5.0
                  licensed: true
                  overlay_ipaddress: 172.31.0.100
                  peered: true
                  public_ipaddress: 50.240.142.209
                  private_ipaddress: 192.168.30.247
              schema:
                $ref: '#/components/schemas/ConfigDetail'
          description: Get runtime Configuration details
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get configuration details
      tags:
      - Configuration
      x-sdk-module: config
    put:
      description: "Provides general information about the manager's topology, license\
        \ state and  checksums and allows you to set the topology name.\n"
      operationId: putConfig
      requestBody:
        content:
          application/json:
            example:
              topology_name: Cohesive Test Topology
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1config/get/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348220177382578437853325229350053485636"
                  message: ntp_hosts is not in proper domain name format or ipv4 address
                    format. Update abandoned.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update configuration
      tags:
      - Configuration
      x-sdk-module: config
  /system/ssl:
    get:
      description: Get SSL Certificates
      operationId: getSSLCerts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSLCertsResponse'
          description: Get VNS3:ms alert success
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get SSL Certificates
      tags:
      - Configuration
      x-sdk-module: config
  /system/ssl/keypair:
    put:
      description: Upload new SSL cert and key pair
      operationId: putUploadSslKeypair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerSSLRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response: Valid key/cert files uploaded
              schema:
                $ref: '#/paths/~1access~1token~1%7Btoken_id%7D/delete/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: "cert is missing, key is missing"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Upload new SSL cert and key pair
      tags:
      - Configuration
      x-sdk-module: config
  /system/ssl/install:
    put:
      description: Install SSL cert and key pair
      operationId: putInstallSslKeypair
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: SSL Cert installation queued
                  uuid: 10923jnowfdhgu039jon4r09201
              schema:
                $ref: '#/components/schemas/ServerSSLDetailResponse'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: "cert is missing, key is missing"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Install SSL cert and key pair
      tags:
      - Configuration
      x-sdk-module: config
  /system/ssl/install/{uuid}:
    get:
      description: Get status for ssl installation task
      operationId: getSslInstallStatus
      parameters:
      - description: uuid of resource
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  uuid: "19230109239012390129031012312"
                  status: Job pending
                  state: pending
              schema:
                $ref: '#/paths/~1system~1ssl~1install/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: "Unknown Job ID: 1234"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get SSL installation status
      tags:
      - Configuration
      x-sdk-module: config
  /keyset:
    get:
      description: |
        Returns keyset details. The keyset is a set of cryptographic credentials  used for encrypting all data on the overlay network.
      operationId: getKeyset
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  keyset_present: true
                  created_at: 2019-07-19T19:44:02.191Z
                  created_at_i: 1563565442
                  checksum: 6093b865464ec3f7ab7213975c3b952763d1df14
                  uuid: 8effb1ea-aa5d-11e9-aaf4-02935c82307a
              schema:
                $ref: '#/components/schemas/KeysetDetail'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get topology keyset
      tags:
      - Configuration
    put:
      description: |
        Generate keyset The keyset is a set of cryptographic credentials used for encrypting all data on the overlay network. Keyset generation happens in background. Poll on GET /keyset in_progress value for keyset status.
      operationId: putKeyset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKeysetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  keyset_preset: false
                  in_progress: true
                  started_at: 2019-07-19T19:43:00.147Z
                  started_at_i: 1563565380
                  running: 0
              schema:
                $ref: '#/paths/~1keyset/get/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: token is missing
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Generate keyset
      tags:
      - Configuration
      x-sdk-module: config
  /license:
    get:
      description: Get license details
      operationId: getLicense
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseDetail'
          description: Get license topology details
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "9009012801280138018910283081301390103"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get license details
      tags:
      - Configuration
      x-sdk-module: licensing
    put:
      description: License a VNS3 Controller to be a part of a specific topology.
        Must not be licensed already.
      operationId: uploadLicense
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
        description: License file
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitLicenseDetail'
          description: Upload license response
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348220177382578437853325229350053485636"
                  message: Bad license
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Upload license
      tags:
      - Configuration
      x-sdk-module: licensing
  /license/parameters:
    put:
      description: Set and accept license parameters. Triggers reboot. Irreversible
        operation.
      operationId: putSetLicenseParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLicenseParametersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseParametersDetail'
          description: Put new license parameters for topology
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: invalid asns field
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Set license parameters
      tags:
      - Configuration
      x-sdk-module: licensing
  /license/upgrade:
    put:
      description: Upload new license to controller
      operationId: putLicenseUpgrade
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
        description: License file
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeLicenseResponse'
          description: New license parameters
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Upgrade license
      tags:
      - Configuration
      x-sdk-module: licensing
  /ms:
    get:
      description: Get MS configuration
      operationId: getMsConfig
      parameters:
      - description: name of resource
        explode: true
        in: query
        name: ip
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDetailResponse'
          description: Get VNS3:ms alert success
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get MS configuration
      tags:
      - Configuration
      x-sdk-module: config
    post:
      description: Set VNS3 Management System endpoint
      operationId: postSetMsConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMSRequest_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Set MS for controller
      tags:
      - Configuration
      x-sdk-module: config
    put:
      description: Update VNS3 Management System integration
      operationId: updateMsConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMSRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ms/post/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update MS config for controller
      tags:
      - Configuration
      x-sdk-module: config
  /ms/alert/test:
    post:
      description: Send test alert to VNS3:ms
      operationId: postSendTestMsAlert
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleBooleanResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Send test VNS3:ms alert
      tags:
      - Configuration
      x-sdk-module: config
  /status/ipsec:
    get:
      description: Describe ipsec tunnels status
      operationId: getIpsecStatus
      parameters:
      - description: Only retrieve tunnel status. True is more performant but has
          less info. Defaults to false.
        explode: true
        in: query
        name: up_down_status_only
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpsecTunnelListResponseKeyValue'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get IPsec status
      tags:
      - IPsec
      x-sdk-module: ipsec
  /status/link_history:
    get:
      description: Provides information about the connection history of the subnet
        or tunnel
      operationId: getIpsecLinkHistory
      parameters:
      - description: Address string in CIDR format to display link history to a remote
          endpoint.
        explode: true
        in: query
        name: remote
        required: false
        schema:
          type: string
        style: form
      - description: Address string in CIDR format which will display status of the
          local route
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: string
        style: form
      - description: "Will display link history of just the tunnel specified, which\
          \ may be only one tunnel to a remote endpoint."
        explode: true
        in: query
        name: tunnelid
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkHistoryDetail'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564152672558671466135091328226684573894656"
                  message: bad or invalid remote
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get IPsec link history
      tags:
      - IPsec
      x-sdk-module: ipsec
  /status/connected_subnets:
    get:
      description: Provides information about any connected subnets.
      operationId: getConnectedSubnets
      parameters:
      - description: Receive verbose information about resources
        explode: true
        in: query
        name: extended_output
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedSubnetsDetailResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get connected subnets
      tags:
      - IPsec
      x-sdk-module: ipsec
  /ipsec:
    get:
      description: Get details for all IPsec endpoints/subnets
      operationId: getIpsecDetails
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  this_endpoint:
                    ipaddress: 3.222.68.251
                    overlay_subnet: 100.127.255.192/26
                    private_ipaddress: 192.168.1.230
                    ipsec_local_ipaddress: 192.168.1.230
                    asn: 65001
                  remote_endpoints: {}
              schema:
                $ref: '#/components/schemas/IpsecSystemDetail'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get IPsec details
      tags:
      - IPsec
      x-sdk-module: ipsec
    post:
      description: Restart ipsec subystem
      operationId: postRestartIpsecAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestartStatus'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156398145066351285906955697179258297423716"
                  message: restart is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Restart ipsec subystem
      tags:
      - IPsec
      x-sdk-module: ipsec
    put:
      description: "Edit Ipsec Configuration on device. Note, This is device wide\
        \ and must be set before  any remote endpoint definitions are created. If\
        \ it needs to be changed, all remote endpoint  information and tunnel information\
        \ must be deleted first.\n"
      operationId: putUpdateIpsecConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIpsecAddressRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec/get/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156398145066351285906955697179258297423716"
                  message: ipsec_local_address is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update IPsec config
      tags:
      - IPsec
      x-sdk-module: ipsec
  /ipsec/endpoints:
    post:
      description: Create IPsec connection to the defined remote gateway
      operationId: postCreateIpsecEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpsecEndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpsecRemoteEndpointDetail'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156398145066351285906955697179258297423716"
                  message: ipaddress is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create IPsec endpoint
      tags:
      - IPsec
      x-sdk-module: ipsec
  /ipsec/endpoints/{endpoint_id}:
    delete:
      description: Delete IPsec endpoint
      operationId: deleteIpsecEndpoint
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec/get/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156398145066351285906955697179258297423716"
                  message: endpoint_id does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Delete IPsec endpoint
      tags:
      - IPsec
      x-sdk-module: ipsec
    get:
      description: Get IPsec endpoint information
      operationId: getIpsecEndpoint
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec~1endpoints/post/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get IPsec endpoint
      tags:
      - IPsec
      x-sdk-module: ipsec
    put:
      description: Edit IPsec endpoint connection configuration parameters
      operationId: putUpdateIpsecEndpoint
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIpsecConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec~1endpoints/post/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156398145066351285906955697179258297423716"
                  message: nat_t_enabled is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update IPsec endpoint
      tags:
      - IPsec
      x-sdk-module: ipsec
  /ipsec/endpoints/{endpoint_id}/tunnels:
    post:
      description: Create IPsec endpoint tunnel
      operationId: postCreateIpsecEndpointTunnel
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpsecTunnelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec~1endpoints/post/responses/200/content/application~1json/schema'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156398145066351285906955697179258297423716"
                  message: endpoint_id does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Permission denied. Max number of tunnels reach
      summary: Create IPsec endpoint tunnel
      tags:
      - IPsec
      x-sdk-module: ipsec
  /ipsec/endpoints/{endpoint_id}/tunnels/{tunnel_id}:
    delete:
      description: Delete IPsec tunnel
      operationId: deleteIpsecEndpointTunnel
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - description: ID for tunnel
        explode: false
        in: path
        name: tunnel_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec~1endpoints/post/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156398145066351285906955697179258297423716"
                  message: tunnel id does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Delete IPsec tunnel
      tags:
      - IPsec
      x-sdk-module: ipsec
    put:
      description: Edit IPsec endpoint tunnel configuration
      operationId: putUpdateIpsecEndpointTunnel
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - description: ID for tunnel
        explode: false
        in: path
        name: tunnel_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIpsecTunnelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpsecTunnelDetail'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156398145066351285906955697179258297423716"
                  message: local_subnet is invalid CIDR
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update IPsec endpoint tunnel
      tags:
      - IPsec
      x-sdk-module: ipsec
  /firewall:
    put:
      description: Put/Overwrite entire firewall. Careful!
      operationId: putOverwriteFirewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OverwriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTokenResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Put firewall
      tags:
      - Firewall
      x-sdk-module: firewall
  /firewall/actions:
    put:
      description: Take an action on the firewall
      operationId: putFirewallAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1server/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Put firewall action
      tags:
      - Firewall
      x-sdk-module: firewall
  /firewall/rules:
    delete:
      description: |
        Delete firewall rule by passing the actual rule to delete
      operationId: deleteFirewallRuleByRule
      requestBody:
        content:
          application/json:
            example:
              rule: MACRO_CUST -o eth0 -s 10.199.2.0/24 -j MASQUERADE
            schema:
              $ref: '#/components/schemas/DeleteFirewallRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: submitted
                  position: 0
                  rule: MACRO_CUST -o eth0 -s 10.199.2.0/24 -j MASQUERADE
                  token: 1.5641553402765172E62
              schema:
                $ref: '#/paths/~1firewall~1rules/post/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564155261466915664338789304780698957922014"
                  message: either position or rule argument must be provided
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Delete firewall rule
      tags:
      - Firewall
      x-sdk-module: firewall
    get:
      description: Get a list of current firewall rules
      operationId: getFirewallRules
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get firewall rules
      tags:
      - Firewall
      x-sdk-module: firewall
    post:
      description: Adds a firewall rule to the VNS3 Controller's firewall
      operationId: postCreateFirewallRule
      requestBody:
        content:
          application/json:
            example:
              rule: MACRO_CUST -o eth0 -s 10.199.2.0/24 -j MASQUERADE
              position: 0
            schema:
              $ref: '#/components/schemas/CreateFirewallRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: submitted
                  rule: MACRO_CUST -o eth0 -s 10.199.2.0/24 -j MASQUERADE
                  token: 1.5798987631596528E59
              schema:
                $ref: '#/components/schemas/FirewallRuleOperationResponse'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564155261466915664338789304780698957922014"
                  message: "Parse Error - iptables v1.4.21: host/network `10.199.2.0.'\
                    \ not found"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Create firewall rule
      tags:
      - Firewall
      x-sdk-module: firewall
    put:
      description: Update/overwrite entire firewall
      operationId: putFirewall
      requestBody:
        content:
          application/json:
            example:
              rules: |
                MACRO_CUST -o eth0 -s 10.199.2.0/24 -j MASQUERADE FORWARD_CUST -s 0.0.0.0/0 -j ACCEPT
            schema:
              $ref: '#/components/schemas/PutFirewallRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: submitted
                  token: 1.5798987631596528E59
              schema:
                $ref: '#/paths/~1firewall/put/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564155261466915664338789304780698957922014"
                  message: "Parse Error - iptables v1.4.21: host/network `10.199.2.0.'\
                    \ not found"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Overwrite firewall
      tags:
      - Firewall
      x-sdk-module: firewall
  /firewall/rules/{position}:
    delete:
      description: |
        Delete firewall rule by position in the firewall. The firewall is 0 indexed. So deleting position 0 will remove the first rule in the firewall and the second rule will become the first.
      operationId: deleteFirewallRuleByPosition
      parameters:
      - description: "index position for firewall rule, 0 is first"
        explode: false
        in: path
        name: position
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: submitted
                  rule: MACRO_CUST -o eth1 -s 10.0.2.0/24 -j MASQUERADE\n
                  position: 0
                  token: 1.5641555503109367E64
              schema:
                $ref: '#/paths/~1firewall~1rules/post/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156415545591919091797511226100046886299005"
                  message: position exceeds the number of rules
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Delete firewall rule by position
      tags:
      - Firewall
      x-sdk-module: firewall
  /firewall/rules/subgroup:
    delete:
      description: Delete Firewall subgroup by name or rules
      operationId: deleteFirewallSubgroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallSubgroupDeleteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1server/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Chain named some BAD_NAME not found.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
        "410":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: "Chain references remain for CHAIN_NAME, although rules\
                    \ were deleted."
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Resource gone
      summary: Delete firewall subgroup
      tags:
      - Firewall
      x-sdk-module: firewall
    get:
      description: |
        Get a list of current firewall rules at subgroup (chained rules)
      operationId: getFirewallRuleSubgroups
      parameters:
      - description: name of resource
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: True for verbose output
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallSubgroupListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get firewall subgroups
      tags:
      - Firewall
      x-sdk-module: firewall
    post:
      description: "Create a new firewall subgroup. Subgroups are named lists of rules\
        \ that can be \"jumped to\" from  another rule. These are effectively IPtables\
        \ custom chains. For example, INPUT_CUST -s 10.0.2.0/24 -j MYGROUP\n"
      operationId: postCreateFirewallSubgroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFWSubgroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: ok
                  rules: Rule 1\n Rule 2\n Rule 3
              schema:
                $ref: '#/components/schemas/postCreateFirewallSubgroup_200_response'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564155261466915664338789304780698957922014"
                  message: invalid subgroup name - some bad name
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Create firewall subgroup
      tags:
      - Firewall
      x-sdk-module: firewall
    put:
      description: Reload firewall subgroups
      operationId: putReinitializeFirewallSubgroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReinitRequest'
        required: true
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Reload firewall subgroups
      tags:
      - Firewall
      x-sdk-module: firewall
  /firewall/fwsets:
    delete:
      description: Delete Firewall FWSet by name or rules
      operationId: deleteFirewallFwSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallFWSetDeleteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: finished_ok
              schema:
                $ref: '#/paths/~1server/put/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564155261466915664338789304780698957922014"
                  message: More than one FWSet name found in rules
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Delete firewall FWSet
      tags:
      - Firewall
      x-sdk-module: firewall
    get:
      description: |
        Get a list of current firewall rule sets. These are IPsets that allow for faster matching of rules against IPs.  See http://ipset.netfilter.org for more details.
      operationId: getFirewallFwSets
      parameters:
      - description: name of resource
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: True for verbose output
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallFWSetListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get firewall FWSets
      tags:
      - Firewall
      x-sdk-module: firewall
    post:
      description: Create a new firewall FWSet for fast rule matching
      operationId: postCreateFirewallFwSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFWSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postCreateFirewallFwSet_200_response'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564155261466915664338789304780698957922014"
                  message: invalid FWSet name - some bad name
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Create firewall FWSet
      tags:
      - Firewall
      x-sdk-module: firewall
    put:
      description: Reload all firewall FWsets
      operationId: putReinitializeFwSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReinitRequest'
        required: true
      responses:
        "200":
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Reload all firewall FWsets
      tags:
      - Firewall
      x-sdk-module: firewall
  /routes:
    get:
      description: "Describes routes that this manager has access to via its network\
        \ interfaces (virtual or otherwise).  If advertized, other VNS3 Controllers\
        \ will receive the route instantly. Network clients will  receive it when\
        \ they get their next route push, which is normally on a re-connect or in\
        \ neartime  if they use the VNS3 Routing agent on their cloud servers. Remote\
        \ endpoints  (other data centers) would not receive the route unless specified\
        \ as part of  their IPsec Configuration AND the Configuration of such a tunnel\
        \ on the VNS3 controller.\n"
      operationId: getRoutes
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  "1":
                    netmask: 240.0.0.0
                    id: 1
                    cidr: 224.0.0.0/4
                    interface: tun0
                    description: Multicast (auto-added)
                    advertise: false
                    metric: 0
                    enabled: true
                  "2":
                    netmask: 255.255.255.0
                    id: 2
                    cidr: 192.168.1.0/24
                    gateway: 192.168.1.1
                    interface: eth0
                    description: US West Peer
                    advertise: false
                    metric: 0
                    enabled: true
              schema:
                $ref: '#/components/schemas/RoutesListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get routes
      tags:
      - Routing
      x-sdk-module: routing
    post:
      description: |
        Pushes routes that this manager has access to via its network interfaces (virtual or otherwise)
      operationId: postCreateRoute
      requestBody:
        content:
          application/json:
            example:
              cidr: 172.31.3.0/24
              gateway: 172.31.3.1
              metric: 0
              interface: eth0
            schema:
              $ref: '#/components/schemas/CreateRouteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  "1":
                    netmask: 240.0.0.0
                    id: 1
                    cidr: 224.0.0.0/4
                    interface: tun0
                    description: Multicast (auto-added)
                    advertise: false
                    metric: 0
                    enabled: true
                  "2":
                    netmask: 255.255.255.0
                    id: 2
                    cidr: 192.168.1.0/24
                    interface: eth0
                    gateway: 192.168.1.1
                    description: Peer 1 subnet Gateway
                    advertise: false
                    metric: 0
                    enabled: true
              schema:
                $ref: '#/paths/~1routes/get/responses/200/content/application~1json/schema'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: "Validation failed: Ipsec tunnel bad tunnel ID"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                unlicensedExample:
                  value:
                    error:
                      name: PrerequisiteError
                      log: "1563472268929826518356034508450851266833526"
                      message: Must be licensed first.
              schema: {}
          description: Request Forbidden - operation not allowed
      summary: Create route
      tags:
      - Routing
      x-sdk-module: routing
  /routes/{route_id}:
    delete:
      description: Delete route
      operationId: deleteRoute
      parameters:
      - description: ID for Route
        explode: false
        in: path
        name: route_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1routes/get/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: bad route id or route not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Delete route
      tags:
      - Routing
      x-sdk-module: routing
  /routes/{route_id}/disable:
    put:
      description: Disable route
      operationId: disableRoute
      parameters:
      - description: ID for Route
        explode: false
        in: path
        name: route_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteDetailResponse'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: bad route id or route not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Disable route
      tags:
      - Routing
      x-sdk-module: routing
  /routes/{route_id}/enable:
    put:
      description: Enable route
      operationId: enableRoute
      parameters:
      - description: ID for Route
        explode: false
        in: path
        name: route_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1routes~1%7Broute_id%7D~1disable/put/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: bad route id or route not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Enable route
      tags:
      - Routing
      x-sdk-module: routing
  /status/clients:
    get:
      description: Describe overlay clients
      operationId: getClientsStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverlayClientsListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get clients status
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /clientpacks:
    get:
      description: "Returns detailed information about all of the clientpacks in the\
        \ topology. If manager's are properly peered, this information can come from\
        \ any of the controllers."
      operationId: getClientpacks
      parameters:
      - description: Sort resources
        explode: true
        in: query
        name: sorted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientpackListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Keyset is missing
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get clientpacks
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
    put:
      description: "For bulk set of the enabled (true/false) state for all clientpacks\
        \ and the checked_out (true/false) state for all clientpacks.  This enables\
        \ a variety of work flows by calling these functions after key generation,\
        \  but before general provisioning of addresses to devivces\n"
      operationId: putUpdateAllClientpacks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigClientpackRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClientpacksStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156383509848878372758564869593812797782733"
                  message: Argument must have a true or false value
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first.
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Update all clientpacks
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /clientpacks/add_clientpacks:
    post:
      description: Incrementally add new clientpacks for use
      operationId: postAddClientpacks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClientpackRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1access~1token~1%7Btoken_id%7D/delete/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Not enough room in license for 5 more clientpacks.
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Create new clientpack
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /clientpacks/{clientpack_name}:
    get:
      description: "Returns detailed information about all of the clientpacks in the\
        \ topology.  If manager's are properly peered, this information can come from\
        \ any of the controllers.\n"
      operationId: getClientpack
      parameters:
      - description: name of clientpack
        explode: false
        in: path
        name: clientpack_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientpackDetailResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Keyset is missing
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get clientpack details
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /clientpack:
    get:
      description: |
        Returns clientpack file. Clientpacks are files with the necessary information and credentials  for an overlay client to be connected to the VNS3 topology
      operationId: getDownloadClientpack
      parameters:
      - description: name of clientpack. Typical IP address with underscores. e.g.
          100_127_255_200.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: "One of tarball, tar.gz, zip, conf, ovpn"
        explode: true
        in: query
        name: fileformat
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
            text/plain:
              schema:
                format: binary
                type: string
          description: Clientpack file
        "401":
          content:
            application/json:
              examples:
                unauthorizedExample:
                  value:
                    error:
                      name: UnauthorizedError
                      log: "1563472268929826518356034508450851266833526"
                      message: Invalid or expired token
              schema:
                $ref: '#/paths/~1routes/post/responses/403/content/application~1json/schema'
          description: Authentication information missing or invalid
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Download clientpack
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
    put:
      description: "Change properties of clientpacks; enabling or disabling, checking\
        \ in or out, or regenerating"
      operationId: putUpdateClientpack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientpackRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClientpack'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156383509848878372758564869593812797782733"
                  message: name argument must be set
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Update clientpack
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /clientpacks/next_available:
    post:
      description: "Get next sequential client pack. Provides sufficient information\
        \ to call GET /clientpack.  Note, Using this resource against multiple controllers\
        \ in the same topology could cause distribution of the  same clientpack to\
        \ multiple overlay devices which is not allowed.\n"
      operationId: postCheckoutNextClientpack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateNextClientpackRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1clientpack/put/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Keyset is missing
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Checkout next clientpack
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /client/reset:
    post:
      description: For resetting the connection of a client to a VNS3 Controller
      operationId: postResetClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetOverlayClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientpackStatusResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Reset client
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /clients/reset_all:
    post:
      description: For resetting all of the connections of clients connected to the
        VNS3 Controller
      operationId: postResetAllClients
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkClientResetStatusResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Reset all clients
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /clientpack/{clientpack_name}:
    delete:
      description: For deleting individual clientpack tags
      operationId: deleteClientpackTag
      parameters:
      - description: name of clientpack
        explode: false
        in: path
        name: clientpack_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientpackTagKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1clientpack~1%7Bclientpack_name%7D/post/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156383509848878372758564869593812797782733"
                  message: Clientpack named '10_0_100_4' does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Keyset is missing
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Delete clientpack tag
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
    get:
      description: |
        Returns clientpack binary file. Clientpacks are files with the necessary information and credentials  for an overlay client to be connected to the VNS3 topology
      operationId: getDownloadNamedClientpack
      parameters:
      - description: name of clientpack
        explode: false
        in: path
        name: clientpack_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
            text/plain:
              schema:
                format: binary
                type: string
          description: Clientpack file
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Must be licensed first
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Download clientpack by name
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
    post:
      description: For tagging individual clientpacks.
      operationId: postCreateClientpackTag
      parameters:
      - description: name of clientpack
        explode: false
        in: path
        name: clientpack_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientpackTagRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientpackTagsResponse'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156383509848878372758564869593812797782733"
                  message: "bad tag key: badcharac!er!!"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Keyset is missing
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Create clientpack tag
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
    put:
      description: Force disconnect client for named clientpack
      operationId: putDisconnectClientpack
      parameters:
      - description: name of clientpack
        explode: false
        in: path
        name: clientpack_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisconnetClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1client~1reset/post/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156383509848878372758564869593812797782733"
                  message: Overlay IP address 172.0.10.4 is not connected
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Keyset is missing
                  log: "123901290309083024802120939123901023091239"
                  name: PrerequisiteError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Disconnect clientpack
      tags:
      - Overlay Network
      x-sdk-module: overlay_network
  /peering:
    get:
      description: Provides the status of whether a Controller is peered to other
        Controllers
      operationId: getPeeringStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeersDetailResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get peering status
      tags:
      - Peering
      x-sdk-module: peering
  /peering/self:
    put:
      description: Sets the Controller ID of a controller so that it can be peered
        within a topology
      operationId: putSelfPeeringId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeerSelfRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                peered: true
                id: 1
                managers:
                  "1":
                    overlay_ipaddress: 100.127.255.253
                    self: true
                  "2":
                    overlay_ipaddress: 100.127.255.252
                    not_set: true
                    id: 2
              schema:
                $ref: '#/paths/~1peering/get/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1563565922480638538304998251646824695267891"
                  message: id is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Set peering ID
      tags:
      - Peering
      x-sdk-module: peering
  /peering/peers:
    post:
      description: |
        Creates a peering relationship from a controller to another controller.  The peering call is unidirectional. Reciprocal calls must be made to peer two controllers  together and complete the peering process.
      operationId: postCreatePeer
      requestBody:
        content:
          application/json:
            example:
              id: 2
              name: 192.168.1.230
            schema:
              $ref: '#/components/schemas/CreatePeerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering/get/responses/200/content/application~1json/schema'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: 5 is an invalid controller id
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Create peer
      tags:
      - Peering
      x-sdk-module: peering
  /peering/peers/{peer_id}:
    delete:
      description: |
        Breaks a peering relationship from a controller to another controller.  The peering call is unidirectional. Reciprocal calls must be made to  fully break the peer relationship.
      operationId: deletePeer
      parameters:
      - description: Peer ID for controller peer
        explode: false
        in: path
        name: peer_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering/get/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: 20 is invalid as controller id.
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Delete peer
      tags:
      - Peering
      x-sdk-module: peering
    put:
      description: |
        Edits a peering relationship from a controller to another controller.  The peering call is unidirectional. Reciprocal calls must be made to peer two controllers  together and complete the peering process.
      operationId: putUpdatePeer
      parameters:
      - description: Peer ID for controller peer
        explode: false
        in: path
        name: peer_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePeerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering/get/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156348346294205629750334447737345166168929"
                  message: "mtu must be an integer between 500 and 48,000"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Update peer
      tags:
      - Peering
      x-sdk-module: peering
  /interfaces:
    get:
      description: "(BETA) Describe all physical and virtual interfaces, both system\
        \ and edge GRE interfaces"
      operationId: getInterfaces
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                - id: 4
                  name: eth0
                  interface_type: system
                  description: Auto-created interface
                  ip_internal: 192.168.1.211
                  mtu: 9001
                  enabled: true
                  status: Up
                  mask_bits: "24"
                  gateway: null
                  system_default: true
                  ip_external: 3.222.68.251
                  tags: []
                - id: 5
                  name: lo
                  interface_type: system
                  description: Auto-created interface
                  ip_internal: 127.0.0.1
                  mtu: 65536
                  enabled: true
                  status: Up
                  mask_bits: "8"
                  gateway: null
                  system_default: true
                  ip_external: null
                  tags: []
                - id: 7
                  name: eth0:0
                  interface_type: system
                  description: This interface used as IPsec loopback via Local Private
                    IP
                  ip_internal: 192.168.1.230
                  mtu: 9001
                  enabled: true
                  status: Up
                  mask_bits: "31"
                  gateway: null
                  system_default: true
                  ip_external: null
                  tags: []
                - id: 6
                  name: plugin0
                  interface_type: system_virtual
                  description: Auto-created interface
                  ip_internal: 198.51.100.1
                  mtu: 1500
                  enabled: true
                  status: Up
                  mask_bits: "28"
                  gateway: null
                  system_default: false
                  ip_external: null
                  tags: []
              schema:
                $ref: '#/components/schemas/SystemInterfaceListResponse'
          description: Created
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get all interfaces
      tags:
      - Interfaces
      x-sdk-module: interfaces
  /interfaces/action:
    post:
      description: "Take action on interfaces collection. Only one action can be taken\
        \ per request. The available actions are discovering new adapters, new IPs\
        \ and resync-ing interfaces state with system.\n"
      operationId: postInterfacesAction
      requestBody:
        content:
          application/json:
            example:
              discover_ips: true
            schema:
              $ref: '#/components/schemas/InterfaceActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                - id: 1
                  name: eth0
                  interface_type: system
                  description: Auto-created interface
                  ip_internal: 10.0.1.33
                  mtu: 9001
                  enabled: true
                  status: Up
                  mask_bits: "24"
                  gateway: 10.0.1.1
                  system_default: true
                  ip_external: 3.222.68.251
                  tags: []
              schema:
                $ref: '#/paths/~1interfaces/get/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564080470480314545899327872576171314749135"
                  message: discover_ips is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Take action on all interfaces
      tags:
      - Interfaces
      x-sdk-module: interfaces
  /interfaces/system:
    get:
      description: Get system interfaces
      operationId: getSystemInterfaces
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                - id: 4
                  name: eth0
                  interface_type: system
                  description: Auto-created interface
                  ip_internal: 192.168.1.211
                  mtu: 9001
                  enabled: true
                  status: Up
                  mask_bits: "24"
                  gateway: null
                  system_default: true
                  ip_external: 3.222.68.251
                  tags: []
                - id: 5
                  name: lo
                  interface_type: system
                  description: Auto-created interface
                  ip_internal: 127.0.0.1
                  mtu: 65536
                  enabled: true
                  status: Up
                  mask_bits: "8"
                  gateway: null
                  system_default: true
                  ip_external: null
                  tags: []
                - id: 7
                  name: eth0:0
                  interface_type: system
                  description: This interface used as IPsec loopback via Local Private
                    IP
                  ip_internal: 192.168.1.230
                  mtu: 9001
                  enabled: true
                  status: Up
                  mask_bits: "31"
                  gateway: null
                  system_default: true
                  ip_external: null
                  tags: []
              schema:
                $ref: '#/paths/~1interfaces/get/responses/200/content/application~1json/schema'
          description: Created
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get all system interfaces
      tags:
      - Interfaces
      x-sdk-module: interfaces
    post:
      description: Create new system interface
      operationId: postCreateSystemInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCreateSystemInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  id: 16
                  name: tun1:1
                  interface_type: system_virtual
                  description: ""
                  ip_internal: 192.168.1.250
                  mtu: 9001
                  enabled: true
                  status: Up
                  mask_bits: "32"
                  gateway: null
                  system_default: true
                  ip_external: null
                  tags: []
              schema:
                $ref: '#/components/schemas/SystemInterfaceDetail'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564080470480314545899327872576171314749135"
                  message: mtu must be an integer
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create system interface
      tags:
      - Interfaces
      x-sdk-module: interfaces
  /interfaces/system/{interface_id}:
    delete:
      description: Delete system interface
      operationId: deleteSystemInterface
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1interfaces~1system/post/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: System Interface not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete system interface
      tags:
      - Interfaces
      x-sdk-module: interfaces
    get:
      description: Get interface details by name
      operationId: getSystemInterfaceDetails
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  id: 4
                  name: eth0
                  interface_type: system
                  description: Auto-created interface
                  ip_internal: 192.168.1.211
                  mtu: 9001
                  enabled: true
                  status: Up
                  mask_bits: "24"
                  gateway: null
                  system_default: true
                  ip_external: 3.222.68.251
                  tags: []
              schema:
                $ref: '#/paths/~1interfaces~1system/post/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: System interface not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get system interface
      tags:
      - Interfaces
      x-sdk-module: interfaces
    put:
      description: Update system interface
      operationId: putUpdateSystemInterface
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putUpdateSystemInterface_request'
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  id: 16
                  name: tun1:1
                  interface_type: system_virtual
                  description: Custom interface created
                  ip_internal: 192.168.1.250
                  mtu: 9001
                  enabled: true
                  status: Up
                  mask_bits: "32"
                  gateway: null
                  system_default: true
                  ip_external: null
                  tags: []
              schema:
                $ref: '#/paths/~1interfaces~1system/post/responses/200/content/application~1json/schema'
          description: Updated
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564080470480314545899327872576171314749135"
                  message: ip_internal must be available
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update system interface
      tags:
      - Interfaces
      x-sdk-module: interfaces
  /interfaces/system/{interface_id}/addresses:
    get:
      description: Get system interface addresses
      operationId: getInterfaceAddresses
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterfaceAddressListResponse'
          description: Created
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get all system interface addresses
      tags:
      - Interfaces
      x-sdk-module: interfaces
    post:
      description: Create new system interface address
      operationId: createInterfaceAddress
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createInterfaceAddress_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564080470480314545899327872576171314749135"
                  message: mask_bits must be an integer
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create system interface address
      tags:
      - Interfaces
      x-sdk-module: interfaces
  /interfaces/system/{interface_id}/addresses/{address_id}:
    delete:
      description: Delete system interface address
      operationId: deleteInterfaceAddress
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID for interface address
        explode: false
        in: path
        name: address_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1interfaces~1system~1%7Binterface_id%7D~1addresses/post/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: System Interface not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete system interface address
      tags:
      - Interfaces
      x-sdk-module: interfaces
    get:
      description: Get interface address details
      operationId: getInterfaceAddress
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID for interface address
        explode: false
        in: path
        name: address_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1interfaces~1system~1%7Binterface_id%7D~1addresses/post/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Interface Address not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get system interface address
      tags:
      - Interfaces
      x-sdk-module: interfaces
    put:
      description: Update system interface address
      operationId: putUpdateInterfaceAddress
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID for interface address
        explode: false
        in: path
        name: address_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putUpdateInterfaceAddress_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1interfaces~1system~1%7Binterface_id%7D~1addresses/post/responses/200/content/application~1json/schema'
          description: Updated
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564080470480314545899327872576171314749135"
                  message: ip_internal must be available
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update system interface address
      tags:
      - Interfaces
      x-sdk-module: interfaces
  /interfaces/edge_gre:
    get:
      description: Get Edge GRE interface details
      operationId: getGreInterfaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GREEndpointListResponse'
          description: Created
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get Edge GRE interfaces
      tags:
      - Interfaces
      x-sdk-module: interfaces
    post:
      description: Create new edge GRE interface
      operationId: postCreateGreInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCreateGreInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GREEndpointDetail'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564080470480314545899327872576171314749135"
                  message: '''ttl'' must be between 1 and 255'
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create edge GRE interface
      tags:
      - Interfaces
  /interfaces/edge_gre/{interface_id}:
    delete:
      description: Delete GRE Interface
      operationId: deleteGreInterface
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1interfaces~1edge_gre/post/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: GRE Endpoint not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete GRE interface
      tags:
      - Interfaces
      x-sdk-module: interfaces
    get:
      description: Get GRE interface details by id or name
      operationId: getGreInterfaceDetails
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1interfaces~1edge_gre/post/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: GRE Endpoint not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get GRE interface details
      tags:
      - Interfaces
      x-sdk-module: interfaces
    put:
      description: Update GRE interface
      operationId: putUpdateGreInterface
      parameters:
      - description: ID for system interface
        explode: false
        in: path
        name: interface_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCreateGreInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1interfaces~1edge_gre/post/responses/200/content/application~1json/schema'
          description: Updated
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "1564080470480314545899327872576171314749135"
                  message: '''ttl'' must be between 1 and 255'
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update GRE interface
      tags:
      - Interfaces
      x-sdk-module: interfaces
  /snapshots:
    get:
      description: Get list of snapshots
      operationId: getSnapshots
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  latest_snapshot: snapshot_20140117_1389943293_50.240.142.209
                  snapshots:
                    snapshot_20140117_1389943258_50.240.142.209:
                      sha1_checksum: 0ea0e930b96a6276b8dcb23d39378128784da557
                      created_at: 2014/01/17 01:20:58 -0600
                      created_at_i: 1389943258
                      size: 334120
              schema:
                $ref: '#/components/schemas/SnapshotsListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
      summary: Get snapshots
      tags:
      - Snapshots
      x-sdk-module: snapshots
    post:
      description: Create a new snapshot
      operationId: postCreateSnapshot
      requestBody:
        content:
          application/json:
            example:
              name: custom_snapshot_name
            schema:
              $ref: '#/components/schemas/CreateSnapshotRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  snapshot_name:
                    sha1_checksum: adc8052f3c0f618b9b1f9564aaa76bf8ce0bd381
                    created_at: 2016-11-22T16:23:11.000Z
                    created_at_i: 1479831791
                    size: 957078
              schema:
                $ref: '#/components/schemas/SnapshotsDetailResponse'
          description: Created
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Maximum number of snapshots reached.
                  log: "1563472268929826518356034508450851266833526"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Create snapshot
      tags:
      - Snapshots
      x-sdk-module: snapshots
  /snapshots/{snapshot_name}:
    delete:
      description: Delete named snapshot
      operationId: deleteSnapshot
      parameters:
      - description: name of Snapshot
        explode: false
        in: path
        name: snapshot_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1snapshots/get/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: snapshot not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete snapshot
      tags:
      - Snapshots
      x-sdk-module: snapshots
    get:
      description: Download snapshot file
      operationId: getDownloadSnapshot
      parameters:
      - description: name of Snapshot
        explode: false
        in: path
        name: snapshot_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
            text/plain:
              schema:
                format: binary
                type: string
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          $ref: '#/paths/~1routes/post/responses/403'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: snapshot not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Download snapshot
      tags:
      - Snapshots
      x-sdk-module: snapshots
  /snapshots/running_config:
    put:
      description: Import snapshot into the manager and triggers a reboot for the
        Configuration to take effect.
      operationId: putImportSnapshot
      parameters:
      - description: "If true, return a task token"
        explode: true
        in: query
        name: async
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
        description: Snapshot file
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotImportStatusResponse'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Keyset present - snapshot import not allowed
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Import snapshot
      tags:
      - Snapshots
      x-sdk-module: snapshots
  /container_system:
    get:
      description: Retrieve status of container system
      operationId: getContainerSystemStatus
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  running: true
                  network: 172.0.20.0/28
              schema:
                $ref: '#/components/schemas/ContainerSystemStatusDetailResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get container system status
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    post:
      description: Take action on container system. Supported actions are start and
        stop.
      operationId: postActionContainerSystem
      requestBody:
        content:
          application/json:
            example:
              action: stop
            schema:
              $ref: '#/components/schemas/ContainerSystemActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  running: false
                  network: 172.0.20.0/28
              schema:
                $ref: '#/paths/~1container_system/get/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347731532179638778333642624237974834407"
                  message: "action bad or missing, nothing to do"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Take action on container system
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    put:
      description: Configures the container network.
      operationId: putConfigureContainerSystem
      requestBody:
        content:
          application/json:
            example:
              network: 172.0.10.0/28
            schema:
              $ref: '#/components/schemas/UpdateConfigureContainerSystemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  running: true
                  network: 172.0.10.0/28
              schema:
                $ref: '#/paths/~1container_system/get/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Update container system
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /container_system/ip_addresses:
    get:
      description: |
        Retrieve IP address list for current container network configuration  and address status (e.g. available)
      operationId: getContainerSystemIps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerSystemIPListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get container system IP addresses
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /container_system/images:
    get:
      description: Get list of existing container system images
      operationId: getContainerImages
      parameters:
      - description: UUID for Container
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerImageListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
        "500":
          content:
            application/json:
              example:
                response:
                  message: Container system is not running
                  log: "123901290309083024802120939123901023091239"
                  name: StandardError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Invalid server state
      summary: Get container images
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    post:
      description: Create new container image
      operationId: postCreateContainerImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContainerImageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: Image being uploaded
                  import_uuid: 3c4faa02b17a15a0776f53e66337a1baa37fffe9afdb7a03a2886bdb25a6b319
              schema:
                $ref: '#/components/schemas/CreateImageDetailResponse'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347731532179638778333642624237974834407"
                  message: Duplicate name -- name must be unique.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: "Container image limit reached - maximum stored images\
                    \ allowed: 5; currently stored 5"
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Create container image
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /container_system/images/{uuid}:
    delete:
      description: Delete container image
      operationId: deleteContainerImage
      parameters:
      - description: uuid of resource
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: force operation with cleanup
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  uuid: 8a11af14365a57d050c06821f4caa00865461334ca2598ca38d4b4bda9ce3b12
                  image_deleted: true
              schema:
                $ref: '#/components/schemas/DeleteContainerImageDetailResponse'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Delete container image
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    put:
      description: Edits container image
      operationId: putUpdateContainerImage
      parameters:
      - description: uuid of resource
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: New image name
              description: new image description
            schema:
              $ref: '#/components/schemas/UpdateContainerImageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  uuid: 8a11af14365a57d050c06821f4caa00865461334ca2598ca38d4b4bda9ce3b12
                  status: Image updated
              schema:
                $ref: '#/components/schemas/UpdateContainerImageDetailResponse'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347731532179638778333642624237974834407"
                  message: Duplicate name -- name must be unique.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Update container image
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /container_system/images/{uuid}/exports:
    post:
      description: Create exported container image
      operationId: postExportImage
      parameters:
      - description: uuid of resource
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContainerImageExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  status: Image exported
              schema:
                $ref: '#/paths/~1server/put/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347731532179638778333642624237974834407"
                  message: Duplicate name -- name must be unique.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Create container image export
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /container_system/containers:
    get:
      description: Provides description information for one or all allocated containers
      operationId: getRunningContainers
      parameters:
      - description: Boolean for full list output of containers
        explode: true
        in: query
        name: show_all
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: UUID for resource
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunningContainersDetailResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get running containers
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    post:
      description: Create (allocate) a new container or start an existing one
      operationId: postStartContainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocateContainerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  uuid: a0df70a7ae3f52cdf33d8ee1003b7c2c982f9cba018caf29f6be043741044139
                  container_started: true
                  ip_address: 198.51.100.3
                  status: Running
              schema:
                $ref: '#/components/schemas/RunContainerDetailResponse'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347731532179638778333642624237974834407"
                  message: "Required field missing. Either 'name', 'command', 'image_uuid'\
                    \ must be passed or 'uuid'"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: "Container run limit reached - maximum running containers\
                    \ allowed: 10; currently running 10"
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Start container
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /container_system/containers/{uuid}:
    delete:
      description: Stop and delete container
      operationId: deleteContainer
      parameters:
      - description: uuid of resource
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  uuid: afee0b2ce700770581b5f1a80beb01f2a33e35b8f62c43738203a275c70a40f0
                  container_deleted: true
              schema:
                $ref: '#/components/schemas/DeleteContainerDetailResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Delete container
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    put:
      description: Stops a running container
      operationId: putStopContainer
      parameters:
      - description: uuid of resource
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  uuid: a0df70a7ae3f52cdf33d8ee1003b7c2c982f9cba018caf29f6be043741044139
                  status: Stopped
              schema:
                $ref: '#/components/schemas/StopContainerDetailResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Stop container
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /container_system/containers/{uuid}/commit:
    post:
      description: Creates a new container image from a running container
      operationId: postCommitContainer
      parameters:
      - description: uuid of resource
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitContainerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  uuid: e65dfe85fed9826a0649e241aa7c57f09b0bcb9eef638fec3a7d75cfa368e1b7
                  name: app2_version_1.2.3
              schema:
                $ref: '#/components/schemas/CreateContainerImageResponse'
          description: Created
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: "Unable to commit to new image, container image limit reached\
                    \ - maximum stored images allowed: 5; currently stored 5"
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Commit container
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /container_system/containers/{uuid}/logs:
    get:
      description: Fetch containers log messages
      operationId: getContainerLogs
      parameters:
      - description: uuid of resource
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Number of log lines to fetch
        explode: true
        in: query
        name: lines
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerLogsResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get container logs
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugins:
    get:
      description: Get list of plugins. These are container images installed with
        the container subsystem.
      operationId: getPlugins
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get plugins
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugins/{id}:
    get:
      description: Get plugin details by id
      operationId: getPlugin
      parameters:
      - description: ID for plugin (container image)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  id: 1
                  name: Suricata
                  tag_name: vns3local:Suricata
                  status: Ready
                  status_msg: null
                  import_id: bb61ffb0c6a7d05870e603130c2089ff80aef96c11e8cf9f88836e3855494aa5
                  created_at: 2021-01-28T22:29:45.808Z
                  description: ""
                  url: /api/plugins/1
                  containers:
                    id: 2
                    status: running
                  running_containers: 1
                  data:
                    comment: ""
                    container_config:
                      Hostname: ""
                      Domainname: ""
                      User: ""
              schema:
                $ref: '#/components/schemas/PluginDetailResponse'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin not found
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get plugin
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances:
    get:
      description: Get running plugin instances. These are running containers allocated
        from plugin images.
      operationId: getPluginInstances
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginInstanceListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "403":
          content:
            application/json:
              example:
                response:
                  message: Container support not available
                  log: "123901290309083024802120939123901023091239"
                  name: OperationNotAllowedError
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Request Forbidden - operation not allowed
      summary: Get plugin instances
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}:
    get:
      description: Get plugin instance details by id
      operationId: getPluginInstance
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  id: 1
                  name: HA
                  description: ""
                  command: /usr/bin/supervisord
                  image_id: 2
                  uuid: 1d56040d823c02d93dedd8835d8bdebba620d9ca26d0767ba99a37cc2b89e7ff
                  status": running
                  ip_address: 198.51.100.2
                  created_at: 2021-01-28T22:36:58.095Z
                  updated_at: 2021-01-28T22:36:59.804Z
                  status_msg: null
                  environment: ""
                  image_name: HA Plugin
                  data:
                    Id: 1d56040d823c02d93dedd8835d8bdebba620d9ca26d0767ba99a37cc2b89e7ff
                    Created: 2021-01-28T22:36:59.244Z
                    Path: /usr/bin/supervisord
                    Args: []
                    State:
                      Status: running
                      Running: true
                      Paused: false
                      Restarting: false
                      OOMKilled: false
                      Dead: false
                      Pid: 249880
                      ExitCode: 0
                      Error: ""
                      StartedAt: 2021-01-28T22:36:59.780Z
                      FinishedAt: 1901-01-01T00:00:00.000Z
                    Image: sha256:0eb951a96b6ecb47e3a16053737c3308060ca028544065882d718d5759bf275c
                  firewall: []
                  port_maps: {}
                  manager:
                    log_files:
                    - path: /opt/hacontainer/log/process.log
                      description: HA Process Log
                    configuration_files:
                    - name: HA Variables
                      path: /opt/hacontainer/conf/vars.yml
                      version: 2
                      created: 2021-01-28 22:40:30 UTC
                      previous_versions:
                      - version: 1
                        path: /opt/plugin-manager/backups/vars.1.yml
                        created: 2021-01-28 22:40:30 UTC
                    ports: []
                    process_manager:
                      name: supervisor
                      subprocesses:
                      - hacontainer
                      - ui
              schema:
                $ref: '#/components/schemas/PluginInstanceDetailResponse'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get plugin instance
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/commit:
    post:
      description: Create new plugin image from a running plugin instance. This will
        create a new container image.
      operationId: postCommitPluginInstance
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Suricata-Latest
            schema:
              $ref: '#/components/schemas/CommitPluginInstanceImageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                response:
                  uuid: e65dfe85fed9826a0649e241aa7c57f09b0bcb9eef638fec3a7d75cfa368e1b7
                  name: Suricata-Latest
              schema:
                $ref: '#/paths/~1container_system~1containers~1%7Buuid%7D~1commit/post/responses/200/content/application~1json/schema'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "156347797058992573673734848595852371200179"
                  message: name is missing
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Commit plugin instance
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/manager:
    post:
      description: "Create new manager configuration for running plugin instance.\
        \  If no payload is passed, an example configuration will be  created for\
        \ getting started.\n"
      operationId: postCreateManagerConfig
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginManagerConfig'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginManagerConfigResponse'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: |
                    Manager configuration is not empty.  Please issue a PUT request to update.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Create Manager Config
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    put:
      description: Update manager configuration for running plugin instance.
      operationId: putUpdateManagerConfig
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1plugin-instances~1%7Bid%7D~1manager/post/responses/201/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: "Invalid plugin manager config:  All configuration_files\
                    \ must be objects with a \"path\" key.\n"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Update Manager Config
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/logs:
    get:
      description: Get plugin instance log file configurations
      operationId: getPluginInstanceLogFiles
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                - path: /opt/hacontainer/log/process.log
                  description: HA Process Log
              schema:
                $ref: '#/components/schemas/PluginManagerConfigListLogFilesResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get plugin instance logs
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/logs/{slug}/content:
    get:
      description: Get plugin instance log file contents
      operationId: getPluginInstanceLogContent
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Either the index of the log file in the configuration  or the name of the log file. e.g. 0 or "name"
        explode: false
        in: path
        name: slug
        required: true
        schema:
          $ref: '#/components/schemas/FirewallRuleTuple_inner'
        style: simple
      - description: Number of log lines to return
        explode: true
        in: query
        name: lines
        required: false
        schema:
          default: 25
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStringListResponse'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: |
                    Failed to fetch logs for process_log.  Does the log file exist?
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Read plugin instance log
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/configurations:
    get:
      description: Get plugin instance configuration file configs
      operationId: getPluginInstanceConfigFiles
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                - name: HA Variables
                  path: /opt/hacontainer/conf/vars.yml
                  version: 2
                  created_at: 2021-01-28 22:40:30 UTC
                  previous_versions:
                  - version: 1
                    path: /opt/plugin-manager/backups/vars.1.yml
                    created_at: 2021-01-28 22:40:30 UTC
              schema:
                $ref: '#/components/schemas/PluginManagerConfigConfigFilesResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get plugin instance configs
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/configurations/{slug}/revert:
    post:
      description: |
        Revert plugin instance configuration file to a different version
      operationId: revertPluginInstanceConfigFile
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Either the index of the config file in the manager configuration  or the name of the confiig file. e.g. 0 or "name"
        explode: false
        in: path
        name: slug
        required: true
        schema:
          $ref: '#/components/schemas/FirewallRuleTuple_inner'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevertPluginInstanceConfigFileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1plugin-instances~1%7Bid%7D~1manager/post/responses/201/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: Version 4 does not exist.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Revert plugin instance config file
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/configurations/{slug}/content:
    get:
      description: Get plugin instance config file contents
      operationId: getPluginInstanceConfigContent
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Either the index of the config file in the configuration  or the name of the config file. e.g. 0 or "name"
        explode: false
        in: path
        name: slug
        required: true
        schema:
          $ref: '#/components/schemas/FirewallRuleTuple_inner'
        style: simple
      - description: Optional version to read content from
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1access~1token~1%7Btoken_id%7D/delete/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: Configuration file at /var/log/app.log could not be found.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Configuration file version 4 does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Read plugin instance config file
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    put:
      description: Update plugin instance config file contents
      operationId: putUpdatePluginInstanceConfigContent
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Either the index of the config file in the configuration  or the name of the config file. e.g. 0 or "name"
        explode: false
        in: path
        name: slug
        required: true
        schema:
          $ref: '#/components/schemas/FirewallRuleTuple_inner'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePluginInstanceConfigFileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1plugin-instances~1%7Bid%7D~1manager/post/responses/201/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: "Failed to write contents to file /opt/app/config.json:\
                    \ error output"
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Update plugin instance config file
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/configurations/{slug}/versions/{version}:
    delete:
      description: Delete plugin instance config file version
      operationId: deletePluginInstanceConfigVersion
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Either the index of the config file in the configuration  or the name of the config file. e.g. 0 or "name"
        explode: false
        in: path
        name: slug
        required: true
        schema:
          $ref: '#/components/schemas/FirewallRuleTuple_inner'
        style: simple
      - description: Version to delete
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1plugin-instances~1%7Bid%7D~1manager/post/responses/201/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: Can't delete current version of configuration file
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Version does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete plugin instance config file version
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/processes:
    get:
      description: Get plugin instance process manager
      operationId: getPluginInstanceProcesses
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                  name: supervisor
                  subprocesses:
                  - hacontainer
                  - ui
              schema:
                $ref: '#/components/schemas/PluginManagerConfigProcessManagerResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get plugin instance processes
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/processes/action:
    post:
      description: Take action on a managed process
      operationId: runPluginInstanceProcessAction
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunPluginInstanceProcessActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginManagerCommandResponse'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: Process manager abc unsupported.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Run plugin instance process action
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/commands/execute:
    post:
      description: Run command for plugin instance executable
      operationId: runPluginInstanceExecutableCommand
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunPluginInstanceExeCommandRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1plugin-instances~1%7Bid%7D~1processes~1action/post/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: No executables defined for plugin instance.
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Run plugin instance executable command
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /plugin-instances/{id}/firewall:
    get:
      description: Get plugin instance firewall
      operationId: getPluginInstanceFirewall
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                response:
                - rule: PREROUTING_CUST -i eth0 -p tcp -s 0.0.0.0/0 --dport 10000
                    -j DNAT --to 198.51.100.2:3000
                  tags:
                  - port map
                  destination_port: 10000
                  plugin_port: 3000
              schema:
                $ref: '#/components/schemas/PluginInstanceFirewallResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get plugin instance firewall
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
    put:
      description: Create preset plugin instance firewall rule
      operationId: putPluginInstanceFirewallRule
      parameters:
      - description: ID for plugin instance (container)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePluginInstancePresetFirewallRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1plugin-instances~1%7Bid%7D~1firewall/get/responses/200/content/application~1json/schema'
          description: Updated
        "201":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1plugin-instances~1%7Bid%7D~1firewall/get/responses/200/content/application~1json/schema'
          description: Created
        "204":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1plugin-instances~1%7Bid%7D~1firewall/get/responses/200/content/application~1json/schema'
          description: No change
        "400":
          content:
            application/json:
              example:
                error:
                  name: VPNCubed::API::APIBadRequestError
                  log: "156347797058992573673734848595852371200179"
                  message: "Invalid host port. Port can't be TCP ports 22, 8000, or\
                    \ UDP ports between 1070 and 1220."
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Plugin instance does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Create plugin instance firewall rule
      tags:
      - Network Edge Plugins
      x-sdk-module: network_edge_plugins
  /ipsec/endpoints/{endpoint_id}/ebgp_peers:
    post:
      description: Create new BGP peer connection for IPsec endpoint
      operationId: createBgpPeer
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBGPPeerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec~1endpoints/post/responses/200/content/application~1json/schema'
          description: Created
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "105308145066358823906955697179258509823716"
                  message: asn is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create BGP Peer
      tags:
      - BGP
      x-sdk-module: bgp
  /ipsec/endpoints/{endpoint_id}/ebgp_peers/{bgp_peer_id}:
    delete:
      description: Delete BGP Peer connection for IPsec endpoint
      operationId: deleteBgpPeer
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - description: ID for BGP peer
        explode: false
        in: path
        name: bgp_peer_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec~1endpoints/post/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "105308145066358823906955697179258509823716"
                  message: bgp_peer does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request indicating BGP peer does not exist
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Delete BGP Peer
      tags:
      - BGP
      x-sdk-module: bgp
    get:
      description: Get eBGP peer details
      operationId: getBgpPeer
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - description: ID for BGP peer
        explode: false
        in: path
        name: bgp_peer_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - description: True for verbose output
        explode: true
        in: query
        name: verbose
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BGPPeerResponse'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get eBGP peer
      tags:
      - BGP
      x-sdk-module: bgp
    put:
      description: Edit IPsec endpoint BGP peer connection parameters
      operationId: updateBgpPeer
      parameters:
      - description: ID for IPsec endpoint
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - description: ID for BGP peer
        explode: false
        in: path
        name: bgp_peer_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBGPPeerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ipsec~1endpoints/post/responses/200/content/application~1json/schema'
          description: Accepted
        "400":
          content:
            application/json:
              example:
                error:
                  name: APIArgumentError
                  log: "105308145066358823906955697179258509823716"
                  message: add_network_distance_hops is invalid
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Update BGP Peer
      tags:
      - BGP
      x-sdk-module: bgp
  /webhooks:
    get:
      description: Retrieve all webhooks
      operationId: getWebhooks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get all webhooks
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /webhook:
    post:
      description: Create new Webhook integration. Webhooks are endpoints for posting
        alerts.
      operationId: postCreateWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebookRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDetailResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create new webhook integration
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /webhook/{webhook_id}:
    delete:
      description: Delete defined webhook integration.
      operationId: deleteWebhook
      parameters:
      - description: ID for webhook integration
        explode: false
        in: path
        name: webhook_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1webhook/post/responses/201/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested webhook does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete webhook
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
    get:
      description: Retrieve details for single webhook integration
      operationId: getWebhook
      parameters:
      - description: ID for webhook integration
        explode: false
        in: path
        name: webhook_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1webhook/post/responses/201/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested webhook does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get webhook details
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
    put:
      description: Edit defined webhook integration
      operationId: putUpdateWebhook
      parameters:
      - description: ID for webhook integration
        explode: false
        in: path
        name: webhook_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1webhook/post/responses/201/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested webhook does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Update webhook configuration
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /alerts:
    get:
      description: Retrieve all alerts
      operationId: getAlerts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get all alerts
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /alert_events:
    get:
      description: Retrieve all possible alert event s
      operationId: getAlertEvents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertEventTypesListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get all alert events
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /alert:
    post:
      description: |
        Define new alert. Events will trigger this alert and an alert will be pushed to webhook endpoint.
      operationId: postCreateAlert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ms/get/responses/200/content/application~1json/schema'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Define new alert
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /alert/{alert_id}:
    delete:
      description: Delete defined alert
      operationId: deleteAlert
      parameters:
      - description: ID for Alert definition
        explode: false
        in: path
        name: alert_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ms/get/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested alert does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Delete alert
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
    get:
      description: Retrieve details for single alert
      operationId: getAlert
      parameters:
      - description: ID for Alert definition
        explode: false
        in: path
        name: alert_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ms/get/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested alert does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Get alert definition details
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
    put:
      description: Edit defined alert
      operationId: putUpdateAlert
      parameters:
      - description: ID for Alert definition
        explode: false
        in: path
        name: alert_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlertRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ms/get/responses/200/content/application~1json/schema'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested alert does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Edit alert definition
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /alert/{alert_id}/toggle_enabled:
    post:
      description: |
        Enable this alert. Associated events will trigger alerts sent to configured webhook.
      operationId: postToggleEnableAlert
      parameters:
      - description: ID for Alert definition
        explode: false
        in: path
        name: alert_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1ms/get/responses/200/content/application~1json/schema'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested alert does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Enable alert
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /alert/{alert_id}/test:
    post:
      description: |
        Send test alert for this defined alert to configured webhook endpoint
      operationId: postTestAlert
      parameters:
      - description: ID for Alert definition
        explode: false
        in: path
        name: alert_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postTestAlert_200_response'
          description: Accepted
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          content:
            application/json:
              example:
                error:
                  name: APINotFoundError
                  log: "15640808375976073208002188741879242245537"
                  message: Requested alert does not exist
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Not found
      summary: Send test alert
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /packet_monitors:
    get:
      description: "[Beta] Retrieve all packet monitors"
      operationId: getPacketMonitors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketMonitorsListResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Get all packet monitors
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /packet_monitor:
    post:
      description: "[Beta] Define new packet monitor. Three types of packet monitors\
        \ are supported: conntrack for connection tracking, netflow for Netflow formatted\
        \ data, and pcap for local packet capture\n"
      operationId: createPacketMonitor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePacketMonitorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketMonitorDetailResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1peering~1peers~1%7Bpeer_id%7D/delete/responses/400/content/application~1json/schema'
          description: Bad request
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
      summary: Create packet monitor
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /packet_monitor/{name}:
    delete:
      description: "[Beta] Delete packet monitor\n"
      operationId: deletePacketMonitor
      parameters:
      - description: Unique name for packet monitor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleOutputResponse'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          description: Not found
      summary: Delete packet monitor
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
    get:
      description: "[Beta] Retrieve details for single Packet Monitor\n"
      operationId: getPacketMonitor
      parameters:
      - description: Unique name for packet monitor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1packet_monitor/post/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          description: Not found
      summary: Get packet monitor
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /packet_monitor/{name}/start:
    put:
      description: "[Beta] Start packet monitor\n"
      operationId: putStartPacketMonitor
      parameters:
      - description: Unique name for packet monitor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1packet_monitor~1%7Bname%7D/delete/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          description: Not found
      summary: Start packet monitor
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /packet_monitor/{name}/stop:
    put:
      description: "[Beta] Stop packet monitor\n"
      operationId: putStopPacketMonitor
      parameters:
      - description: Unique name for packet monitor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1packet_monitor~1%7Bname%7D/delete/responses/200/content/application~1json/schema'
          description: OK
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          description: Not found
      summary: Stop packet monitor
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
  /packet_monitor/{name}/download:
    get:
      description: "[Beta] Returns packet monitoring data archive.\n"
      operationId: downloadPacketMonitorData
      parameters:
      - description: Unique name for packet monitor
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Packet data
        "401":
          $ref: '#/paths/~1clientpack/get/responses/401'
        "404":
          description: Not found
      summary: Download packet data
      tags:
      - Monitoring and Alerting
      x-sdk-module: monitoring
components:
  schemas:
    SnapshotsListResponse:
      example:
        response:
          snapshots:
            key:
              sha1_checksum: sha1_checksum
              size: 6
              created_at: created_at
              created_at_i: 0
              status: status
              token: token
          latest_snapshot: latest_snapshot
      properties:
        response:
          $ref: '#/components/schemas/SnapshotsList'
      title: SnapshotsListResponse
      type: object
    postTestLdapUserSchemaSettingsRequest:
      properties:
        user_base:
          description: Base DN from which to search for Users
          type: string
        user_id_attribute:
          description: Attribute type for the Users
          type: string
        user_list_filter:
          description: Search filter for Users
          type: string
        limit:
          default: 100
          description: Number of records to return. Default = 100
          minimum: 0
          type: integer
      required:
      - user_base
      - user_id_attribute
      title: postTestLdapUserSchemaSettingsRequest
      type: object
    CalculateNextClientpackRequest:
      example:
        include_disabled: false
        high_ip: high_ip
        low_ip: low_ip
      properties:
        low_ip:
          description: Set the lower bound for the resulting IP
          type: string
        high_ip:
          description: Set the upper bound for the resulting IP
          type: string
        include_disabled:
          default: false
          description: "Allows clientpack allocation from the disabled pool, for workflows\
            \ where all clientpacks are disabled at the start."
          type: boolean
      title: CalculateNextClientpackRequest
      type: object
    UpdateAdminUISettingsRequest:
      example:
        admin_username: admin_username
        admin_password: admin_password
        enabled: true
      properties:
        enabled:
          type: boolean
        admin_username:
          type: string
        admin_password:
          type: string
      title: UpdateAdminUISettingsRequest
      type: object
    CreateWebookRequest:
      example:
        headers:
        - name: name
          value: value
        - name: name
          value: value
        name: name
        custom_properties:
        - name: name
          description: description
          value: value
        - name: name
          description: description
          value: value
        body: body
        parameters:
        - name: name
          value: value
        - name: name
          value: value
        url: url
        events:
        - events
        - events
        validate_cert: true
      properties:
        name:
          type: string
        url:
          type: string
        events:
          default:
          - tunnel_up
          - tunnel_down
          items:
            type: string
          type: array
        body:
          description: Serialized HTTP Post request body
          type: string
        validate_cert:
          type: boolean
        custom_properties:
          items:
            $ref: '#/components/schemas/CreateWebookRequest_custom_properties_inner'
          type: array
        headers:
          items:
            $ref: '#/components/schemas/CreateWebookRequest_headers_inner'
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/CreateWebookRequest_headers_inner'
          type: array
      required:
      - name
      title: CreateWebookRequest
      type: object
    PluginManagerConfigExecutable:
      example:
        path: path
        commands:
          key: commands
      properties:
        path:
          type: string
        commands:
          additionalProperties:
            type: string
          description: "Map of \"name\" to the command for the underlying executable.\
            \ For example, start -> execute would pass \"execute\" to the executable\
            \ for the \"start\" command.\n"
          type: object
      title: PluginManagerConfigExecutable
      type: object
    postCreateSystemInterface_request:
      properties:
        name:
          type: string
        description:
          type: string
        ip_internal:
          type: string
        ip_external:
          nullable: true
          type: string
        mtu:
          type: integer
        enabled:
          default: false
          type: boolean
        mask_bits:
          type: string
        gateway:
          nullable: true
          type: string
      required:
      - name
      type: object
    SimpleOutputResponse_response:
      example:
        output: output
        success: true
      properties:
        success:
          type: boolean
        output:
          type: string
      type: object
    PeersDetail:
      example:
        controllers:
          key:
            not_set: true
            address: address
            self: true
            overlay_ipaddress: overlay_ipaddress
            id: 1
            reachable: true
            mtu: mtu
        id: 1
        peered: true
        managers:
          key:
            not_set: true
            address: address
            self: true
            overlay_ipaddress: overlay_ipaddress
            id: 1
            reachable: true
            mtu: mtu
      properties:
        id:
          minimum: 1
          type: integer
        peered:
          type: boolean
        managers:
          additionalProperties:
            $ref: '#/components/schemas/PeersDetail_managers_value'
          type: object
        controllers:
          additionalProperties:
            $ref: '#/components/schemas/PeersDetail_managers_value'
          type: object
      title: PeersDetail
      type: object
    RuntimeStatusDetail:
      example:
        response:
          ipsec:
            key:
              tunnel_params:
                bytes_in: bytes_in
                isakmp_port: isakmp_port
                last_dpd: last_dpd
                inbound_spi: inbound_spi
                phase1_cipher: phase1_cipher
                nat_t: nat_t
                esp_time_remaining: esp_time_remaining
                esp_port: esp_port
                phase1: phase1
                phase2: phase2
                phase2_algo: phase2_algo
                isakmp_time_remaining: isakmp_time_remaining
                pfs_dh_group: pfs_dh_group
                bytes_out: bytes_out
                ike_version: ike_version
                outbound_spi: outbound_spi
                dpd: dpd
                phase1_dh_group: phase1_dh_group
                phase2_hash: phase2_hash
                phase1_prf: phase1_prf
              bounce: true
              endpointid: 1
              endpoint_name: endpoint_name
              endpoint_id: 1
              active: true
              description: description
              local_subnet: local_subnet
              ping_ipaddress: ping_ipaddress
              enabled: true
              connected: true
              ping_interval: 5
              ping_interface: eth0
              remote_subnet: remote_subnet
              id: 1
          connected_clients:
            key:
              ipaddress: ipaddress
              overlay_ipaddress: overlay_ipaddress
              managerid: 1
              tags:
                key: tags
          connected_subnets:
          - - connected_subnets
            - connected_subnets
          - - connected_subnets
            - connected_subnets
      properties:
        response:
          $ref: '#/components/schemas/RuntimeStatus'
      title: RuntimeStatusDetail
      type: object
    FirewallFWSetData:
      properties:
        status:
          type: string
        rules:
          description: Begins with name and is followed by Firewall rules. This is
            an indexed rule that allows for speedy matching on IPs
          title: FirewallFWSetString
          type: string
      title: FirewallFWSetData
      type: object
    CreatePacketMonitorRequest:
      example:
        filter: filter
        duration: duration
        name: name
        destination: destination
        type: type
        interface: interface
      properties:
        name:
          description: Name of packet monitor. Must be conntrack for type=conntrack
            as only one conntrack monitor can run at a time
          type: string
        type:
          description: "conntrack, netflow or pcap"
          type: string
        interface:
          type: string
        filter:
          description: "filter strings are particular to the type of packet monitor.\
            \ For instance, \"-p 8000\" for pcap. Can be empty string."
          nullable: true
          type: string
        duration:
          description: Indicates length of time to run capture for. Can be forever
            or some string parsable by the Linux date command
          type: string
        destination:
          description: must be file if pcap or conntrack. Otherwise a host should
            be specified with the prefix "host". E.g. "host:10.0.3.2:4000"
          type: string
      required:
      - destination
      - duration
      - filter
      - interface
      - name
      - type
      title: CreatePacketMonitorRequest
      type: object
    putLdapVpnRadiusSettingsRequest:
      properties:
        vpn_auth_enabled:
          description: "Enable use of Radius through VPN. If true, other params required."
          type: boolean
        vpn_radius_server:
          description: IP address or resolvable hostname
          type: string
        vpn_radius_auth_port:
          default: 1812
          description: Authentication port
          type: integer
        vpn_radius_accounting_port:
          default: 1812
          description: Accounting port
          type: integer
        vpn_radius_pass:
          description: Shared password
          type: string
      required:
      - vpn_auth_enabled
      - vpn_radius_pass
      - vpn_radius_server
      title: putLdapVpnRadiusSettingsRequest
      type: object
    LinkHistory:
      example:
        tunnelid: 1
        history:
        - timestamp_i: 6
          event: event
          timestamp: timestamp
        - timestamp_i: 6
          event: event
          timestamp: timestamp
        remote: remote
        local: local
      properties:
        remote:
          type: string
        local:
          type: string
        tunnelid:
          minimum: 1
          type: integer
        history:
          items:
            $ref: '#/components/schemas/LinkEvent'
          type: array
      title: LinkHistory
      type: object
    UpdatePasswordRequest:
      example:
        password: password
      properties:
        password:
          type: string
      title: UpdatePasswordRequest
      type: object
    SnapshotsDetailResponse:
      example:
        response:
          key:
            sha1_checksum: sha1_checksum
            size: 6
            created_at: created_at
            created_at_i: 0
            status: status
            token: token
      properties:
        response:
          additionalProperties:
            $ref: '#/components/schemas/SnapshotsList_snapshots_value'
          title: SnapshotsDetail
          type: object
      title: SnapshotsDetailResponse
      type: object
    RemoteSupportConfigResponse:
      example:
        response:
          enabled: true
      properties:
        response:
          $ref: '#/components/schemas/RemoteSupportConfig'
      title: RemoteSupportConfigResponse
      type: object
    CreateContainerImageDetail:
      example:
        name: name
        uuid: uuid
      properties:
        uuid:
          description: ID of the new image
          type: string
        name:
          type: string
      title: CreateContainerImageDetail
      type: object
    ReinitRequest:
      example:
        reinitialize: true
      properties:
        reinitialize:
          type: boolean
      title: ReinitRequest
      type: object
    RuntimeStatus_connected_clients_value:
      example:
        ipaddress: ipaddress
        overlay_ipaddress: overlay_ipaddress
        managerid: 1
        tags:
          key: tags
      properties:
        managerid:
          minimum: 1
          type: integer
        overlay_ipaddress:
          type: string
        ipaddress:
          type: string
        tags:
          additionalProperties:
            type: string
          description: "Key, value object of tags"
          type: object
      title: OverlayClient
      type: object
    IpsecTunnelDetail:
      example:
        response:
          tunnel_params:
            bytes_in: bytes_in
            isakmp_port: isakmp_port
            last_dpd: last_dpd
            inbound_spi: inbound_spi
            phase1_cipher: phase1_cipher
            nat_t: nat_t
            esp_time_remaining: esp_time_remaining
            esp_port: esp_port
            phase1: phase1
            phase2: phase2
            phase2_algo: phase2_algo
            isakmp_time_remaining: isakmp_time_remaining
            pfs_dh_group: pfs_dh_group
            bytes_out: bytes_out
            ike_version: ike_version
            outbound_spi: outbound_spi
            dpd: dpd
            phase1_dh_group: phase1_dh_group
            phase2_hash: phase2_hash
            phase1_prf: phase1_prf
          bounce: true
          endpointid: 1
          endpoint_name: endpoint_name
          endpoint_id: 1
          active: true
          description: description
          local_subnet: local_subnet
          ping_ipaddress: ping_ipaddress
          enabled: true
          connected: true
          ping_interval: 5
          ping_interface: eth0
          remote_subnet: remote_subnet
          id: 1
      properties:
        response:
          $ref: '#/components/schemas/RuntimeStatus_ipsec_value'
      title: IpsecTunnelDetail
      type: object
    ContainerImageList:
      example:
        images:
        - image_name: image_name
          created: 2000-01-23T04:56:07.000+00:00
          tag_name: tag_name
          import_id: import_id
          container_config:
            User: User
            Entrypoint: Entrypoint
            AttachStderr: true
            Memory: 0
            Dns: Dns
            VolumesFrom: VolumesFrom
            Hostname: Hostname
            OpenStdin: true
            Env:
              key: ""
            Image: Image
            NetworkDisabled: true
            ExposedPorts:
              key: ""
            StdinOnce: true
            AttachStdout: true
            WorkingDir: WorkingDir
            Volumes: Volumes
            CpuShares: 1
            PortSpecs:
              key: ""
            OnBuild: OnBuild
            AttachStdin: true
            Domainname: Domainname
            MemorySwap: 6
            Tty: true
            Cmd: Cmd
          status_msg: status_msg
          description: description
          comment: comment
          id: id
          status: status
        - image_name: image_name
          created: 2000-01-23T04:56:07.000+00:00
          tag_name: tag_name
          import_id: import_id
          container_config:
            User: User
            Entrypoint: Entrypoint
            AttachStderr: true
            Memory: 0
            Dns: Dns
            VolumesFrom: VolumesFrom
            Hostname: Hostname
            OpenStdin: true
            Env:
              key: ""
            Image: Image
            NetworkDisabled: true
            ExposedPorts:
              key: ""
            StdinOnce: true
            AttachStdout: true
            WorkingDir: WorkingDir
            Volumes: Volumes
            CpuShares: 1
            PortSpecs:
              key: ""
            OnBuild: OnBuild
            AttachStdin: true
            Domainname: Domainname
            MemorySwap: 6
            Tty: true
            Cmd: Cmd
          status_msg: status_msg
          description: description
          comment: comment
          id: id
          status: status
      properties:
        images:
          items:
            $ref: '#/components/schemas/ContainerImage'
          type: array
      title: ContainerImageList
      type: object
    AccessUrl:
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        expired: true
        last_accessed_ip: last_accessed_ip
        name: name
        lifetime: lifetime
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        last_accessed_at: last_accessed_at
        created_ip: created_ip
        url: url
      properties:
        id:
          minimum: 1
          type: integer
        url:
          type: string
        created_at:
          format: date-time
          type: string
        created_ip:
          type: string
        name:
          type: string
        expires_at:
          format: date-time
          type: string
        lifetime:
          type: string
        expired:
          type: boolean
        last_accessed_at:
          nullable: true
          type: string
        last_accessed_ip:
          nullable: true
          type: string
      title: AccessUrl
      type: object
    UpgradeLicenseResponse:
      example:
        response:
          finalized: true
          license: license
          new_managers: 6
          uniq: uniq
          new_clientpacks: 0
      properties:
        response:
          $ref: '#/components/schemas/UpgradeLicenseResponse_response'
      title: UpgradeLicenseResponse
      type: object
    DisconnetClientRequest:
      example:
        disconnect: true
      properties:
        disconnect:
          type: boolean
      required:
      - disconnect
      title: DisconnetClientRequest
      type: object
    RemoteSupportStatus:
      example:
        revoke_credential: true
        enabled: true
      properties:
        enabled:
          type: boolean
        revoke_credential:
          type: boolean
      title: RemoteSupportStatus
      type: object
    ServerSSLDetailResponse:
      example:
        response:
          state: state
          uuid: uuid
          status: status
      properties:
        response:
          $ref: '#/components/schemas/ServerSSLDetail'
      title: ServerSSLDetailResponse
      type: object
    PluginManagerConfigConfigFile:
      example:
        path: path
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        version: 2
        previous_versions:
        - path: path
          created_at: created_at
          version: 7
        - path: path
          created_at: created_at
          version: 7
      properties:
        name:
          type: string
        path:
          type: string
        description:
          type: string
        version:
          type: integer
        created_at:
          format: date-time
          type: string
        previous_versions:
          items:
            $ref: '#/components/schemas/PluginManagerConfigConfigFile_previous_versions_inner'
          type: array
      title: PluginManagerConfigConfigFile
      type: object
    postTestLdapSettings_200_response:
      example:
        response:
          connect_success: true
          message: message
      properties:
        response:
          $ref: '#/components/schemas/postTestLdapSettings_200_response_response'
      type: object
    CreateAPITokenRequest:
      example:
        refreshes: true
        expires: 2525546
        name: name
        token_name: token_name
      properties:
        expires:
          default: 3600
          description: Number of seconds before expiration
          maximum: 31536000
          minimum: 60
          type: integer
        name:
          description: Optional name of token
          type: string
        token_name:
          description: Optional name of token (deprecated)
          type: string
        refreshes:
          description: Token lifetime refreshes when used
          type: boolean
      title: CreateAPITokenRequest
      type: object
    AdminUISettingsDetail_response:
      example:
        enabled: true
        username: username
      properties:
        enabled:
          type: boolean
        username:
          type: string
      type: object
    WebhooksListResponse:
      example:
        response:
        - headers:
          - name: name
            value: value
          - name: name
            value: value
          system: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          custom_properties:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          body: body
          parameters:
          - name: name
            value: value
          - name: name
            value: value
          url: url
          events:
          - events
          - events
          validate_cert: true
        - headers:
          - name: name
            value: value
          - name: name
            value: value
          system: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          custom_properties:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          body: body
          parameters:
          - name: name
            value: value
          - name: name
            value: value
          url: url
          events:
          - events
          - events
          validate_cert: true
      properties:
        response:
          items:
            $ref: '#/components/schemas/WebhookIntegration'
          type: array
      title: WebhooksListResponse
      type: object
    RunningContainersDetailResponse:
      example:
        response:
          containers:
          - Path: Path
            Args:
            - Args
            - Args
            ProcessLabel: ProcessLabel
            Platform: Platform
            Config:
              User: User
              Entrypoint: Entrypoint
              AttachStderr: true
              Memory: 0
              Dns: Dns
              VolumesFrom: VolumesFrom
              Hostname: Hostname
              OpenStdin: true
              Env:
                key: ""
              Image: Image
              NetworkDisabled: true
              ExposedPorts:
                key: ""
              StdinOnce: true
              AttachStdout: true
              WorkingDir: WorkingDir
              Volumes: Volumes
              CpuShares: 1
              PortSpecs:
                key: ""
              OnBuild: OnBuild
              AttachStdin: true
              Domainname: Domainname
              MemorySwap: 6
              Tty: true
              Cmd: Cmd
            AppArmorProfile: AppArmorProfile
            Driver: Driver
            VolumesRW:
              key: ""
            HostsPath: HostsPath
            HostnamePath: HostnamePath
            Image: Image
            Created: Created
            Name: Name
            RestartCount: 0
            NetworkSettings:
              HairpinMode: true
              SandboxKey: SandboxKey
              GlobalIPv6Address: GlobalIPv6Address
              Ports:
                key: ""
              GlobalIPv6PrefixLen: 5
              IPPrefixLen: 2
              MacAddress: MacAddress
              SandboxID: SandboxID
              LinkLocalIPv6Address: LinkLocalIPv6Address
              LinkLocalIPv6PrefixLen: 5
              Gateway: Gateway
              EndpointID: EndpointID
              SecondaryIPv6Addresses: SecondaryIPv6Addresses
              IPv6Gateway: IPv6Gateway
              SecondaryIPAddresses: SecondaryIPAddresses
              PortMapping:
                key: ""
              IPAddress: IPAddress
              Bridge: Bridge
            MountLabel: MountLabel
            Volumes:
              key: ""
            State:
              Status: Status
              Restarting: true
              Dead: true
              Ghost: true
              ExitCode: 1
              Running: true
              Error: Error
              FinishedAt: FinishedAt
              OOMKilled: true
              Pid: 6
              StartedAt: StartedAt
              Paused: true
            ResolvConfPath: ResolvConfPath
            ExecIDs:
            - ExecIDs
            - ExecIDs
            HostConfig:
              key: ""
            ExecDriver: ExecDriver
            Id: Id
            LogPath: LogPath
          - Path: Path
            Args:
            - Args
            - Args
            ProcessLabel: ProcessLabel
            Platform: Platform
            Config:
              User: User
              Entrypoint: Entrypoint
              AttachStderr: true
              Memory: 0
              Dns: Dns
              VolumesFrom: VolumesFrom
              Hostname: Hostname
              OpenStdin: true
              Env:
                key: ""
              Image: Image
              NetworkDisabled: true
              ExposedPorts:
                key: ""
              StdinOnce: true
              AttachStdout: true
              WorkingDir: WorkingDir
              Volumes: Volumes
              CpuShares: 1
              PortSpecs:
                key: ""
              OnBuild: OnBuild
              AttachStdin: true
              Domainname: Domainname
              MemorySwap: 6
              Tty: true
              Cmd: Cmd
            AppArmorProfile: AppArmorProfile
            Driver: Driver
            VolumesRW:
              key: ""
            HostsPath: HostsPath
            HostnamePath: HostnamePath
            Image: Image
            Created: Created
            Name: Name
            RestartCount: 0
            NetworkSettings:
              HairpinMode: true
              SandboxKey: SandboxKey
              GlobalIPv6Address: GlobalIPv6Address
              Ports:
                key: ""
              GlobalIPv6PrefixLen: 5
              IPPrefixLen: 2
              MacAddress: MacAddress
              SandboxID: SandboxID
              LinkLocalIPv6Address: LinkLocalIPv6Address
              LinkLocalIPv6PrefixLen: 5
              Gateway: Gateway
              EndpointID: EndpointID
              SecondaryIPv6Addresses: SecondaryIPv6Addresses
              IPv6Gateway: IPv6Gateway
              SecondaryIPAddresses: SecondaryIPAddresses
              PortMapping:
                key: ""
              IPAddress: IPAddress
              Bridge: Bridge
            MountLabel: MountLabel
            Volumes:
              key: ""
            State:
              Status: Status
              Restarting: true
              Dead: true
              Ghost: true
              ExitCode: 1
              Running: true
              Error: Error
              FinishedAt: FinishedAt
              OOMKilled: true
              Pid: 6
              StartedAt: StartedAt
              Paused: true
            ResolvConfPath: ResolvConfPath
            ExecIDs:
            - ExecIDs
            - ExecIDs
            HostConfig:
              key: ""
            ExecDriver: ExecDriver
            Id: Id
            LogPath: LogPath
      properties:
        response:
          $ref: '#/components/schemas/RunningContainersDetail'
      title: RunningContainersDetailResponse
      type: object
    LdapSettings:
      example:
        binddn: binddn
        encrypt_auth_cert: true
        encrypt_ca_cert: true
        port: 0
        encrypt_auth_key: true
        encrypt: true
        host: host
        encrypt_verify_ca: true
        encrypt_ldaps: true
        encrypt_auth: true
      properties:
        host:
          description: IP address or resolvable hostname
          type: string
        port:
          type: integer
        encrypt:
          description: Use SSL
          type: boolean
        encrypt_ldaps:
          description: Use LDAPS or start TLS (default)?
          type: boolean
        encrypt_auth:
          description: Use certificates to authenticate via encrypted connection
          type: boolean
        encrypt_auth_key:
          type: boolean
        encrypt_auth_cert:
          type: boolean
        encrypt_verify_ca:
          description: Verify certicate using authority
          type: boolean
        encrypt_ca_cert:
          type: boolean
        binddn:
          description: Bind username
          type: string
      title: LdapSettings
      type: object
    PacketMonitorDetailResponse:
      example:
        response:
          filter: filter
          duration: duration
          name: name
          destination: destination
          type: type
          interface: interface
      properties:
        response:
          $ref: '#/components/schemas/PacketMonitor'
      title: PacketMonitorDetailResponse
      type: object
    LdapVpnSchemaSettings:
      example:
        vpn_group_list_filter: vpn_group_list_filter
        vpn_group_member_attr_format: UserDN
        vpn_group_search_scope: subtree
        vpn_group_otp: true
        vpn_auth_provider: vpn_auth_provider
        vpn_group_base: vpn_group_base
        vpn_group_id_attribute: vpn_group_id_attribute
        vpn_auth_enabled: true
        vpn_group_otp_url: vpn_group_otp_url
        vpn_group_member_attribute: vpn_group_member_attribute
      properties:
        vpn_auth_enabled:
          type: boolean
        vpn_auth_provider:
          type: string
        vpn_group_base:
          description: Base DN from which to search for Groups
          type: string
        vpn_group_id_attribute:
          description: Attribute type for the Groups
          type: string
        vpn_group_list_filter:
          description: Search filter for Groups
          type: string
        vpn_group_member_attribute:
          description: Attribute used to search for a user within the Group
          type: string
        vpn_group_member_attr_format:
          default: UserDN
          description: Format of the Group Member attribute
          type: string
        vpn_group_search_scope:
          default: subtree
          description: Format of the Group Member attribute
          type: string
        vpn_group_otp:
          type: boolean
        vpn_group_otp_url:
          type: string
      title: LdapVpnSchemaSettings
      type: object
    PluginInstanceFirewallResponse:
      example:
        response:
        - plugin_port: 1
          destination_port: 5
          rule: rule
          tags:
          - tags
          - tags
        - plugin_port: 1
          destination_port: 5
          rule: rule
          tags:
          - tags
          - tags
      properties:
        response:
          items:
            $ref: '#/components/schemas/PluginInstanceFirewallRule'
          type: array
      title: PluginInstanceFirewallResponse
      type: object
    ConnectedSubnet:
      properties:
        subnet:
          type: string
        network:
          type: string
        cidr_mask:
          type: string
        managerid:
          minimum: 1
          type: integer
        netmask:
          type: string
        origin:
          description: "ipsec, local_no_encryption, remote_manager, or ebgp"
          type: string
      title: ConnectedSubnet
      type: object
    ContainerImageListResponse:
      example:
        response:
          images:
          - image_name: image_name
            created: 2000-01-23T04:56:07.000+00:00
            tag_name: tag_name
            import_id: import_id
            container_config:
              User: User
              Entrypoint: Entrypoint
              AttachStderr: true
              Memory: 0
              Dns: Dns
              VolumesFrom: VolumesFrom
              Hostname: Hostname
              OpenStdin: true
              Env:
                key: ""
              Image: Image
              NetworkDisabled: true
              ExposedPorts:
                key: ""
              StdinOnce: true
              AttachStdout: true
              WorkingDir: WorkingDir
              Volumes: Volumes
              CpuShares: 1
              PortSpecs:
                key: ""
              OnBuild: OnBuild
              AttachStdin: true
              Domainname: Domainname
              MemorySwap: 6
              Tty: true
              Cmd: Cmd
            status_msg: status_msg
            description: description
            comment: comment
            id: id
            status: status
          - image_name: image_name
            created: 2000-01-23T04:56:07.000+00:00
            tag_name: tag_name
            import_id: import_id
            container_config:
              User: User
              Entrypoint: Entrypoint
              AttachStderr: true
              Memory: 0
              Dns: Dns
              VolumesFrom: VolumesFrom
              Hostname: Hostname
              OpenStdin: true
              Env:
                key: ""
              Image: Image
              NetworkDisabled: true
              ExposedPorts:
                key: ""
              StdinOnce: true
              AttachStdout: true
              WorkingDir: WorkingDir
              Volumes: Volumes
              CpuShares: 1
              PortSpecs:
                key: ""
              OnBuild: OnBuild
              AttachStdin: true
              Domainname: Domainname
              MemorySwap: 6
              Tty: true
              Cmd: Cmd
            status_msg: status_msg
            description: description
            comment: comment
            id: id
            status: status
      properties:
        response:
          $ref: '#/components/schemas/ContainerImageList'
      title: ContainerImageListResponse
      type: object
    PluginInstance:
      example:
        manager:
          log_files:
          - path: path
            description: description
          - path: path
            description: description
          executables:
          - path: path
            commands:
              key: commands
          - path: path
            commands:
              key: commands
          configuration_files:
          - path: path
            name: name
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            version: 2
            previous_versions:
            - path: path
              created_at: created_at
              version: 7
            - path: path
              created_at: created_at
              version: 7
          - path: path
            name: name
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            version: 2
            previous_versions:
            - path: path
              created_at: created_at
              version: 7
            - path: path
              created_at: created_at
              version: 7
          ports:
          - protocol: protocol
            ui: true
            port: 9
            ui_path: ui_path
            ssl: true
          - protocol: protocol
            ui: true
            port: 9
            ui_path: ui_path
            ssl: true
          process_manager:
            subprocesses:
            - subprocesses
            - subprocesses
            name: name
        data:
          Path: Path
          Args:
          - Args
          - Args
          ProcessLabel: ProcessLabel
          Platform: Platform
          Config:
            User: User
            Entrypoint: Entrypoint
            AttachStderr: true
            Memory: 0
            Dns: Dns
            VolumesFrom: VolumesFrom
            Hostname: Hostname
            OpenStdin: true
            Env:
              key: ""
            Image: Image
            NetworkDisabled: true
            ExposedPorts:
              key: ""
            StdinOnce: true
            AttachStdout: true
            WorkingDir: WorkingDir
            Volumes: Volumes
            CpuShares: 1
            PortSpecs:
              key: ""
            OnBuild: OnBuild
            AttachStdin: true
            Domainname: Domainname
            MemorySwap: 6
            Tty: true
            Cmd: Cmd
          AppArmorProfile: AppArmorProfile
          Driver: Driver
          VolumesRW:
            key: ""
          HostsPath: HostsPath
          HostnamePath: HostnamePath
          Image: Image
          Created: Created
          Name: Name
          RestartCount: 0
          NetworkSettings:
            HairpinMode: true
            SandboxKey: SandboxKey
            GlobalIPv6Address: GlobalIPv6Address
            Ports:
              key: ""
            GlobalIPv6PrefixLen: 5
            IPPrefixLen: 2
            MacAddress: MacAddress
            SandboxID: SandboxID
            LinkLocalIPv6Address: LinkLocalIPv6Address
            LinkLocalIPv6PrefixLen: 5
            Gateway: Gateway
            EndpointID: EndpointID
            SecondaryIPv6Addresses: SecondaryIPv6Addresses
            IPv6Gateway: IPv6Gateway
            SecondaryIPAddresses: SecondaryIPAddresses
            PortMapping:
              key: ""
            IPAddress: IPAddress
            Bridge: Bridge
          MountLabel: MountLabel
          Volumes:
            key: ""
          State:
            Status: Status
            Restarting: true
            Dead: true
            Ghost: true
            ExitCode: 1
            Running: true
            Error: Error
            FinishedAt: FinishedAt
            OOMKilled: true
            Pid: 6
            StartedAt: StartedAt
            Paused: true
          ResolvConfPath: ResolvConfPath
          ExecIDs:
          - ExecIDs
          - ExecIDs
          HostConfig:
            key: ""
          ExecDriver: ExecDriver
          Id: Id
          LogPath: LogPath
        description: description
        created_at: created_at
        ip_address: ip_address
        port_maps:
          key: 5
        uuid: uuid
        url: url
        command: command
        image_name: image_name
        environment: environment
        updated_at: updated_at
        firewall:
        - plugin_port: 1
          destination_port: 5
          rule: rule
          tags:
          - tags
          - tags
        - plugin_port: 1
          destination_port: 5
          rule: rule
          tags:
          - tags
          - tags
        name: name
        status_msg: status_msg
        id: 0
        image_id: 6
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        url:
          type: string
        command:
          type: string
        image_id:
          type: integer
        uuid:
          type: string
        status:
          type: string
        ip_address:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        status_msg:
          type: string
        environment:
          type: string
        image_name:
          type: string
        firewall:
          items:
            $ref: '#/components/schemas/PluginInstanceFirewallRule'
          type: array
        port_maps:
          additionalProperties:
            type: integer
          description: Map of plugin ports -> VNS3 ports
          type: object
        manager:
          $ref: '#/components/schemas/PluginManagerConfig'
        data:
          $ref: '#/components/schemas/Container'
      title: PluginInstance
      type: object
    StopContainerDetailResponse:
      example:
        response:
          uuid: uuid
          status: status
      properties:
        response:
          $ref: '#/components/schemas/StopContainerDetail'
      title: StopContainerDetailResponse
      type: object
    RunPluginInstanceProcessActionRequest:
      example:
        process: process
        action: action
        timeout: 0
      properties:
        process:
          description: |
            Name of the process. Should be listed in  subprocesses list of config.
          type: string
        action:
          description: |
            Action to take. See documentation for supported actions for your process manager.
          type: string
        timeout:
          default: 20
          description: Number of seconds to wait before timing out.
          type: integer
      required:
      - action
      - process
      title: RunPluginInstanceProcessActionRequest
      type: object
    Container_NetworkSettings:
      additionalProperties: true
      example:
        HairpinMode: true
        SandboxKey: SandboxKey
        GlobalIPv6Address: GlobalIPv6Address
        Ports:
          key: ""
        GlobalIPv6PrefixLen: 5
        IPPrefixLen: 2
        MacAddress: MacAddress
        SandboxID: SandboxID
        LinkLocalIPv6Address: LinkLocalIPv6Address
        LinkLocalIPv6PrefixLen: 5
        Gateway: Gateway
        EndpointID: EndpointID
        SecondaryIPv6Addresses: SecondaryIPv6Addresses
        IPv6Gateway: IPv6Gateway
        SecondaryIPAddresses: SecondaryIPAddresses
        PortMapping:
          key: ""
        IPAddress: IPAddress
        Bridge: Bridge
      properties:
        Gateway:
          type: string
        SandboxID:
          type: string
        HairpinMode:
          type: boolean
        Bridge:
          type: string
        LinkLocalIPv6Address:
          type: string
        LinkLocalIPv6PrefixLen:
          type: integer
        SandboxKey:
          type: string
        SecondaryIPAddresses:
          nullable: true
          type: string
        SecondaryIPv6Addresses:
          nullable: true
          type: string
        EndpointID:
          type: string
        GlobalIPv6Address:
          type: string
        GlobalIPv6PrefixLen:
          type: integer
        IPAddress:
          type: string
        IPPrefixLen:
          type: integer
        IPv6Gateway:
          type: string
        MacAddress:
          type: string
        PortMapping:
          additionalProperties: true
          nullable: true
          type: object
        Ports:
          additionalProperties: true
          nullable: true
          type: object
      type: object
    OverwriteRequest:
      example:
        rules: rules
      properties:
        rules:
          type: string
      required:
      - rules
      title: OverwriteRequest
      type: object
    FirewallRuleListResponse:
      example:
        response:
        - - null
          - null
        - - null
          - null
      properties:
        response:
          items:
            description: "IPtables firewall rule represented as array [rule, position]"
            items:
              $ref: '#/components/schemas/FirewallRuleTuple_inner'
            title: FirewallRuleTuple
            type: array
          type: array
      title: FirewallRuleListResponse
      type: object
    createInterfaceAddress_request:
      properties:
        label:
          type: string
        description:
          type: string
        ip_internal:
          type: string
        ip_external:
          nullable: true
          type: string
        mask_bits:
          default: 32
          description: between 1 and 32 inclusive
          type: integer
        gateway:
          nullable: true
          type: string
      required:
      - ip_internal
      type: object
    DeleteContainerDetailResponse:
      example:
        response:
          container_deleted: true
          uuid: uuid
      properties:
        response:
          $ref: '#/components/schemas/DeleteContainerDetail'
      title: DeleteContainerDetailResponse
      type: object
    CreatePluginInstancePresetFirewallRule:
      example:
        container_port: 6
        protocol: protocol
        host_port: 0
        preset: preset
      properties:
        preset:
          description: "One of ssh, internet or port_map"
          type: string
        host_port:
          description: VNS3 port. Required for preset "port_map"
          type: integer
        container_port:
          description: Plugin port to map VNS3 port to. Required for preset "port_map"
          type: integer
        protocol:
          description: Protocol for port map. Required for preset "port_map"
          type: string
      required:
      - preset
      title: CreatePluginInstancePresetFirewallRule
      type: object
    UpdateClientpacksStatus:
      example:
        checked_out: true
        enabled: true
      properties:
        enabled:
          type: boolean
        checked_out:
          type: boolean
      title: UpdateClientpacksStatus
      type: object
    SimpleStringResponse:
      example:
        response: response
      properties:
        response:
          type: string
      title: SimpleStringResponse
      type: object
    postTestLdapGroupSchemaSettingsRequest:
      properties:
        group_base:
          description: Base DN from which to search for Groups
          type: string
        group_id_attribute:
          description: Attribute type for the Groups
          type: string
        group_list_filter:
          description: Search filter for Groups
          type: string
        group_member_attribute:
          description: ttribute used to search for a user within the Group
          type: string
        group_member_attr_format:
          description: Format of the Group Member attribute
          type: string
        group_search_scope:
          description: Default=subtree
          type: string
        limit:
          default: 100
          description: Number of records to return. Default = 100
          minimum: 0
          type: integer
      required:
      - group_base
      - group_id_attribute
      title: postTestLdapGroupSchemaSettingsRequest
      type: object
    CreateClientpackTagRequest:
      example:
        value: value
        key: key
      properties:
        key:
          description: Alphanumeric characters allowed in snake_case or kebab-case
          type: string
        value:
          type: string
      required:
      - key
      - value
      title: CreateClientpackTagRequest
      type: object
    ClientpackStatusResponse:
      example:
        response:
          disconnecting: disconnecting
          overlay_ipaddress: overlay_ipaddress
      properties:
        response:
          $ref: '#/components/schemas/ClientpackStatus'
      title: ClientpackStatusResponse
      type: object
    LdapVpnSchemaSettingsResponse:
      example:
        response:
          vpn_group_list_filter: vpn_group_list_filter
          vpn_group_member_attr_format: UserDN
          vpn_group_search_scope: subtree
          vpn_group_otp: true
          vpn_auth_provider: vpn_auth_provider
          vpn_group_base: vpn_group_base
          vpn_group_id_attribute: vpn_group_id_attribute
          vpn_auth_enabled: true
          vpn_group_otp_url: vpn_group_otp_url
          vpn_group_member_attribute: vpn_group_member_attribute
      properties:
        response:
          $ref: '#/components/schemas/LdapVpnSchemaSettings'
      title: LdapVpnSchemaSettingsResponse
      type: object
    SnapshotsList:
      example:
        snapshots:
          key:
            sha1_checksum: sha1_checksum
            size: 6
            created_at: created_at
            created_at_i: 0
            status: status
            token: token
        latest_snapshot: latest_snapshot
      properties:
        latest_snapshot:
          description: Name of the latest snapshot taken
          type: string
        snapshots:
          additionalProperties:
            $ref: '#/components/schemas/SnapshotsList_snapshots_value'
          type: object
      title: SnapshotsList
      type: object
    ContainerSystemActionRequest:
      example:
        action: start
      properties:
        action:
          description: argument to pass
          enum:
          - start
          - stop
          type: string
      required:
      - action
      title: ContainerSystemActionRequest
      type: object
    AccessUrlListResponse:
      example:
        response:
        - expires_at: 2000-01-23T04:56:07.000+00:00
          expired: true
          last_accessed_ip: last_accessed_ip
          name: name
          lifetime: lifetime
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          last_accessed_at: last_accessed_at
          created_ip: created_ip
          url: url
        - expires_at: 2000-01-23T04:56:07.000+00:00
          expired: true
          last_accessed_ip: last_accessed_ip
          name: name
          lifetime: lifetime
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          last_accessed_at: last_accessed_at
          created_ip: created_ip
          url: url
      properties:
        response:
          items:
            $ref: '#/components/schemas/AccessUrl'
          title: AccessUrlList
          type: array
      title: AccessUrlListResponse
      type: object
    InitLicenseDetail:
      example:
        response:
          finalized: true
          license: license
          capabilities:
          - capabilities
          - capabilities
          default_topology:
            overlay_max_clients: 2
            clients:
            - octets:
              - 5
              - 5
              ip_address: ip_address
            - octets:
              - 5
              - 5
              ip_address: ip_address
            total_clients: 7
            ipsec_max_subnets: 9
            ipsec_max_endpoints: 3
            license_upgrades:
            - license_upgrades
            - license_upgrades
            overlay_subnet: overlay_subnet
            managers:
            - manager_id: 1
              overlay_ipaddress:
                octets:
                - 5
                - 5
                ip_address: ip_address
              asn: 5
            - manager_id: 1
              overlay_ipaddress:
                octets:
                - 5
                - 5
                ip_address: ip_address
              asn: 5
          license_present: true
      properties:
        response:
          $ref: '#/components/schemas/LicenseInitial'
      title: InitLicenseDetail
      type: object
    UpdateContainerImageDetail:
      example:
        uuid: uuid
        status: status
      properties:
        uuid:
          type: string
        status:
          type: string
      title: UpdateContainerImageDetail
      type: object
    UpdateIpsecTunnelRequest:
      example:
        ping_interval: 0
        bounce: false
        description: description
        ping_interface: ping_interface
        remote_subnet: remote_subnet
        local_subnet: local_subnet
        ping_ipaddress: ping_ipaddress
        enabled: true
      properties:
        bounce:
          default: false
          description: Resets the IPsec connection for this specific tunnel
          type: boolean
        description:
          type: string
        remote_subnet:
          description: Remote subnet for tunnel in CIDR notation
          type: string
        local_subnet:
          description: Local subnet for tunnel in CIDR notation
          type: string
        ping_ipaddress:
          description: Exo Ping feature - remote IP destination of ping
          type: string
        ping_interval:
          description: Exo Ping feature - periodicy of the ping in seconds
          type: integer
        ping_interface:
          description: Exo Ping feature - what network interface IP of the VNS3 controller
            to use as the source of ping
          type: string
        enabled:
          description: Disables tunnel if set to false
          type: boolean
      title: UpdateIpsecTunnelRequest
      type: object
    TaskTokenResponse:
      example:
        response:
          token: token
          status: status
      properties:
        response:
          $ref: '#/components/schemas/TaskToken'
      title: TaskTokenResponse
      type: object
    Plugin_containers_inner:
      example:
        id: 6
        status: status
      properties:
        id:
          type: integer
        status:
          type: string
      type: object
    RuntimeStatus:
      example:
        ipsec:
          key:
            tunnel_params:
              bytes_in: bytes_in
              isakmp_port: isakmp_port
              last_dpd: last_dpd
              inbound_spi: inbound_spi
              phase1_cipher: phase1_cipher
              nat_t: nat_t
              esp_time_remaining: esp_time_remaining
              esp_port: esp_port
              phase1: phase1
              phase2: phase2
              phase2_algo: phase2_algo
              isakmp_time_remaining: isakmp_time_remaining
              pfs_dh_group: pfs_dh_group
              bytes_out: bytes_out
              ike_version: ike_version
              outbound_spi: outbound_spi
              dpd: dpd
              phase1_dh_group: phase1_dh_group
              phase2_hash: phase2_hash
              phase1_prf: phase1_prf
            bounce: true
            endpointid: 1
            endpoint_name: endpoint_name
            endpoint_id: 1
            active: true
            description: description
            local_subnet: local_subnet
            ping_ipaddress: ping_ipaddress
            enabled: true
            connected: true
            ping_interval: 5
            ping_interface: eth0
            remote_subnet: remote_subnet
            id: 1
        connected_clients:
          key:
            ipaddress: ipaddress
            overlay_ipaddress: overlay_ipaddress
            managerid: 1
            tags:
              key: tags
        connected_subnets:
        - - connected_subnets
          - connected_subnets
        - - connected_subnets
          - connected_subnets
      properties:
        connected_clients:
          additionalProperties:
            $ref: '#/components/schemas/RuntimeStatus_connected_clients_value'
          description: clients keyed by ip address
          type: object
        connected_subnets:
          description: "Array of arrays with each element of length 2 representing\
            \ [network, subnet mask]"
          items:
            items:
              type: string
            type: array
          title: ConnectedSubnets
          type: array
        ipsec:
          additionalProperties:
            $ref: '#/components/schemas/RuntimeStatus_ipsec_value'
          description: IPSEC tunnels keyed by tunnel ID
          type: object
      title: RuntimeStatus
      type: object
    CloudInfo:
      example:
        cloud_type: cloud_type
        cloud_data: null
      properties:
        cloud_type:
          description: "ec2, gce, azure, hpcloud, centurylink"
          type: string
        cloud_data:
          $ref: '#/components/schemas/CloudInfo_cloud_data'
      title: CloudInfo
      type: object
    SimpleStatusResponse_response:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    PluginManagerConfigResponse:
      example:
        response:
          log_files:
          - path: path
            description: description
          - path: path
            description: description
          executables:
          - path: path
            commands:
              key: commands
          - path: path
            commands:
              key: commands
          configuration_files:
          - path: path
            name: name
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            version: 2
            previous_versions:
            - path: path
              created_at: created_at
              version: 7
            - path: path
              created_at: created_at
              version: 7
          - path: path
            name: name
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            version: 2
            previous_versions:
            - path: path
              created_at: created_at
              version: 7
            - path: path
              created_at: created_at
              version: 7
          ports:
          - protocol: protocol
            ui: true
            port: 9
            ui_path: ui_path
            ssl: true
          - protocol: protocol
            ui: true
            port: 9
            ui_path: ui_path
            ssl: true
          process_manager:
            subprocesses:
            - subprocesses
            - subprocesses
            name: name
      properties:
        response:
          $ref: '#/components/schemas/PluginManagerConfig'
      title: PluginManagerConfigResponse
      type: object
    PluginManagerCommandResponse_response:
      example:
        output: output
        failed: true
        error: error
        timeout: true
      properties:
        output:
          type: string
        timeout:
          type: boolean
        failed:
          type: boolean
        error:
          type: string
      type: object
    RunPluginInstanceExeCommandRequest:
      example:
        executable_path: executable_path
        command: command
        timeout: 0
      properties:
        command:
          description: The command to run. (A key in the commands object)
          type: string
        executable_path:
          description: |
            Path to the executable. This is required if more  than 1 executable is defined.
          type: string
        timeout:
          default: 30
          description: Number of seconds to wait before timing out.
          type: integer
      required:
      - command
      title: RunPluginInstanceExeCommandRequest
      type: object
    GCECloudInfo:
      additionalProperties: true
      description: Metadata returned from GCE metadata call.
      properties:
        projectId:
          type: string
      title: GCECloudInfo
      type: object
    FirewallRuleOperationResponse:
      example:
        response:
          rule: rule
          position: 0
          status: status
          token: token
      properties:
        response:
          $ref: '#/components/schemas/FirewallRuleOperationData'
      title: FirewallRuleOperationResponse
      type: object
    CreateImageDetailResponse:
      example:
        response:
          import_uuid: import_uuid
          status: status
      properties:
        response:
          $ref: '#/components/schemas/CreateImageDetail'
      title: CreateImageDetailResponse
      type: object
    PluginManagerConfigProcessManagerResponse:
      example:
        response:
          subprocesses:
          - subprocesses
          - subprocesses
          name: name
      properties:
        response:
          $ref: '#/components/schemas/PluginManagerConfigProcessManager'
      title: PluginManagerConfigProcessManagerResponse
      type: object
    WebhookCustomProperty:
      example:
        name: name
        description: description
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        description:
          type: string
      title: WebhookCustomProperty
      type: object
    postTestAlert_200_response_response:
      example:
        code: code
        message: message
        status: status
      properties:
        status:
          description: success or failed
          type: string
        code:
          description: status code
          type: string
        message:
          type: string
      type: object
    ClientpackStatus:
      example:
        disconnecting: disconnecting
        overlay_ipaddress: overlay_ipaddress
      properties:
        disconnecting:
          type: string
        overlay_ipaddress:
          type: string
      title: ClientpackStatus
      type: object
    ContainerSystemStatus_running:
      oneOf:
      - type: string
      - type: boolean
    ClientpackTagKeyRequest:
      example:
        key: key
      properties:
        key:
          type: string
      required:
      - key
      title: ClientpackTagKeyRequest
      type: object
    ConnectedSubnetsDetailResponse:
      example:
        response: null
      properties:
        response:
          $ref: '#/components/schemas/ConnectedSubnetsDetail'
      title: ConnectedSubnetsDetailResponse
      type: object
    ClientpackDetail:
      example:
        clientpack:
          tarball_file: tarball_file
          ipaddress: ipaddress
          sequential_id: 0
          conf_sha1: conf_sha1
          ovpn_sha1: ovpn_sha1
          overlay_ipaddress: overlay_ipaddress
          checked_out: true
          windows_onefile: windows_onefile
          enabled: true
          zip_sha1: zip_sha1
          tags:
            key: tags
          connected: true
          linux_onefile: linux_onefile
          last_disconnect: last_disconnect
          manager_id: manager_id
          name: name
          tarball_sha1: tarball_sha1
          last_connect: last_connect
          compression: compression
          zip_file: zip_file
          status: status
      properties:
        clientpack:
          $ref: '#/components/schemas/ClientpackList'
      title: ClientpackDetail
      type: object
    PluginManagerConfig:
      additionalProperties: true
      example:
        log_files:
        - path: path
          description: description
        - path: path
          description: description
        executables:
        - path: path
          commands:
            key: commands
        - path: path
          commands:
            key: commands
        configuration_files:
        - path: path
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          version: 2
          previous_versions:
          - path: path
            created_at: created_at
            version: 7
          - path: path
            created_at: created_at
            version: 7
        - path: path
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          version: 2
          previous_versions:
          - path: path
            created_at: created_at
            version: 7
          - path: path
            created_at: created_at
            version: 7
        ports:
        - protocol: protocol
          ui: true
          port: 9
          ui_path: ui_path
          ssl: true
        - protocol: protocol
          ui: true
          port: 9
          ui_path: ui_path
          ssl: true
        process_manager:
          subprocesses:
          - subprocesses
          - subprocesses
          name: name
      properties:
        log_files:
          items:
            $ref: '#/components/schemas/PluginManagerConfig_log_files_inner'
          type: array
        configuration_files:
          items:
            $ref: '#/components/schemas/PluginManagerConfigConfigFile'
          type: array
        ports:
          items:
            $ref: '#/components/schemas/PluginManagerConfigPort'
          type: array
        process_manager:
          $ref: '#/components/schemas/PluginManagerConfigProcessManager'
        executables:
          items:
            $ref: '#/components/schemas/PluginManagerConfigExecutable'
          type: array
      title: PluginManagerConfig
      type: object
    ContainerSystem:
      example:
        container_network: container_network
        containers_active: 2
        images_limit: 1
        images_stored: 5
        containers_limit: 5
        container_system_running: true
      properties:
        container_system_running:
          type: boolean
        images_limit:
          type: integer
        images_stored:
          type: integer
        containers_limit:
          type: integer
        containers_active:
          type: integer
        container_network:
          type: string
      title: ContainerSystem
      type: object
    LinkHistoryDetail:
      example:
        response:
          tunnelid: 1
          history:
          - timestamp_i: 6
            event: event
            timestamp: timestamp
          - timestamp_i: 6
            event: event
            timestamp: timestamp
          remote: remote
          local: local
      properties:
        response:
          $ref: '#/components/schemas/LinkHistory'
      title: LinkHistoryDetail
      type: object
    LdapSettingsResponse:
      example:
        response:
          binddn: binddn
          encrypt_auth_cert: true
          encrypt_ca_cert: true
          port: 0
          encrypt_auth_key: true
          encrypt: true
          host: host
          encrypt_verify_ca: true
          encrypt_ldaps: true
          encrypt_auth: true
      properties:
        response:
          $ref: '#/components/schemas/LdapSettings'
      title: LdapSettingsResponse
      type: object
    SnapshotImportStatusResponse:
      example:
        response:
          log_lines:
          - log_lines
          - log_lines
          snapshot: snapshot
      properties:
        response:
          $ref: '#/components/schemas/SnapshotImportStatus'
      title: SnapshotImportStatusResponse
      type: object
    KeysetStatus:
      example:
        running: 0
        in_progress: true
        keyset_present: true
        checksum: checksum
        created_at: created_at
        created_at_i: 6
        started_at: started_at
        started_at_i: 1
        uuid: uuid
      properties:
        in_progress:
          type: boolean
        running:
          type: integer
        keyset_present:
          type: boolean
        checksum:
          type: string
        created_at:
          type: string
        created_at_i:
          type: integer
        started_at:
          type: string
        started_at_i:
          type: integer
        uuid:
          type: string
      title: KeysetStatus
      type: object
    BulkClientResetStatusResponse:
      example:
        response:
          resetting:
          - resetting
          - resetting
      properties:
        response:
          $ref: '#/components/schemas/BulkClientResetStatus'
      title: BulkClientResetStatusResponse
      type: object
    AccessTokenListResponse:
      example:
        response:
        - refreshes: true
          expires_at: 2000-01-23T04:56:07.000+00:00
          expired: true
          last_accessed_ip: last_accessed_ip
          name: name
          lifetime: lifetime
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          last_accessed_at: last_accessed_at
          created_ip: created_ip
          token: token
        - refreshes: true
          expires_at: 2000-01-23T04:56:07.000+00:00
          expired: true
          last_accessed_ip: last_accessed_ip
          name: name
          lifetime: lifetime
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          last_accessed_at: last_accessed_at
          created_ip: created_ip
          token: token
      properties:
        response:
          items:
            $ref: '#/components/schemas/AccessToken'
          title: AccessTokenList
          type: array
      title: AccessTokenListResponse
      type: object
    ContainerLogsResponse:
      example:
        response:
          uuid: uuid
          logs:
          - logs
          - logs
      properties:
        response:
          $ref: '#/components/schemas/ContainerLogs'
      title: ContainerLogsResponse
      type: object
    UpdateClientpacksStatusResponse:
      example:
        response:
          checked_out: true
          enabled: true
      properties:
        response:
          $ref: '#/components/schemas/UpdateClientpacksStatus'
      title: UpdateClientpacksStatusResponse
      type: object
    CreateIpsecTunnelRequest:
      example:
        ping_interval: 0
        ping_interface: ping_interface
        description: description
        remote_subnet: remote_subnet
        local_subnet: local_subnet
        ping_ipaddress: ping_ipaddress
        enabled: true
      properties:
        remote_subnet:
          description: Remote subnet for tunnel in CIDR notation
          type: string
        local_subnet:
          description: Local subnet for tunnel in CIDR notation
          type: string
        ping_ipaddress:
          description: Exo Ping feature - remote IP destination of ping
          type: string
        ping_interval:
          description: Exo Ping feature - periodicy of the ping in seconds
          type: integer
        ping_interface:
          description: Exo Ping feature - what network interface IP of the VNS3 controller
            to use as the source of ping
          type: string
        enabled:
          default: true
          description: Disables tunnel if set to false
          type: boolean
        description:
          type: string
      required:
      - remote_subnet
      title: CreateIpsecTunnelRequest
      type: object
    MSConfig:
      example:
        response:
          ip: ip
          alert_enabled: true
      properties:
        response:
          $ref: '#/components/schemas/MSConfig_response'
      title: MSConfig
      type: object
    PutFirewallRuleRequest:
      example:
        rules: rules
      properties:
        rules:
          description: New-line delimited string of firewall rules.
          type: string
      required:
      - rules
      title: PutFirewallRuleRequest
      type: object
    ContainerConfig:
      additionalProperties: true
      example:
        User: User
        Entrypoint: Entrypoint
        AttachStderr: true
        Memory: 0
        Dns: Dns
        VolumesFrom: VolumesFrom
        Hostname: Hostname
        OpenStdin: true
        Env:
          key: ""
        Image: Image
        NetworkDisabled: true
        ExposedPorts:
          key: ""
        StdinOnce: true
        AttachStdout: true
        WorkingDir: WorkingDir
        Volumes: Volumes
        CpuShares: 1
        PortSpecs:
          key: ""
        OnBuild: OnBuild
        AttachStdin: true
        Domainname: Domainname
        MemorySwap: 6
        Tty: true
        Cmd: Cmd
      nullable: true
      properties:
        Entrypoint:
          nullable: true
          type: string
        Dns:
          nullable: true
          type: string
        OpenStdin:
          type: boolean
        StdinOnce:
          type: boolean
        AttachStderr:
          type: boolean
        AttachStdout:
          type: boolean
        AttachStdin:
          type: boolean
        Env:
          additionalProperties: true
          nullable: true
          type: object
        User:
          type: string
        Tty:
          type: boolean
        ExposedPorts:
          additionalProperties: true
          nullable: true
          type: object
        Memory:
          type: integer
        MemorySwap:
          type: integer
        VolumesFrom:
          type: string
        Volumes:
          nullable: true
          type: string
        Cmd:
          nullable: true
          type: string
        PortSpecs:
          additionalProperties: true
          nullable: true
          type: object
        Image:
          type: string
        WorkingDir:
          type: string
        CpuShares:
          type: integer
        NetworkDisabled:
          type: boolean
        Domainname:
          type: string
        OnBuild:
          nullable: true
          type: string
        Hostname:
          type: string
      title: ContainerConfig
      type: object
    CloudInfo_cloud_data:
      oneOf:
      - $ref: '#/components/schemas/EC2CloudInfo'
      - $ref: '#/components/schemas/GCECloudInfo'
    Container:
      additionalProperties: true
      example:
        Path: Path
        Args:
        - Args
        - Args
        ProcessLabel: ProcessLabel
        Platform: Platform
        Config:
          User: User
          Entrypoint: Entrypoint
          AttachStderr: true
          Memory: 0
          Dns: Dns
          VolumesFrom: VolumesFrom
          Hostname: Hostname
          OpenStdin: true
          Env:
            key: ""
          Image: Image
          NetworkDisabled: true
          ExposedPorts:
            key: ""
          StdinOnce: true
          AttachStdout: true
          WorkingDir: WorkingDir
          Volumes: Volumes
          CpuShares: 1
          PortSpecs:
            key: ""
          OnBuild: OnBuild
          AttachStdin: true
          Domainname: Domainname
          MemorySwap: 6
          Tty: true
          Cmd: Cmd
        AppArmorProfile: AppArmorProfile
        Driver: Driver
        VolumesRW:
          key: ""
        HostsPath: HostsPath
        HostnamePath: HostnamePath
        Image: Image
        Created: Created
        Name: Name
        RestartCount: 0
        NetworkSettings:
          HairpinMode: true
          SandboxKey: SandboxKey
          GlobalIPv6Address: GlobalIPv6Address
          Ports:
            key: ""
          GlobalIPv6PrefixLen: 5
          IPPrefixLen: 2
          MacAddress: MacAddress
          SandboxID: SandboxID
          LinkLocalIPv6Address: LinkLocalIPv6Address
          LinkLocalIPv6PrefixLen: 5
          Gateway: Gateway
          EndpointID: EndpointID
          SecondaryIPv6Addresses: SecondaryIPv6Addresses
          IPv6Gateway: IPv6Gateway
          SecondaryIPAddresses: SecondaryIPAddresses
          PortMapping:
            key: ""
          IPAddress: IPAddress
          Bridge: Bridge
        MountLabel: MountLabel
        Volumes:
          key: ""
        State:
          Status: Status
          Restarting: true
          Dead: true
          Ghost: true
          ExitCode: 1
          Running: true
          Error: Error
          FinishedAt: FinishedAt
          OOMKilled: true
          Pid: 6
          StartedAt: StartedAt
          Paused: true
        ResolvConfPath: ResolvConfPath
        ExecIDs:
        - ExecIDs
        - ExecIDs
        HostConfig:
          key: ""
        ExecDriver: ExecDriver
        Id: Id
        LogPath: LogPath
      properties:
        Id:
          type: string
        Created:
          type: string
        Path:
          type: string
        RestartCount:
          type: integer
        Args:
          items:
            type: string
          type: array
        AppArmorProfile:
          type: string
        Image:
          type: string
        Config:
          $ref: '#/components/schemas/ContainerConfig'
        State:
          $ref: '#/components/schemas/Container_State'
        NetworkSettings:
          $ref: '#/components/schemas/Container_NetworkSettings'
        ResolvConfPath:
          type: string
        HostnamePath:
          type: string
        HostsPath:
          type: string
        LogPath:
          type: string
        Name:
          type: string
        Platform:
          type: string
        Driver:
          type: string
        ExecDriver:
          type: string
        MountLabel:
          type: string
        ProcessLabel:
          type: string
        ExecIDs:
          items:
            type: string
          nullable: true
          type: array
        Volumes:
          additionalProperties: true
          nullable: true
          type: object
        VolumesRW:
          additionalProperties: true
          nullable: true
          type: object
        HostConfig:
          additionalProperties: true
          nullable: true
          type: object
      title: Container
      type: object
    CloudInfoDetail:
      example:
        response:
          cloud_type: cloud_type
          cloud_data: null
      properties:
        response:
          $ref: '#/components/schemas/CloudInfo'
      title: CloudInfoDetail
      type: object
    EC2CloudInfo:
      additionalProperties: true
      description: |
        Metadata returned from AWS instance metadata call.
      properties:
        accountId:
          type: string
        availabilityZone:
          type: string
        ramdiskId:
          nullable: true
          type: string
        kernelId:
          nullable: true
          type: string
        pendingTime:
          type: string
        architecture:
          type: string
        privateIp:
          type: string
        devpayProductCodes:
          nullable: true
          type: string
        marketplaceProductCodes:
          nullable: true
          type: string
        version:
          type: string
        region:
          type: string
        imageId:
          type: string
        billingProducts:
          nullable: true
          type: string
        instanceId:
          type: string
        instanceType:
          type: string
      title: EC2CloudInfo
      type: object
    putLdapVpnSchemaSettingsRequest:
      properties:
        vpn_auth_enabled:
          description: "Enable use of LDAP through VPN. If true, other params required."
          type: boolean
        vpn_group_base:
          description: Base DN from which to search for Groups
          type: string
        vpn_group_id_attribute:
          description: Attribute type for the Groups
          type: string
        vpn_group_list_filter:
          description: Search filter for Groups
          type: string
        vpn_group_member_attribute:
          description: Attribute used to search for a user within the Group
          type: string
        vpn_group_member_attr_format:
          default: UserDN
          description: Format of the Group Member attribute
          type: string
        vpn_group_search_scope:
          default: subtree
          description: Search scope for filter
          type: string
        vpn_group_otp:
          default: false
          description: Use Google authenticator (OTP)?
          type: boolean
      required:
      - vpn_auth_enabled
      - vpn_group_base
      - vpn_group_id_attribute
      - vpn_group_member_attribute
      title: putLdapVpnSchemaSettingsRequest
      type: object
    RunningContainersDetail:
      example:
        containers:
        - Path: Path
          Args:
          - Args
          - Args
          ProcessLabel: ProcessLabel
          Platform: Platform
          Config:
            User: User
            Entrypoint: Entrypoint
            AttachStderr: true
            Memory: 0
            Dns: Dns
            VolumesFrom: VolumesFrom
            Hostname: Hostname
            OpenStdin: true
            Env:
              key: ""
            Image: Image
            NetworkDisabled: true
            ExposedPorts:
              key: ""
            StdinOnce: true
            AttachStdout: true
            WorkingDir: WorkingDir
            Volumes: Volumes
            CpuShares: 1
            PortSpecs:
              key: ""
            OnBuild: OnBuild
            AttachStdin: true
            Domainname: Domainname
            MemorySwap: 6
            Tty: true
            Cmd: Cmd
          AppArmorProfile: AppArmorProfile
          Driver: Driver
          VolumesRW:
            key: ""
          HostsPath: HostsPath
          HostnamePath: HostnamePath
          Image: Image
          Created: Created
          Name: Name
          RestartCount: 0
          NetworkSettings:
            HairpinMode: true
            SandboxKey: SandboxKey
            GlobalIPv6Address: GlobalIPv6Address
            Ports:
              key: ""
            GlobalIPv6PrefixLen: 5
            IPPrefixLen: 2
            MacAddress: MacAddress
            SandboxID: SandboxID
            LinkLocalIPv6Address: LinkLocalIPv6Address
            LinkLocalIPv6PrefixLen: 5
            Gateway: Gateway
            EndpointID: EndpointID
            SecondaryIPv6Addresses: SecondaryIPv6Addresses
            IPv6Gateway: IPv6Gateway
            SecondaryIPAddresses: SecondaryIPAddresses
            PortMapping:
              key: ""
            IPAddress: IPAddress
            Bridge: Bridge
          MountLabel: MountLabel
          Volumes:
            key: ""
          State:
            Status: Status
            Restarting: true
            Dead: true
            Ghost: true
            ExitCode: 1
            Running: true
            Error: Error
            FinishedAt: FinishedAt
            OOMKilled: true
            Pid: 6
            StartedAt: StartedAt
            Paused: true
          ResolvConfPath: ResolvConfPath
          ExecIDs:
          - ExecIDs
          - ExecIDs
          HostConfig:
            key: ""
          ExecDriver: ExecDriver
          Id: Id
          LogPath: LogPath
        - Path: Path
          Args:
          - Args
          - Args
          ProcessLabel: ProcessLabel
          Platform: Platform
          Config:
            User: User
            Entrypoint: Entrypoint
            AttachStderr: true
            Memory: 0
            Dns: Dns
            VolumesFrom: VolumesFrom
            Hostname: Hostname
            OpenStdin: true
            Env:
              key: ""
            Image: Image
            NetworkDisabled: true
            ExposedPorts:
              key: ""
            StdinOnce: true
            AttachStdout: true
            WorkingDir: WorkingDir
            Volumes: Volumes
            CpuShares: 1
            PortSpecs:
              key: ""
            OnBuild: OnBuild
            AttachStdin: true
            Domainname: Domainname
            MemorySwap: 6
            Tty: true
            Cmd: Cmd
          AppArmorProfile: AppArmorProfile
          Driver: Driver
          VolumesRW:
            key: ""
          HostsPath: HostsPath
          HostnamePath: HostnamePath
          Image: Image
          Created: Created
          Name: Name
          RestartCount: 0
          NetworkSettings:
            HairpinMode: true
            SandboxKey: SandboxKey
            GlobalIPv6Address: GlobalIPv6Address
            Ports:
              key: ""
            GlobalIPv6PrefixLen: 5
            IPPrefixLen: 2
            MacAddress: MacAddress
            SandboxID: SandboxID
            LinkLocalIPv6Address: LinkLocalIPv6Address
            LinkLocalIPv6PrefixLen: 5
            Gateway: Gateway
            EndpointID: EndpointID
            SecondaryIPv6Addresses: SecondaryIPv6Addresses
            IPv6Gateway: IPv6Gateway
            SecondaryIPAddresses: SecondaryIPAddresses
            PortMapping:
              key: ""
            IPAddress: IPAddress
            Bridge: Bridge
          MountLabel: MountLabel
          Volumes:
            key: ""
          State:
            Status: Status
            Restarting: true
            Dead: true
            Ghost: true
            ExitCode: 1
            Running: true
            Error: Error
            FinishedAt: FinishedAt
            OOMKilled: true
            Pid: 6
            StartedAt: StartedAt
            Paused: true
          ResolvConfPath: ResolvConfPath
          ExecIDs:
          - ExecIDs
          - ExecIDs
          HostConfig:
            key: ""
          ExecDriver: ExecDriver
          Id: Id
          LogPath: LogPath
      properties:
        containers:
          items:
            $ref: '#/components/schemas/Container'
          type: array
      title: RunningContainersDetail
      type: object
    PluginManagerConfigConfigFile_previous_versions_inner:
      example:
        path: path
        created_at: created_at
        version: 7
      properties:
        version:
          type: integer
        path:
          type: string
        created_at:
          type: string
      type: object
    BulkClientResetStatus:
      example:
        resetting:
        - resetting
        - resetting
      properties:
        resetting:
          description: Cient IPs being reset
          items:
            type: string
          type: array
      title: BulkClientResetStatus
      type: object
    MSConfig_response:
      example:
        ip: ip
        alert_enabled: true
      properties:
        ip:
          description: IP address of VNS3 Management Systems
          type: string
        alert_enabled:
          description: Enable alerting to MS
          type: boolean
      type: object
    LdapUserSettings:
      example:
        user_base: user_base
        user_id_attribute: 0
        user_list_filter: user_list_filter
      properties:
        user_base:
          description: Base DN from which to search for Users
          type: string
        user_id_attribute:
          description: Attribute type for the Users
          type: integer
        user_list_filter:
          description: Search filter for Users
          type: string
      title: LdapUserSettings
      type: object
    RuntimeStatus_ipsec_value:
      example:
        tunnel_params:
          bytes_in: bytes_in
          isakmp_port: isakmp_port
          last_dpd: last_dpd
          inbound_spi: inbound_spi
          phase1_cipher: phase1_cipher
          nat_t: nat_t
          esp_time_remaining: esp_time_remaining
          esp_port: esp_port
          phase1: phase1
          phase2: phase2
          phase2_algo: phase2_algo
          isakmp_time_remaining: isakmp_time_remaining
          pfs_dh_group: pfs_dh_group
          bytes_out: bytes_out
          ike_version: ike_version
          outbound_spi: outbound_spi
          dpd: dpd
          phase1_dh_group: phase1_dh_group
          phase2_hash: phase2_hash
          phase1_prf: phase1_prf
        bounce: true
        endpointid: 1
        endpoint_name: endpoint_name
        endpoint_id: 1
        active: true
        description: description
        local_subnet: local_subnet
        ping_ipaddress: ping_ipaddress
        enabled: true
        connected: true
        ping_interval: 5
        ping_interface: eth0
        remote_subnet: remote_subnet
        id: 1
      properties:
        id:
          minimum: 1
          type: integer
        local_subnet:
          type: string
        remote_subnet:
          type: string
        endpointid:
          minimum: 1
          type: integer
        endpoint_id:
          minimum: 1
          type: integer
        endpoint_name:
          type: string
        enabled:
          type: boolean
        active:
          type: boolean
        description:
          nullable: true
          type: string
        bounce:
          description: True if tunnel was just bounced
          type: boolean
        connected:
          type: boolean
        ping_interface:
          enum:
          - eth0
          - tun0
          type: string
        ping_interval:
          description: Interval for ping in seconds
          nullable: true
          type: integer
        ping_ipaddress:
          type: string
        tunnel_params:
          $ref: '#/components/schemas/IpsecTunnelParams'
      title: IpsecTunnel
      type: object
    SSLCert:
      example:
        before: before
        subject: subject
        sha1_fingerprint: sha1_fingerprint
        after: after
        sha256_fingerprint: sha256_fingerprint
        issuer: issuer
        algorithm: algorithm
      properties:
        subject:
          type: string
        issuer:
          type: string
        before:
          type: string
        after:
          type: string
        algorithm:
          type: string
        sha1_fingerprint:
          type: string
        sha256_fingerprint:
          type: string
      title: SSLCert
      type: object
    InterfaceAddress:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        ip_internal: ip_internal
        mask_bits: 0
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        ip_external: ip_external
        gateway: gateway
      properties:
        ip_internal:
          type: string
        ip_external:
          type: string
        description:
          type: string
        gateway:
          type: string
        mask_bits:
          type: integer
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      title: InterfaceAddress
      type: object
    CreatePeerRequest:
      example:
        name: name
        overlay_mtu: overlay_mtu
        force: true
        id: 0
      properties:
        id:
          description: "Manager ID as an integer of the the manager you are peering\
            \ with,  NOT the id of the one you are calling from\n"
          type: integer
        name:
          description: IP address or host name of the one you are peering with.
          type: string
        overlay_mtu:
          description: link MTU between 500 and 4800. Defaults to 1500
          type: string
        force:
          description: |
            Setting false will NOT finalize the peering operation.  A peer "reconfigure" call would then be required. Default is true
          type: boolean
      required:
      - id
      - name
      title: CreatePeerRequest
      type: object
    CommandOutput_inner:
      anyOf:
      - type: string
      - additionalProperties: true
        nullable: true
        type: object
    GREEndpoint_allOf:
      properties:
        id:
          minimum: 1
          type: integer
        interface_id:
          minimum: 1
          type: integer
        ip_external:
          nullable: true
          type: string
        name:
          type: string
        interface_type:
          description: system or system_virtual
          type: string
        status:
          description: "Availability of interface, Up or Down"
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
    LicenseParametersState:
      example:
        finalized: true
        license: license
        parameters:
          subnet: subnet
          clients:
          - clients
          - clients
          controllers:
          - controllers
          - controllers
          asns:
          - 0
          - 0
          my_manager_vip: my_manager_vip
          managers:
          - managers
          - managers
      properties:
        license:
          type: string
        finalized:
          type: boolean
        parameters:
          $ref: '#/components/schemas/LicenseParameters'
      title: LicenseParametersState
      type: object
    SimpleStringListResponse:
      example:
        response:
        - response
        - response
      properties:
        response:
          description: Array of string representation of resource
          items:
            type: string
          type: array
      title: SimpleStringListResponse
      type: object
    SSLCertsResponse:
      example:
        response:
          certs:
          - before: before
            subject: subject
            sha1_fingerprint: sha1_fingerprint
            after: after
            sha256_fingerprint: sha256_fingerprint
            issuer: issuer
            algorithm: algorithm
          - before: before
            subject: subject
            sha1_fingerprint: sha1_fingerprint
            after: after
            sha256_fingerprint: sha256_fingerprint
            issuer: issuer
            algorithm: algorithm
      properties:
        response:
          $ref: '#/components/schemas/SSLCertsResponse_response'
      title: SSLCertsResponse
      type: object
    TaskStatusDetail:
      example:
        response:
          task_status: task_status
      properties:
        response:
          $ref: '#/components/schemas/TaskStatus'
      title: TaskStatusDetail
      type: object
    ClientpackDetailResponse:
      example:
        response:
          clientpack:
            tarball_file: tarball_file
            ipaddress: ipaddress
            sequential_id: 0
            conf_sha1: conf_sha1
            ovpn_sha1: ovpn_sha1
            overlay_ipaddress: overlay_ipaddress
            checked_out: true
            windows_onefile: windows_onefile
            enabled: true
            zip_sha1: zip_sha1
            tags:
              key: tags
            connected: true
            linux_onefile: linux_onefile
            last_disconnect: last_disconnect
            manager_id: manager_id
            name: name
            tarball_sha1: tarball_sha1
            last_connect: last_connect
            compression: compression
            zip_file: zip_file
            status: status
      properties:
        response:
          $ref: '#/components/schemas/ClientpackDetail'
      title: ClientpackDetailResponse
      type: object
    InterfaceActionRequest:
      example:
        discover_ips: true
        discover_new_primary_adapters: true
        manage_overlay_interfaces: true
        discover_links: true
      properties:
        discover_new_primary_adapters:
          description: Run discovery for new primary adapters
          type: boolean
        discover_ips:
          type: boolean
        manage_overlay_interfaces:
          type: boolean
        discover_links:
          type: boolean
      title: InterfaceActionRequest
      type: object
    CreateFWSubgroupRequest:
      example:
        flush: true
        name: name
        rules: rules
        position: 0
      oneOf:
      - required:
        - name
      - required:
        - rules
      properties:
        rules:
          description: Chained firewall rules seperated by \n. Rule should be preceded
            by group name
          type: string
        name:
          description: "'name of the subgroup. Must be valid chain that begins with\
            \ one of the following: PRE_C_, PST_C_, FWD_C_, INP_C_, OUT_C_.' \n"
          type: string
        position:
          description: "Position which the chain will be inserted in the list of Firewall\
            \ rules.  Default is 0, which is first in the ruleset\n"
          type: integer
        flush:
          default: true
          type: boolean
      title: CreateFWSubgroupRequest
      type: object
    PacketMonitorsListResponse:
      example:
        response:
        - filter: filter
          duration: duration
          name: name
          destination: destination
          type: type
          interface: interface
        - filter: filter
          duration: duration
          name: name
          destination: destination
          type: type
          interface: interface
      properties:
        response:
          items:
            $ref: '#/components/schemas/PacketMonitor'
          type: array
      title: PacketMonitorsListResponse
      type: object
    CreateFirewallRuleRequest:
      example:
        rule: rule
        position: 0
      properties:
        rule:
          description: New firewall rule string that needs to be compatible with a
            Linux "iptables" statement
          type: string
        position:
          default: -1
          description: "Position which the rule will be inserted in the list of Firewall\
            \ rules.  Default is -1, which will post as the next rule in the list\n"
          type: integer
      required:
      - rule
      title: CreateFirewallRuleRequest
      type: object
    putUpdateSystemInterface_request:
      properties:
        name:
          type: string
        description:
          type: string
        ip_internal:
          type: string
        ip_external:
          nullable: true
          type: string
        mtu:
          type: integer
        enabled:
          default: false
          type: boolean
        mask_bits:
          type: string
        gateway:
          nullable: true
          type: string
      type: object
    Container_State:
      additionalProperties: true
      example:
        Status: Status
        Restarting: true
        Dead: true
        Ghost: true
        ExitCode: 1
        Running: true
        Error: Error
        FinishedAt: FinishedAt
        OOMKilled: true
        Pid: 6
        StartedAt: StartedAt
        Paused: true
      properties:
        Status:
          type: string
        Running:
          type: boolean
        Paused:
          type: boolean
        Restarting:
          type: boolean
        OOMKilled:
          type: boolean
        Pid:
          type: integer
        ExitCode:
          type: integer
        Error:
          type: string
        StartedAt:
          type: string
        FinishedAt:
          type: string
        Ghost:
          type: boolean
        Dead:
          type: boolean
      type: object
    CreateAlertRequest_custom_properties_inner:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - required
      type: object
    FirewallRuleTuple_inner:
      oneOf:
      - type: string
      - type: integer
    CreateFWSetRequest:
      example:
        flush: true
        name: name
        rules: rules
      properties:
        rules:
          description: Chained firewall rules seperated by "\n"
          type: string
        name:
          description: "'name of the FWSet. Must be valid chain that begins with one\
            \ of the following: NETS_, PORTS_, LIST_.' \n"
          type: string
        flush:
          default: true
          type: boolean
      title: CreateFWSetRequest
      type: object
    UpdateConfigClientpackRequest:
      example:
        checked_out: true
        compression: compression
        enabled: true
      properties:
        enabled:
          description: Enable or disable clientpacks.
          type: boolean
        checked_out:
          description: Update whether clientpacks are checked out and thus unavailable
          type: boolean
        compression:
          description: Turn compression on or off for all. Can be "on" or "off" currently.
          type: string
      title: UpdateConfigClientpackRequest
      type: object
    BGPPeerResponse:
      example:
        response:
          id: 2
          ipaddress: 55.55.55.55
          asn: 65123
          bgp_password: asdfasdf
          access_list: ""
          add_network_distance: true
          add_network_distance_direction: out
          add_network_distance_hops: 0
      properties:
        response:
          $ref: '#/components/schemas/IpsecSystemDetail_response_remote_endpoints_value_bgp_peers_value'
      title: BGPPeerResponse
      type: object
    TaskToken:
      example:
        token: token
        status: status
      properties:
        token:
          type: string
        status:
          type: string
      title: TaskToken
      type: object
    LdapGroupSettingsResponse:
      example:
        response:
          group_required: true
          group_base: group_base
          group_id_attribute: group_id_attribute
          group_member_attribute: group_member_attribute
          group_member_attr_format: UserDN
          group_search_scope: subtree
          group_list_filter: group_list_filter
      properties:
        response:
          $ref: '#/components/schemas/LdapGroupSettings'
      title: LdapGroupSettingsResponse
      type: object
    CommitPluginInstanceImageRequest:
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
      title: CommitPluginInstanceImageRequest
      type: object
    UpdatePluginInstanceConfigFileRequest:
      example:
        content: content
      properties:
        content:
          description: New config file contents
          type: string
      required:
      - content
      title: UpdatePluginInstanceConfigFileRequest
      type: object
    PutLicenseParametersRequest:
      example:
        subnet: subnet
        default: false
        clients: clients
        asns: asns
        my_manager_vip: my_manager_vip
        managers: managers
      properties:
        subnet:
          description: Specifies the CIDR of the virtual network created for use with
            the VNS3 Manager
          type: string
        managers:
          description: Whitespace delimited address string in the subnet to use for
            the VNS3 Controllers' virtual interfaces.
          type: string
        asns:
          description: Whitespace delimited string of ASNs (autonomous system numbers)
            corresponding to the order of the controllers
          type: string
        clients:
          description: "Comma delimited, or hyphenated sequence of addresses for use\
            \ as client addresses in the virtual network."
          type: string
        my_manager_vip:
          description: "IPAddress that must be allocated from the subnet, and be the\
            \ same for all controllers"
          type: string
        default:
          default: false
          description: Specifices whether to use defualt topology addressing as specified
            by the license
          type: boolean
      title: PutLicenseParametersRequest
      type: object
    ContainerSystemIPList:
      example:
        addresses:
        - address: address
          status: status
        - address: address
          status: status
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/ContainerSystemIP'
          type: array
      title: ContainerSystemIPList
      type: object
    OverlayClientsListResponse:
      example:
        response:
          key:
            ipaddress: ipaddress
            overlay_ipaddress: overlay_ipaddress
            managerid: 1
            tags:
              key: tags
      properties:
        response:
          additionalProperties:
            $ref: '#/components/schemas/RuntimeStatus_connected_clients_value'
          description: Client details with IPs as keys
          title: OverlayClientsList
          type: object
      title: OverlayClientsListResponse
      type: object
    SystemStatusDetail:
      example:
        response:
          meminfo:
          - meminfo
          - meminfo
          timestamp_i: 0
          kernel_version: kernel_version
          data:
            sysstat:
            - - vnscubed
              - "597"
              - "1564089901"
              - all
              - '%user'
              - "2.91"
            - - vnscubed
              - "597"
              - "1564089901"
              - all
              - '%nice'
              - "0.02"
            - - vnscubed
              - "597"
              - "1564089901"
              - all
              - '%system'
              - "1.49"
            - - vnscubed
              - "597"
              - "1564089901"
              - all
              - '%iowait'
              - "0.51"
            - - vnscubed
              - "597"
              - "1564089901"
              - all
              - '%steal'
              - "0.01"
          container_system:
            container_network: container_network
            containers_active: 2
            images_limit: 1
            images_stored: 5
            containers_limit: 5
            container_system_running: true
          vns3_version: vns3_version
          loadavg:
          - loadavg
          - loadavg
          diskinfo:
          - - diskinfo
            - diskinfo
          - - diskinfo
            - diskinfo
          timestamp: timestamp
          uptime: 6
          swapinfo:
          - swapinfo
          - swapinfo
      properties:
        response:
          $ref: '#/components/schemas/SystemStatus'
      title: SystemStatusDetail
      type: object
    PeerSelfRequest:
      example:
        force: true
        id: 0
      properties:
        id:
          description: "Cannot be the same as the id of another manager in the topology,\
            \ and  cannot be greater than the number of controllers in the topology\n"
          type: integer
        force:
          type: boolean
      required:
      - id
      title: PeerSelfRequest
      type: object
    Alert_custom_properties_inner:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    LicenseInitial:
      example:
        finalized: true
        license: license
        capabilities:
        - capabilities
        - capabilities
        default_topology:
          overlay_max_clients: 2
          clients:
          - octets:
            - 5
            - 5
            ip_address: ip_address
          - octets:
            - 5
            - 5
            ip_address: ip_address
          total_clients: 7
          ipsec_max_subnets: 9
          ipsec_max_endpoints: 3
          license_upgrades:
          - license_upgrades
          - license_upgrades
          overlay_subnet: overlay_subnet
          managers:
          - manager_id: 1
            overlay_ipaddress:
              octets:
              - 5
              - 5
              ip_address: ip_address
            asn: 5
          - manager_id: 1
            overlay_ipaddress:
              octets:
              - 5
              - 5
              ip_address: ip_address
            asn: 5
        license_present: true
      properties:
        capabilities:
          description: "Features available such as eBGP, CloudWAN, Containers etc."
          items:
            type: string
          type: array
        finalized:
          type: boolean
        license:
          description: "State of license, accepted, in-progress, failed"
          type: string
        license_present:
          type: boolean
        default_topology:
          $ref: '#/components/schemas/Topology'
      title: LicenseInitial
      type: object
    AddClientpackRequest:
      example:
        requested_ips: requested_ips
      properties:
        requested_ips:
          description: CSV of IP addresses to be used for new clientpacks
          type: string
      required:
      - requested_ips
      title: AddClientpackRequest
      type: object
    FirewallFWSetDetail:
      properties:
        response:
          $ref: '#/components/schemas/FirewallFWSetData'
      title: FirewallFWSetDetail
      type: object
    SSLCertsResponse_response:
      example:
        certs:
        - before: before
          subject: subject
          sha1_fingerprint: sha1_fingerprint
          after: after
          sha256_fingerprint: sha256_fingerprint
          issuer: issuer
          algorithm: algorithm
        - before: before
          subject: subject
          sha1_fingerprint: sha1_fingerprint
          after: after
          sha256_fingerprint: sha256_fingerprint
          issuer: issuer
          algorithm: algorithm
      properties:
        certs:
          items:
            $ref: '#/components/schemas/SSLCert'
          type: array
      type: object
    GREEndpointDetail:
      example:
        response: null
      properties:
        response:
          $ref: '#/components/schemas/GREEndpoint'
      title: GREEndpointDetail
      type: object
    PluginManagerConfigListLogFilesResponse:
      example:
        response:
        - path: path
          description: description
        - path: path
          description: description
      properties:
        response:
          items:
            $ref: '#/components/schemas/PluginManagerConfig_log_files_inner'
          type: array
      title: PluginManagerConfigListLogFilesResponse
      type: object
    IpsecLocalEndpoint:
      example:
        ipsec_local_ipaddress: ipsec_local_ipaddress
        ipaddress: ipaddress
        nat_traversal: true
        overlay_subnet: overlay_subnet
        private_ipaddress: private_ipaddress
        asn: 0
      properties:
        nat_traversal:
          type: boolean
        ipaddress:
          type: string
        overlay_subnet:
          type: string
        private_ipaddress:
          type: string
        ipsec_local_ipaddress:
          type: string
        asn:
          type: integer
      title: IpsecLocalEndpoint
      type: object
    ClientpackList:
      example:
        tarball_file: tarball_file
        ipaddress: ipaddress
        sequential_id: 0
        conf_sha1: conf_sha1
        ovpn_sha1: ovpn_sha1
        overlay_ipaddress: overlay_ipaddress
        checked_out: true
        windows_onefile: windows_onefile
        enabled: true
        zip_sha1: zip_sha1
        tags:
          key: tags
        connected: true
        linux_onefile: linux_onefile
        last_disconnect: last_disconnect
        manager_id: manager_id
        name: name
        tarball_sha1: tarball_sha1
        last_connect: last_connect
        compression: compression
        zip_file: zip_file
        status: status
      properties:
        name:
          type: string
        overlay_ipaddress:
          type: string
        linux_onefile:
          type: string
        enabled:
          type: boolean
        conf_sha1:
          type: string
        windows_onefile:
          type: string
        ovpn_sha1:
          type: string
        tarball_file:
          type: string
        tarball_sha1:
          type: string
        sequential_id:
          type: integer
        checked_out:
          type: boolean
        zip_sha1:
          type: string
        zip_file:
          type: string
        last_connect:
          type: string
        last_disconnect:
          type: string
        compression:
          description: "VPN compression status. on, off or error message."
          type: string
        manager_id:
          type: string
        ipaddress:
          type: string
        status:
          type: string
        connected:
          type: boolean
        tags:
          additionalProperties:
            type: string
          description: "Key, value object of tags"
          type: object
      title: ClientPack
      type: object
    CreateWebookRequest_custom_properties_inner:
      example:
        name: name
        description: description
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        description:
          type: string
      required:
      - name
      type: object
    IpsecSystemDetail_response_remote_endpoints_value:
      example:
        ipaddress: ipaddress
        route_based_remote: route_based_remote
        bgp_peers:
          key:
            ipaddress: ipaddress
            connection_detail: connection_detail
            add_network_distance: true
            add_network_distance_hops: 2
            access_list: access_list
            bgp_password: bgp_password
            id: 1
            asn: 5
            add_network_distance_direction: add_network_distance_direction
        route_based_local: route_based_local
        nat_t_enabled: true
        description: description
        psk: psk
        route_based_int_address: route_based_int_address
        type: type
        vpn_type: vpn_type
        tunnels:
          key:
            tunnel_params:
              bytes_in: bytes_in
              isakmp_port: isakmp_port
              last_dpd: last_dpd
              inbound_spi: inbound_spi
              phase1_cipher: phase1_cipher
              nat_t: nat_t
              esp_time_remaining: esp_time_remaining
              esp_port: esp_port
              phase1: phase1
              phase2: phase2
              phase2_algo: phase2_algo
              isakmp_time_remaining: isakmp_time_remaining
              pfs_dh_group: pfs_dh_group
              bytes_out: bytes_out
              ike_version: ike_version
              outbound_spi: outbound_spi
              dpd: dpd
              phase1_dh_group: phase1_dh_group
              phase2_hash: phase2_hash
              phase1_prf: phase1_prf
            bounce: true
            endpointid: 1
            endpoint_name: endpoint_name
            endpoint_id: 1
            active: true
            description: description
            local_subnet: local_subnet
            ping_ipaddress: ping_ipaddress
            enabled: true
            connected: true
            ping_interval: 5
            ping_interface: eth0
            remote_subnet: remote_subnet
            id: 1
        name: name
        ike_version: 1
        id: 1
        pfs: true
        private_ipaddress: private_ipaddress
        extra_config:
        - extra_config
        - extra_config
        gre_interface_address: gre_interface_address
      properties:
        id:
          minimum: 1
          type: integer
        name:
          type: string
        ipaddress:
          type: string
        description:
          type: string
        nat_t_enabled:
          type: boolean
        ike_version:
          type: integer
        pfs:
          description: Perfect forward secrecy enabled
          type: boolean
        private_ipaddress:
          type: string
        extra_config:
          items:
            type: string
          type: array
        tunnels:
          additionalProperties:
            $ref: '#/components/schemas/RuntimeStatus_ipsec_value'
          type: object
        bgp_peers:
          additionalProperties:
            $ref: '#/components/schemas/IpsecSystemDetail_response_remote_endpoints_value_bgp_peers_value'
          type: object
        type:
          description: Indicating Ipsec or GRE over ipsec
          type: string
        vpn_type:
          type: string
        gre_interface_address:
          type: string
        route_based_int_address:
          type: string
        route_based_local:
          type: string
        route_based_remote:
          type: string
        psk:
          type: string
      title: IpsecRemoteEndpoint
      type: object
    FirewallSubgroupListResponse_response:
      oneOf:
      - items:
          description: Begins with name and is followed by Firewall rule. This is
            single rule in the chain.
          title: FirewallSubgroupRule
          type: string
        type: array
      - items:
          items:
            description: Begins with name and is followed by Firewall rule. This is
              single rule in the chain.
            title: FirewallSubgroupRule
            type: string
          type: array
        type: array
    CreateRouteRequest:
      example:
        metric: 6
        description: description
        cidr: cidr
        interface: interface
        gateway: gateway
        tunnel: 1
        advertise: true
      properties:
        cidr:
          description: |
            CIDR of a route that the VNS3 Controller has access  to that it wants to publish throughout the  Routing tables of the overlay network
          type: string
        description:
          type: string
        interface:
          description: Sets the interface where this route will be advertised.
          type: string
        gateway:
          description: "If interface is set, a specific gateway address reachable\
            \ from that interface"
          type: string
        tunnel:
          description: numerical reference for the GRE endpoint id (must provide either
            tunnel OR interface)
          minimum: 1
          type: integer
        advertise:
          description: advertise route to overlay network
          type: boolean
        metric:
          description: weight for route
          type: integer
      required:
      - cidr
      title: CreateRouteRequest
      type: object
    Alert:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        webhook_id: 1
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        custom_properties:
        - name: name
          value: value
        - name: name
          value: value
        url: url
        enabled: true
        events:
        - events
        - events
      properties:
        id:
          minimum: 1
          type: integer
        name:
          type: string
        url:
          nullable: true
          type: string
        enabled:
          type: boolean
        webhook_id:
          minimum: 1
          type: integer
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        events:
          items:
            type: string
          type: array
        custom_properties:
          items:
            $ref: '#/components/schemas/Alert_custom_properties_inner'
          type: array
      title: Alert
      type: object
    FirewallFWSetListResponse:
      example:
        response:
        - response
        - response
      properties:
        response:
          items:
            description: Begins with name and is followed by Firewall rules. This
              is an indexed rule that allows for speedy matching on IPs
            title: FirewallFWSetString
            type: string
          type: array
      title: FirewallFWSetListResponse
      type: object
    RunContainerDetailResponse:
      example:
        response:
          ip_address: ip_address
          uuid: uuid
          container_started: true
          status: status
      properties:
        response:
          $ref: '#/components/schemas/RunContainerDetail'
      title: RunContainerDetailResponse
      type: object
    FirewallSubgroupListResponse:
      example:
        response: null
      properties:
        response:
          $ref: '#/components/schemas/FirewallSubgroupListResponse_response'
      title: FirewallSubgroupListResponse
      type: object
    LicenseParametersDetail:
      example:
        response:
          finalized: true
          license: license
          parameters:
            subnet: subnet
            clients:
            - clients
            - clients
            controllers:
            - controllers
            - controllers
            asns:
            - 0
            - 0
            my_manager_vip: my_manager_vip
            managers:
            - managers
            - managers
      properties:
        response:
          $ref: '#/components/schemas/LicenseParametersState'
      title: LicenseParametersDetail
      type: object
    DeleteContainerImageDetailResponse:
      example:
        response:
          image_deleted: true
          uuid: uuid
      properties:
        response:
          $ref: '#/components/schemas/DeleteContainerImageDetail'
      title: DeleteContainerImageDetailResponse
      type: object
    PluginDetailResponse:
      example:
        response:
          running_containers: 1
          data:
            container_config:
              key: ""
            comment: comment
          tag_name: tag_name
          import_id: import_id
          created_at: created_at
          description: description
          uuid: uuid
          url: url
          name: name
          status_msg: status_msg
          containers:
          - id: 6
            status: status
          - id: 6
            status: status
          id: 0
          status: status
      properties:
        response:
          $ref: '#/components/schemas/Plugin'
      title: PluginDetailResponse
      type: object
    UpdateServerSSLRequest:
      example:
        cert: cert
        key: key
      properties:
        cert:
          type: string
        key:
          type: string
      required:
      - cert
      - key
      title: UpdateServerSSLRequest
      type: object
    postCreateFirewallSubgroup_200_response:
      oneOf:
      - $ref: '#/components/schemas/FirewallSubgroupStatusListResponse'
      - $ref: '#/components/schemas/CommandOutputResponse'
    RemoteSupportStatusResponse:
      example:
        response:
          revoke_credential: true
          enabled: true
      properties:
        response:
          $ref: '#/components/schemas/RemoteSupportStatus'
      title: RemoteSupportStatusResponse
      type: object
    License:
      example:
        finalized: true
        license: license
        capabilities:
        - capabilities
        - capabilities
        sha1_checksum: sha1_checksum
        uploaded_at: uploaded_at
        topology:
          overlay_max_clients: 2
          clients:
          - octets:
            - 5
            - 5
            ip_address: ip_address
          - octets:
            - 5
            - 5
            ip_address: ip_address
          total_clients: 7
          ipsec_max_subnets: 9
          ipsec_max_endpoints: 3
          license_upgrades:
          - license_upgrades
          - license_upgrades
          overlay_subnet: overlay_subnet
          managers:
          - manager_id: 1
            overlay_ipaddress:
              octets:
              - 5
              - 5
              ip_address: ip_address
            asn: 5
          - manager_id: 1
            overlay_ipaddress:
              octets:
              - 5
              - 5
              ip_address: ip_address
            asn: 5
        custom_addressing: true
        my_manager_vip: my_manager_vip
        container_details:
          containers_run_count: 6
          containers_image_count: 1
        license_present: true
        uploaded_at_i: 0
      properties:
        capabilities:
          description: "Features available such as eBGP, CloudWAN etc."
          items:
            type: string
          type: array
        finalized:
          type: boolean
        my_manager_vip:
          type: string
        license:
          description: "State of license, accepted, in-progress, failed"
          type: string
        license_present:
          type: boolean
        sha1_checksum:
          type: string
        uploaded_at:
          type: string
        custom_addressing:
          type: boolean
        uploaded_at_i:
          type: integer
        container_details:
          $ref: '#/components/schemas/License_container_details'
        topology:
          $ref: '#/components/schemas/Topology'
      title: License
      type: object
    RestartStatus:
      example:
        response:
          restart: true
      properties:
        response:
          $ref: '#/components/schemas/RestartStatus_response'
      title: RestartStatus
      type: object
    WebhookParameter:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      title: WebhookParameter
      type: object
    ClientpackTags:
      example:
        name: name
        tags:
          key: tags
      properties:
        name:
          description: Clientpack name
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      title: ClientpackTags
      type: object
    ClientpackTagsResponse:
      example:
        response:
          name: name
          tags:
            key: tags
      properties:
        response:
          $ref: '#/components/schemas/ClientpackTags'
      title: ClientpackTagsResponse
      type: object
    UpdateWebhookRequest:
      example:
        headers:
        - name: name
          value: value
        - name: name
          value: value
        name: name
        custom_properties:
        - name: name
          description: description
          value: value
        - name: name
          description: description
          value: value
        body: body
        parameters:
        - name: name
          value: value
        - name: name
          value: value
        url: url
        events:
        - events
        - events
        validate_cert: true
      properties:
        name:
          type: string
        url:
          type: string
        events:
          default:
          - tunnel_up
          - tunnel_down
          items:
            type: string
          type: array
        body:
          description: Serialized HTTP Post request body
          type: string
        validate_cert:
          type: boolean
        custom_properties:
          items:
            $ref: '#/components/schemas/CreateWebookRequest_custom_properties_inner'
          type: array
        headers:
          items:
            $ref: '#/components/schemas/CreateWebookRequest_headers_inner'
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/CreateWebookRequest_headers_inner'
          type: array
      title: UpdateWebhookRequest
      type: object
    FirewallSubgroupDeleteRequest:
      example:
        name: name
        rules: rules
      properties:
        rules:
          description: Chained firewall rules seperated by "\n"
          type: string
        name:
          description: Name of the subgroup chain. Must be valid chain name.
          type: string
      title: FirewallSubgroupDeleteRequest
      type: object
    UpdateKeysetRequest:
      example:
        source: source
        topology_name: topology_name
        token: token
      properties:
        source:
          description: "If provided, fetches keyset from source manager"
          type: string
        token:
          description: "Arbitrary key used to help randomize the checksum, it must\
            \ be identical for each manager in a topology."
          type: string
        topology_name:
          description: Name for the topology
          type: string
      required:
      - token
      title: UpdateKeysetRequest
      type: object
    IpsecTunnelParams:
      example:
        bytes_in: bytes_in
        isakmp_port: isakmp_port
        last_dpd: last_dpd
        inbound_spi: inbound_spi
        phase1_cipher: phase1_cipher
        nat_t: nat_t
        esp_time_remaining: esp_time_remaining
        esp_port: esp_port
        phase1: phase1
        phase2: phase2
        phase2_algo: phase2_algo
        isakmp_time_remaining: isakmp_time_remaining
        pfs_dh_group: pfs_dh_group
        bytes_out: bytes_out
        ike_version: ike_version
        outbound_spi: outbound_spi
        dpd: dpd
        phase1_dh_group: phase1_dh_group
        phase2_hash: phase2_hash
        phase1_prf: phase1_prf
      properties:
        phase2:
          type: string
        outbound_spi:
          type: string
        inbound_spi:
          type: string
        bytes_in:
          type: string
        bytes_out:
          type: string
        esp_time_remaining:
          type: string
        esp_port:
          type: string
        phase2_algo:
          type: string
        phase2_hash:
          type: string
        nat_t:
          type: string
        dpd:
          type: string
        pfs_dh_group:
          nullable: true
          type: string
        phase1:
          type: string
        isakmp_port:
          type: string
        isakmp_time_remaining:
          type: string
        last_dpd:
          type: string
        phase1_cipher:
          nullable: true
          type: string
        phase1_prf:
          nullable: true
          type: string
        phase1_dh_group:
          nullable: true
          type: string
        ike_version:
          type: string
      title: IpsecTunnelParams
      type: object
    ConfigDetail:
      example:
        response:
          ntp_hosts: ntp_hosts
          licensed: true
          security_token: security_token
          controller_name: controller_name
          overlay_ipaddress: overlay_ipaddress
          topology_name: topology_name
          manager_id: 1
          public_ipaddress: public_ipaddress
          topology_checksum: topology_checksum
          vns3_version: vns3_version
          peered: true
          asn: 0
          private_ipaddress: private_ipaddress
      properties:
        response:
          $ref: '#/components/schemas/RuntimeConfig'
      title: ConfigDetail
      type: object
    SimpleEnabledResponse:
      example:
        response:
          enabled: true
      properties:
        response:
          $ref: '#/components/schemas/SimpleEnabledResponse_response'
      title: SimpleEnabledResponse
      type: object
    FirewallRuleOperationData:
      example:
        rule: rule
        position: 0
        status: status
        token: token
      properties:
        status:
          type: string
        rule:
          type: string
        position:
          type: integer
        token:
          description: Task token
          type: string
      title: FirewallRuleOperationData
      type: object
    AccessTokenDetail:
      example:
        response:
          refreshes: true
          expires_at: 2000-01-23T04:56:07.000+00:00
          expired: true
          last_accessed_ip: last_accessed_ip
          name: name
          lifetime: lifetime
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          last_accessed_at: last_accessed_at
          created_ip: created_ip
          token: token
      properties:
        response:
          $ref: '#/components/schemas/AccessToken'
      title: AccessTokenDetail
      type: object
    CreateContainerImageResponse:
      example:
        response:
          name: name
          uuid: uuid
      properties:
        response:
          $ref: '#/components/schemas/CreateContainerImageDetail'
      title: CreateContainerImageResponse
      type: object
    putUpdateInterfaceAddress_request:
      properties:
        label:
          type: string
        description:
          type: string
        ip_internal:
          type: string
        ip_external:
          nullable: true
          type: string
        mask_bits:
          default: 32
          description: between 1 and 32 inclusive
          type: integer
        gateway:
          nullable: true
          type: string
      type: object
    CreateContainerImageExportRequest:
      example:
        name: name
      properties:
        name:
          description: Name of the exported file
          type: string
      required:
      - name
      title: CreateContainerImageExportRequest
      type: object
    putLdapSettingsRequest:
      properties:
        host:
          description: IP address or resolvable hostname of LDAP server
          type: string
        port:
          default: 389
          description: Port for LDAP
          type: integer
        encrypt:
          default: false
          description: Use SSL
          type: boolean
        encrypt_ldaps:
          default: true
          description: Use LDAPS or start TLS (default)?
          type: boolean
        encrypt_auth:
          default: false
          description: Use certificates to authenticate via encrypted connection
          type: boolean
        encrypt_verify_ca:
          default: false
          description: Verify certicate using authority
          type: boolean
        binddn:
          description: Bind Username
          type: string
        bindpw:
          description: Bind Password
          type: string
      required:
      - host
      title: putLdapSettingsRequest
      type: object
    putEnableLdapRequest:
      properties:
        enabled:
          description: True to enable LDAP
          type: boolean
      required:
      - enabled
      title: putEnableLdapRequest
      type: object
    UpdateContainerImageRequest:
      example:
        name: name
        description: description
      properties:
        name:
          description: Name of the image
          type: string
        description:
          description: Description of the container image
          type: string
      required:
      - name
      title: UpdateContainerImageRequest
      type: object
    CreateBGPPeerRequest:
      example:
        ipaddress: ipaddress
        local_asn_alias: 6
        add_network_distance: true
        add_network_distance_hops: 1
        access_list: access_list
        bgp_password: bgp_password
        asn: 0
        add_network_distance_direction: add_network_distance_direction
      properties:
        ipaddress:
          description: IP address of the desired BGP peer.
          type: string
        asn:
          description: Autonomous system number assigned to device at ipaddress
          type: integer
        local_asn_alias:
          description: Autonomous system number alias
          type: integer
        access_list:
          description: List of "in permit CIDR" and/or "out permit CIDR" statements
            in a string delimited by "\n"
          type: string
        bgp_password:
          description: String to be agreed upon by both peers as a simple password.
          type: string
        add_network_distance:
          description: Enable network distance for BGP peer
          type: boolean
        add_network_distance_direction:
          description: "Add distance direction for BGP peer, in or out"
          type: string
        add_network_distance_hops:
          description: Distance metric weight indicating distance in hops for BGP
            peer
          type: integer
      required:
      - asn
      - ipaddress
      title: CreateBGPPeerRequest
      type: object
    UpdateClientpack_oneOf:
      properties:
        response:
          $ref: '#/components/schemas/TaskToken'
      type: object
    Error_error:
      properties:
        name:
          type: string
        log:
          type: string
        message:
          type: string
      type: object
    putLdapUserSchemaSettingsRequest:
      properties:
        user_base:
          description: Base DN from which to search for Users
          type: string
        user_id_attribute:
          description: Attribute type for the Users
          type: string
        user_list_filter:
          description: Search filter for Users
          type: string
      required:
      - user_base
      - user_id_attribute
      title: putLdapUserSchemaSettingsRequest
      type: object
    postTestLdapVpnSchemaSettingsRequest:
      properties:
        vpn_group_base:
          description: Base DN from which to search for Groups
          type: string
        vpn_group_id_attribute:
          description: Attribute type for the Groups
          type: string
        vpn_group_list_filter:
          description: Search filter for Groups
          type: string
        vpn_group_member_attribute:
          description: Attribute used to search for a user within the Group
          type: string
        vpn_group_member_attr_format:
          default: UserDN
          description: Format of the Group Member attribute
          type: string
        vpn_group_search_scope:
          default: subtree
          description: Search scope for filter
          type: string
        vpn_group_otp:
          default: false
          description: Use Google authenticator (OTP)?
          type: boolean
        limit:
          default: 100
          description: Number of records to return. Default = 100
          minimum: 0
          type: integer
      required:
      - vpn_group_base
      - vpn_group_id_attribute
      - vpn_group_member_attribute
      title: postTestLdapVpnSchemaSettingsRequest
      type: object
    UpdateClientpack:
      oneOf:
      - $ref: '#/components/schemas/UpdateClientpack_oneOf'
      - $ref: '#/components/schemas/UpdateClientpack_oneOf_1'
      title: UpdateClientpack
    UpdateClientpack_oneOf_1:
      properties:
        response:
          $ref: '#/components/schemas/ClientpackList'
      type: object
    FirewallSubgroupStatusListResponse_response:
      properties:
        rules:
          description: Chained list of rules delimited by newline.
          type: string
        status:
          type: string
      type: object
    IpsecTunnelListResponseKeyValue:
      example:
        response:
          key:
            tunnel_params:
              bytes_in: bytes_in
              isakmp_port: isakmp_port
              last_dpd: last_dpd
              inbound_spi: inbound_spi
              phase1_cipher: phase1_cipher
              nat_t: nat_t
              esp_time_remaining: esp_time_remaining
              esp_port: esp_port
              phase1: phase1
              phase2: phase2
              phase2_algo: phase2_algo
              isakmp_time_remaining: isakmp_time_remaining
              pfs_dh_group: pfs_dh_group
              bytes_out: bytes_out
              ike_version: ike_version
              outbound_spi: outbound_spi
              dpd: dpd
              phase1_dh_group: phase1_dh_group
              phase2_hash: phase2_hash
              phase1_prf: phase1_prf
            bounce: true
            endpointid: 1
            endpoint_name: endpoint_name
            endpoint_id: 1
            active: true
            description: description
            local_subnet: local_subnet
            ping_ipaddress: ping_ipaddress
            enabled: true
            connected: true
            ping_interval: 5
            ping_interface: eth0
            remote_subnet: remote_subnet
            id: 1
      properties:
        response:
          additionalProperties:
            $ref: '#/components/schemas/RuntimeStatus_ipsec_value'
          description: Ipsec tunnel details keyed by ID
          type: object
      title: IpsecTunnelListResponseKeyValue
      type: object
    LdapGroupSettings:
      example:
        group_required: true
        group_base: group_base
        group_id_attribute: group_id_attribute
        group_member_attribute: group_member_attribute
        group_member_attr_format: UserDN
        group_search_scope: subtree
        group_list_filter: group_list_filter
      properties:
        group_required:
          description: Require used of LDAP groups
          type: boolean
        group_base:
          description: Base DN from which to search for Groups
          type: string
        group_id_attribute:
          description: Attribute type for the Groups
          type: string
        group_list_filter:
          description: Search filter for Groups
          type: string
        group_member_attribute:
          description: Attribute used to search for a user within the Group
          type: string
        group_member_attr_format:
          default: UserDN
          description: Format of the Group Member attribute
          type: string
        group_search_scope:
          default: subtree
          description: Format of the Group Member attribute
          type: string
      title: LdapGroupSettings
      type: object
    RuntimeConfig:
      example:
        ntp_hosts: ntp_hosts
        licensed: true
        security_token: security_token
        controller_name: controller_name
        overlay_ipaddress: overlay_ipaddress
        topology_name: topology_name
        manager_id: 1
        public_ipaddress: public_ipaddress
        topology_checksum: topology_checksum
        vns3_version: vns3_version
        peered: true
        asn: 0
        private_ipaddress: private_ipaddress
      properties:
        asn:
          description: Autonomous system number for controller if peered
          type: integer
        topology_name:
          type: string
        controller_name:
          type: string
        topology_checksum:
          type: string
        manager_id:
          description: This managers ID in peered topology
          minimum: 1
          type: integer
        ntp_hosts:
          description: "NTP host endpoints, whitespace delimited"
          type: string
        vns3_version:
          type: string
        licensed:
          type: boolean
        overlay_ipaddress:
          description: This managers overlay IP in peered topology
          type: string
        peered:
          type: boolean
        public_ipaddress:
          type: string
        private_ipaddress:
          type: string
        security_token:
          description: Security token in peered topology
          type: string
      title: RuntimeConfig
      type: object
    ResetOverlayClientRequest:
      example:
        disconnect: true
        name: name
      properties:
        name:
          description: Name of the clientpack as returned by the "desc_clientpacks"
            call
          type: string
        disconnect:
          default: true
          type: boolean
      required:
      - name
      title: ResetOverlayClientRequest
      type: object
    PeersDetail_managers_value:
      example:
        not_set: true
        address: address
        self: true
        overlay_ipaddress: overlay_ipaddress
        id: 1
        reachable: true
        mtu: mtu
      properties:
        id:
          minimum: 1
          type: integer
        not_set:
          type: boolean
        self:
          type: boolean
        mtu:
          type: string
        reachable:
          type: boolean
        address:
          type: string
        overlay_ipaddress:
          type: string
      title: VNS3ControllerPeer
      type: object
    AlertsListResponse:
      example:
        response:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          webhook_id: 1
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          custom_properties:
          - name: name
            value: value
          - name: name
            value: value
          url: url
          enabled: true
          events:
          - events
          - events
        - updated_at: 2000-01-23T04:56:07.000+00:00
          webhook_id: 1
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          custom_properties:
          - name: name
            value: value
          - name: name
            value: value
          url: url
          enabled: true
          events:
          - events
          - events
      properties:
        response:
          items:
            $ref: '#/components/schemas/Alert'
          type: array
      title: AlertsListResponse
      type: object
    SimpleOutputResponse:
      example:
        response:
          output: output
          success: true
      properties:
        response:
          $ref: '#/components/schemas/SimpleOutputResponse_response'
      title: SimpleOutputResponse
      type: object
    SimpleStatusResponse:
      example:
        response:
          status: status
      properties:
        response:
          $ref: '#/components/schemas/SimpleStatusResponse_response'
      title: SimpleStatusResponse
      type: object
    StopContainerDetail:
      example:
        uuid: uuid
        status: status
      properties:
        uuid:
          type: string
        status:
          description: Container system status for allocated container
          type: string
      title: StopContainerDetail
      type: object
    SetMSRequest:
      example:
        ip: ip
        alert_enabled: true
      properties:
        ip:
          description: VNS3 Management system endpoint IP address
          type: string
        alert_enabled:
          description: Disable/Enable sending alerts to VNS3:ms
          type: boolean
      required:
      - alert_enabled
      title: SetMSRequest
      type: object
    DeleteFirewallRuleRequest:
      example:
        rule: rule
      properties:
        rule:
          description: Rule to be deleted
          type: string
      required:
      - rule
      title: DeleteFirewallRuleRequest
      type: object
    postTestLdapSettings_200_response_response:
      example:
        connect_success: true
        message: message
      properties:
        connect_success:
          type: boolean
        message:
          type: string
      type: object
    SimpleBooleanResponse:
      example:
        response: true
      properties:
        response:
          type: boolean
      title: SimpleBooleanResponse
      type: object
    KeysetDetail:
      example:
        response:
          running: 0
          in_progress: true
          keyset_present: true
          checksum: checksum
          created_at: created_at
          created_at_i: 6
          started_at: started_at
          started_at_i: 1
          uuid: uuid
      properties:
        response:
          $ref: '#/components/schemas/KeysetStatus'
      title: KeysetDetail
      type: object
    LdapUserSettingsResponse:
      example:
        response:
          user_base: user_base
          user_id_attribute: 0
          user_list_filter: user_list_filter
      properties:
        response:
          $ref: '#/components/schemas/LdapUserSettings'
      title: LdapUserSettingsResponse
      type: object
    GetTaskTokenRequest:
      example:
        token: token
      properties:
        token:
          type: string
      title: GetTaskTokenRequest
      type: object
    IpsecSystemDetail_response_remote_endpoints_value_bgp_peers_value:
      example:
        ipaddress: ipaddress
        connection_detail: connection_detail
        add_network_distance: true
        add_network_distance_hops: 2
        access_list: access_list
        bgp_password: bgp_password
        id: 1
        asn: 5
        add_network_distance_direction: add_network_distance_direction
      properties:
        asn:
          type: integer
        ipaddress:
          type: string
        access_list:
          description: List of "in permit CIDR" and/or "out permit CIDR" statements
            in a string delimited by "\n"
          type: string
        id:
          minimum: 1
          type: integer
        bgp_password:
          type: string
        add_network_distance:
          type: boolean
        add_network_distance_direction:
          description: in or out
          type: string
        add_network_distance_hops:
          type: integer
        connection_detail:
          type: string
      title: BGPPeer
      type: object
    RouteDetailResponse:
      example:
        response:
          netmask: netmask
          metric: 6
          description: description
          cidr: cidr
          id: 1
          interface: interface
          advertise: true
          enabled: true
          gateway: gateway
          tunnel:
            tunnel_params:
              bytes_in: bytes_in
              isakmp_port: isakmp_port
              last_dpd: last_dpd
              inbound_spi: inbound_spi
              phase1_cipher: phase1_cipher
              nat_t: nat_t
              esp_time_remaining: esp_time_remaining
              esp_port: esp_port
              phase1: phase1
              phase2: phase2
              phase2_algo: phase2_algo
              isakmp_time_remaining: isakmp_time_remaining
              pfs_dh_group: pfs_dh_group
              bytes_out: bytes_out
              ike_version: ike_version
              outbound_spi: outbound_spi
              dpd: dpd
              phase1_dh_group: phase1_dh_group
              phase2_hash: phase2_hash
              phase1_prf: phase1_prf
            bounce: true
            endpointid: 1
            endpoint_name: endpoint_name
            endpoint_id: 1
            active: true
            description: description
            local_subnet: local_subnet
            ping_ipaddress: ping_ipaddress
            enabled: true
            connected: true
            ping_interval: 5
            ping_interface: eth0
            remote_subnet: remote_subnet
            id: 1
      properties:
        response:
          $ref: '#/components/schemas/RoutesList'
      title: RouteDetailResponse
      type: object
    FirewallFWSetDeleteRequest:
      example:
        name: name
        rules: rules
      properties:
        rules:
          description: Chained firewall rules seperated by "\n"
          type: string
        name:
          description: "Name of the FWSet. Must be valid chain that begins with one\
            \ of the following: NETS_, PORTS_, LIST_.\n"
          type: string
      title: FirewallFWSetDeleteRequest
      type: object
    CommitContainerRequest:
      example:
        name: true
        description: description
      properties:
        name:
          description: Name of new image
          type: boolean
        description:
          type: string
      required:
      - name
      title: CommitContainerRequest
      type: object
    RemoteSupportConfig:
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: RemoteSupportConfig
      type: object
    ContainerSystemIP:
      example:
        address: address
        status: status
      properties:
        address:
          type: string
        status:
          type: string
      title: ContainerSystemIP
      type: object
    CreateWebookRequest_headers_inner:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    PluginInstanceDetailResponse:
      example:
        response:
          manager:
            log_files:
            - path: path
              description: description
            - path: path
              description: description
            executables:
            - path: path
              commands:
                key: commands
            - path: path
              commands:
                key: commands
            configuration_files:
            - path: path
              name: name
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              version: 2
              previous_versions:
              - path: path
                created_at: created_at
                version: 7
              - path: path
                created_at: created_at
                version: 7
            - path: path
              name: name
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              version: 2
              previous_versions:
              - path: path
                created_at: created_at
                version: 7
              - path: path
                created_at: created_at
                version: 7
            ports:
            - protocol: protocol
              ui: true
              port: 9
              ui_path: ui_path
              ssl: true
            - protocol: protocol
              ui: true
              port: 9
              ui_path: ui_path
              ssl: true
            process_manager:
              subprocesses:
              - subprocesses
              - subprocesses
              name: name
          data:
            Path: Path
            Args:
            - Args
            - Args
            ProcessLabel: ProcessLabel
            Platform: Platform
            Config:
              User: User
              Entrypoint: Entrypoint
              AttachStderr: true
              Memory: 0
              Dns: Dns
              VolumesFrom: VolumesFrom
              Hostname: Hostname
              OpenStdin: true
              Env:
                key: ""
              Image: Image
              NetworkDisabled: true
              ExposedPorts:
                key: ""
              StdinOnce: true
              AttachStdout: true
              WorkingDir: WorkingDir
              Volumes: Volumes
              CpuShares: 1
              PortSpecs:
                key: ""
              OnBuild: OnBuild
              AttachStdin: true
              Domainname: Domainname
              MemorySwap: 6
              Tty: true
              Cmd: Cmd
            AppArmorProfile: AppArmorProfile
            Driver: Driver
            VolumesRW:
              key: ""
            HostsPath: HostsPath
            HostnamePath: HostnamePath
            Image: Image
            Created: Created
            Name: Name
            RestartCount: 0
            NetworkSettings:
              HairpinMode: true
              SandboxKey: SandboxKey
              GlobalIPv6Address: GlobalIPv6Address
              Ports:
                key: ""
              GlobalIPv6PrefixLen: 5
              IPPrefixLen: 2
              MacAddress: MacAddress
              SandboxID: SandboxID
              LinkLocalIPv6Address: LinkLocalIPv6Address
              LinkLocalIPv6PrefixLen: 5
              Gateway: Gateway
              EndpointID: EndpointID
              SecondaryIPv6Addresses: SecondaryIPv6Addresses
              IPv6Gateway: IPv6Gateway
              SecondaryIPAddresses: SecondaryIPAddresses
              PortMapping:
                key: ""
              IPAddress: IPAddress
              Bridge: Bridge
            MountLabel: MountLabel
            Volumes:
              key: ""
            State:
              Status: Status
              Restarting: true
              Dead: true
              Ghost: true
              ExitCode: 1
              Running: true
              Error: Error
              FinishedAt: FinishedAt
              OOMKilled: true
              Pid: 6
              StartedAt: StartedAt
              Paused: true
            ResolvConfPath: ResolvConfPath
            ExecIDs:
            - ExecIDs
            - ExecIDs
            HostConfig:
              key: ""
            ExecDriver: ExecDriver
            Id: Id
            LogPath: LogPath
          description: description
          created_at: created_at
          ip_address: ip_address
          port_maps:
            key: 5
          uuid: uuid
          url: url
          command: command
          image_name: image_name
          environment: environment
          updated_at: updated_at
          firewall:
          - plugin_port: 1
            destination_port: 5
            rule: rule
            tags:
            - tags
            - tags
          - plugin_port: 1
            destination_port: 5
            rule: rule
            tags:
            - tags
            - tags
          name: name
          status_msg: status_msg
          id: 0
          image_id: 6
          status: status
      properties:
        response:
          $ref: '#/components/schemas/PluginInstance'
      title: PluginInstanceDetailResponse
      type: object
    GREEndpointParams:
      properties:
        endpoint_name:
          type: string
        description:
          nullable: true
          type: string
        ip_internal:
          nullable: true
          type: string
        mtu:
          type: integer
        enabled:
          default: false
          type: boolean
        mask_bits:
          nullable: true
          type: string
        gateway:
          nullable: true
          type: string
        system_default:
          default: false
          type: boolean
        local_connection_ip:
          nullable: true
          type: string
        remote_connection_ip:
          nullable: true
          type: string
        ttl:
          default: 255
          type: integer
      title: GREEndpointParams
      type: object
    LdapVpnRadiusSettings:
      example:
        vpn_radius_auth_port: 0
        vpn_auth_provider: vpn_auth_provider
        vpn_radius_server: vpn_radius_server
        vpn_auth_enabled: true
        vpn_radius_accounting_port: 6
        token: token
      properties:
        vpn_auth_enabled:
          type: boolean
        vpn_auth_provider:
          type: string
        vpn_radius_server:
          description: IP address or resolvable hostname
          type: string
        vpn_radius_auth_port:
          description: Authentication port
          type: integer
        vpn_radius_accounting_port:
          description: Accounting port
          type: integer
        token:
          type: string
      title: LdapVpnRadiusSettings
      type: object
    postCreateGreInterface_request:
      properties:
        endpoint_name:
          type: string
        description:
          type: string
        ip_internal:
          type: string
        mtu:
          type: integer
        enabled:
          default: false
          type: boolean
        mask_bits:
          type: string
        local_connection_ip:
          type: string
        remote_connection_ip:
          type: string
        ttl:
          default: 255
          type: integer
      type: object
    CreateContainerImageRequest:
      example:
        imagefile: ""
        name: name
        description: description
        buildurl: buildurl
        localbuild: localbuild
        buildfile: ""
        url: url
        localimage: localimage
      oneOf:
      - required:
        - name
        - url
      - required:
        - buildurl
        - name
      - required:
        - localbuild
        - name
      - required:
        - localimage
        - name
      - required:
        - imagefile
        - name
      - required:
        - buildfile
        - name
      properties:
        name:
          description: Name of the image
          type: string
        url:
          description: URL of the image file to be imported
          type: string
        buildurl:
          description: URL of a dockerfile that will be used to build the image
          type: string
        localbuild:
          description: Local build file to create new image
          type: string
        localimage:
          description: Local image to tag
          type: string
        imagefile:
          description: Upload image file
          format: binary
          type: string
        buildfile:
          description: Upload docker file or zipped docker context directory
          format: binary
          type: string
        description:
          type: string
      title: CreateContainerImageRequest
      type: object
    PluginListResponse:
      example:
        response:
        - running_containers: 1
          data:
            container_config:
              key: ""
            comment: comment
          tag_name: tag_name
          import_id: import_id
          created_at: created_at
          description: description
          uuid: uuid
          url: url
          name: name
          status_msg: status_msg
          containers:
          - id: 6
            status: status
          - id: 6
            status: status
          id: 0
          status: status
        - running_containers: 1
          data:
            container_config:
              key: ""
            comment: comment
          tag_name: tag_name
          import_id: import_id
          created_at: created_at
          description: description
          uuid: uuid
          url: url
          name: name
          status_msg: status_msg
          containers:
          - id: 6
            status: status
          - id: 6
            status: status
          id: 0
          status: status
      properties:
        response:
          items:
            $ref: '#/components/schemas/Plugin'
          type: array
      title: PluginListResponse
      type: object
    UpdateContainerImageDetailResponse:
      example:
        response:
          uuid: uuid
          status: status
      properties:
        response:
          $ref: '#/components/schemas/UpdateContainerImageDetail'
      title: UpdateContainerImageDetailResponse
      type: object
    RoutesList:
      example:
        netmask: netmask
        metric: 6
        description: description
        cidr: cidr
        id: 1
        interface: interface
        advertise: true
        enabled: true
        gateway: gateway
        tunnel:
          tunnel_params:
            bytes_in: bytes_in
            isakmp_port: isakmp_port
            last_dpd: last_dpd
            inbound_spi: inbound_spi
            phase1_cipher: phase1_cipher
            nat_t: nat_t
            esp_time_remaining: esp_time_remaining
            esp_port: esp_port
            phase1: phase1
            phase2: phase2
            phase2_algo: phase2_algo
            isakmp_time_remaining: isakmp_time_remaining
            pfs_dh_group: pfs_dh_group
            bytes_out: bytes_out
            ike_version: ike_version
            outbound_spi: outbound_spi
            dpd: dpd
            phase1_dh_group: phase1_dh_group
            phase2_hash: phase2_hash
            phase1_prf: phase1_prf
          bounce: true
          endpointid: 1
          endpoint_name: endpoint_name
          endpoint_id: 1
          active: true
          description: description
          local_subnet: local_subnet
          ping_ipaddress: ping_ipaddress
          enabled: true
          connected: true
          ping_interval: 5
          ping_interface: eth0
          remote_subnet: remote_subnet
          id: 1
      properties:
        id:
          minimum: 1
          type: integer
        cidr:
          type: string
        interface:
          type: string
        netmask:
          type: string
        description:
          type: string
        advertise:
          type: boolean
        enabled:
          type: boolean
        metric:
          type: integer
        gateway:
          type: string
        tunnel:
          $ref: '#/components/schemas/RuntimeStatus_ipsec_value'
      title: Route
      type: object
    GREEndpoint:
      allOf:
      - $ref: '#/components/schemas/GREEndpointParams'
      - $ref: '#/components/schemas/GREEndpoint_allOf'
      title: GREEndpoint
    ContainerLogs:
      example:
        uuid: uuid
        logs:
        - logs
        - logs
      properties:
        uuid:
          type: string
        logs:
          items:
            type: string
          type: array
      title: ContainerLogs
      type: object
    PluginManagerConfigPort:
      example:
        protocol: protocol
        ui: true
        port: 9
        ui_path: ui_path
        ssl: true
      properties:
        port:
          type: integer
        protocol:
          type: string
        ui:
          type: boolean
        ssl:
          type: boolean
        ui_path:
          type: string
      title: PluginManagerConfigPort
      type: object
    DeleteContainerImageDetail:
      example:
        image_deleted: true
        uuid: uuid
      properties:
        uuid:
          type: string
        image_deleted:
          type: boolean
      title: DeleteContainerImageDetail
      type: object
    TaskStatus:
      example:
        task_status: task_status
      properties:
        task_status:
          type: string
      title: TaskStatus
      type: object
    UpdateIpsecConnectionRequest:
      example:
        ipaddress: ipaddress
        route_based_remote: route_based_remote
        route_based_local: route_based_local
        nat_t_enabled: true
        description: description
        route_based_int_address: route_based_int_address
        secret: secret
        vpn_type: vpn_type
        name: name
        ike_version: 0
        gre: true
        pfs: true
        extra_config: extra_config
        private_ipaddress: private_ipaddress
        gre_interface_address: gre_interface_address
      properties:
        name:
          description: Name for the connection.
          type: string
        description:
          description: Description of this IPsec endpoint
          type: string
        ipaddress:
          description: IP of the remote gateway
          type: string
        secret:
          description: Pre-shared key
          type: string
        pfs:
          description: "Perfect Forward Secrecy if true, disables if false."
          type: boolean
        ike_version:
          description: Version for IKE algorithm
          enum:
          - 1
          - 2
          type: integer
        nat_t_enabled:
          description: True if you want encapsulated IPsec protocol to this gateway
          type: boolean
        extra_config:
          description: Additional optionals for connection such as 'phase1=aes256_gcm-sha2_256-dh14
            phase2=aes256_gcm'
          type: string
        private_ipaddress:
          description: Internal NAT address of the remote gateway
          type: string
        gre:
          description: True if GRE is being used for the specific endpoint
          type: boolean
        gre_interface_address:
          description: Interface address for GRE
          type: string
        vpn_type:
          description: "policy, gre, vti"
          type: string
        route_based_int_address:
          type: string
        route_based_local:
          type: string
        route_based_remote:
          type: string
      title: UpdateIpsecConnectionRequest
      type: object
    ServerSSLDetail:
      example:
        state: state
        uuid: uuid
        status: status
      properties:
        uuid:
          type: string
        status:
          type: string
        state:
          type: string
      title: ServerSSLDetail
      type: object
    SystemInterfaceDetail:
      example:
        response:
          ip_internal: ip_internal
          description: description
          enabled: true
          ip_external: ip_external
          mtu: 6
          system_default: true
          tags:
          - tags
          - tags
          name: name
          mask_bits: mask_bits
          id: 1
          interface_type: interface_type
          gateway: gateway
          status: status
      properties:
        response:
          $ref: '#/components/schemas/SystemInterface'
      title: SystemInterfaceDetail
      type: object
    IpsecSystemDetail:
      example:
        response:
          this_endpoint:
            ipsec_local_ipaddress: ipsec_local_ipaddress
            ipaddress: ipaddress
            nat_traversal: true
            overlay_subnet: overlay_subnet
            private_ipaddress: private_ipaddress
            asn: 0
          remote_endpoints:
            key:
              ipaddress: ipaddress
              route_based_remote: route_based_remote
              bgp_peers:
                key:
                  ipaddress: ipaddress
                  connection_detail: connection_detail
                  add_network_distance: true
                  add_network_distance_hops: 2
                  access_list: access_list
                  bgp_password: bgp_password
                  id: 1
                  asn: 5
                  add_network_distance_direction: add_network_distance_direction
              route_based_local: route_based_local
              nat_t_enabled: true
              description: description
              psk: psk
              route_based_int_address: route_based_int_address
              type: type
              vpn_type: vpn_type
              tunnels:
                key:
                  tunnel_params:
                    bytes_in: bytes_in
                    isakmp_port: isakmp_port
                    last_dpd: last_dpd
                    inbound_spi: inbound_spi
                    phase1_cipher: phase1_cipher
                    nat_t: nat_t
                    esp_time_remaining: esp_time_remaining
                    esp_port: esp_port
                    phase1: phase1
                    phase2: phase2
                    phase2_algo: phase2_algo
                    isakmp_time_remaining: isakmp_time_remaining
                    pfs_dh_group: pfs_dh_group
                    bytes_out: bytes_out
                    ike_version: ike_version
                    outbound_spi: outbound_spi
                    dpd: dpd
                    phase1_dh_group: phase1_dh_group
                    phase2_hash: phase2_hash
                    phase1_prf: phase1_prf
                  bounce: true
                  endpointid: 1
                  endpoint_name: endpoint_name
                  endpoint_id: 1
                  active: true
                  description: description
                  local_subnet: local_subnet
                  ping_ipaddress: ping_ipaddress
                  enabled: true
                  connected: true
                  ping_interval: 5
                  ping_interface: eth0
                  remote_subnet: remote_subnet
                  id: 1
              name: name
              ike_version: 1
              id: 1
              pfs: true
              private_ipaddress: private_ipaddress
              extra_config:
              - extra_config
              - extra_config
              gre_interface_address: gre_interface_address
      properties:
        response:
          $ref: '#/components/schemas/IpsecSystemDetail_response'
      title: IpsecSystemDetail
      type: object
    ContainerSystemIPListResponse:
      example:
        response:
          addresses:
          - address: address
            status: status
          - address: address
            status: status
      properties:
        response:
          $ref: '#/components/schemas/ContainerSystemIPList'
      title: ContainerSystemIPListResponse
      type: object
    ContainerImage:
      example:
        image_name: image_name
        created: 2000-01-23T04:56:07.000+00:00
        tag_name: tag_name
        import_id: import_id
        container_config:
          User: User
          Entrypoint: Entrypoint
          AttachStderr: true
          Memory: 0
          Dns: Dns
          VolumesFrom: VolumesFrom
          Hostname: Hostname
          OpenStdin: true
          Env:
            key: ""
          Image: Image
          NetworkDisabled: true
          ExposedPorts:
            key: ""
          StdinOnce: true
          AttachStdout: true
          WorkingDir: WorkingDir
          Volumes: Volumes
          CpuShares: 1
          PortSpecs:
            key: ""
          OnBuild: OnBuild
          AttachStdin: true
          Domainname: Domainname
          MemorySwap: 6
          Tty: true
          Cmd: Cmd
        status_msg: status_msg
        description: description
        comment: comment
        id: id
        status: status
      properties:
        id:
          nullable: true
          type: string
        image_name:
          type: string
        status:
          type: string
        status_msg:
          nullable: true
          type: string
        import_id:
          type: string
        created:
          format: date-time
          type: string
        description:
          type: string
        tag_name:
          type: string
        comment:
          nullable: true
          type: string
        container_config:
          $ref: '#/components/schemas/ContainerConfig'
      title: ContainerImage
      type: object
    SetMSRequest_1:
      properties:
        ip:
          description: VNS3 Management system endpoint IP address
          type: string
      required:
      - ip
      title: SetMSRequest
      type: object
    UpdateConfigRequest:
      example:
        ntp_hosts: ntp_hosts
        controller_name: controller_name
        topology_name: topology_name
      properties:
        topology_name:
          description: Specifies a text name to display at the top of the web ui and
            in the desc_config API response
          type: string
        controller_name:
          description: Specifies a text name for this controller
          type: string
        ntp_hosts:
          description: |
            Single or space separated list of ntp server IPs or dns names.  Using this argument overwrites the existing Configuration.
          type: string
      title: UpdateConfigRequest
      type: object
    RoutesListResponse:
      example:
        response:
          key:
            netmask: netmask
            metric: 6
            description: description
            cidr: cidr
            id: 1
            interface: interface
            advertise: true
            enabled: true
            gateway: gateway
            tunnel:
              tunnel_params:
                bytes_in: bytes_in
                isakmp_port: isakmp_port
                last_dpd: last_dpd
                inbound_spi: inbound_spi
                phase1_cipher: phase1_cipher
                nat_t: nat_t
                esp_time_remaining: esp_time_remaining
                esp_port: esp_port
                phase1: phase1
                phase2: phase2
                phase2_algo: phase2_algo
                isakmp_time_remaining: isakmp_time_remaining
                pfs_dh_group: pfs_dh_group
                bytes_out: bytes_out
                ike_version: ike_version
                outbound_spi: outbound_spi
                dpd: dpd
                phase1_dh_group: phase1_dh_group
                phase2_hash: phase2_hash
                phase1_prf: phase1_prf
              bounce: true
              endpointid: 1
              endpoint_name: endpoint_name
              endpoint_id: 1
              active: true
              description: description
              local_subnet: local_subnet
              ping_ipaddress: ping_ipaddress
              enabled: true
              connected: true
              ping_interval: 5
              ping_interface: eth0
              remote_subnet: remote_subnet
              id: 1
      properties:
        response:
          additionalProperties:
            $ref: '#/components/schemas/RoutesList'
          title: RoutesList
          type: object
      title: RoutesListResponse
      type: object
    RestartStatus_response:
      example:
        restart: true
      properties:
        restart:
          type: boolean
      type: object
    DeleteAccessURLRequest:
      example:
        access_url: access_url
        access_url_id: 1
      oneOf:
      - required:
        - access_url_id
      - required:
        - access_url
      properties:
        access_url_id:
          description: ID of access URL
          minimum: 1
          type: integer
        access_url:
          type: string
      title: DeleteAccessURLRequest
      type: object
    IpsecRemoteEndpointDetail:
      example:
        response:
          id: 1
          name: EndpointB
          ipaddress: 13.53.72.182
          pfs: true
          ike_version: 2
          nat_t_enabled: true
          private_ipaddress: 192.0.2.254
          extra_config: []
          description: To datacenter B
          tunnels:
            "3":
              id: 3
              local_subnet: 172.31.0.0/28
              remote_subnet: 192.168.10.0/22
              endpoint_id: 1
              enabled: true
              description: tunnel description
              ping_ipaddress: ""
              ping_interface: tun0
              ping_interval: null
          bgp_peers: {}
          type: ipsec
          vpn_type: policy
          psk: testtest
      properties:
        response:
          $ref: '#/components/schemas/IpsecSystemDetail_response_remote_endpoints_value'
      title: IpsecRemoteEndpointDetail
      type: object
    CreateAlertRequest:
      example:
        webhook_name: webhook_name
        webhook_id: 0
        name: name
        custom_properties:
        - name: name
          value: value
        - name: name
          value: value
        url: url
        events:
        - events
        - events
        enabled: true
      properties:
        name:
          type: string
        url:
          type: string
        webhook_id:
          type: integer
        events:
          items:
            type: string
          type: array
        webhook_name:
          type: string
        custom_properties:
          items:
            $ref: '#/components/schemas/CreateAlertRequest_custom_properties_inner'
          type: array
        enabled:
          default: true
          type: boolean
      required:
      - name
      - url
      - webhook_id
      title: CreateAlertRequest
      type: object
    postTestLdapGroupSchemaSettings_200_response:
      example:
        response:
        - ldap_user:
          - ldap_user
          - ldap_user
          ldap_group: ldap_group
        - ldap_user:
          - ldap_user
          - ldap_user
          ldap_group: ldap_group
      properties:
        response:
          items:
            $ref: '#/components/schemas/postTestLdapGroupSchemaSettings_200_response_response_inner'
          type: array
      type: object
    SystemInterfaceListResponse:
      example:
        response:
        - ip_internal: ip_internal
          description: description
          enabled: true
          ip_external: ip_external
          mtu: 6
          system_default: true
          tags:
          - tags
          - tags
          name: name
          mask_bits: mask_bits
          id: 1
          interface_type: interface_type
          gateway: gateway
          status: status
        - ip_internal: ip_internal
          description: description
          enabled: true
          ip_external: ip_external
          mtu: 6
          system_default: true
          tags:
          - tags
          - tags
          name: name
          mask_bits: mask_bits
          id: 1
          interface_type: interface_type
          gateway: gateway
          status: status
      properties:
        response:
          items:
            $ref: '#/components/schemas/SystemInterface'
          type: array
      title: SystemInterfaceListResponse
      type: object
    UpdateRemoteSupportConfigRequest:
      example:
        revoke_credential: true
        enabled: true
      properties:
        enabled:
          description: True if remote support should be enabled
          type: boolean
        revoke_credential:
          description: True if remote support credential should be revoked
          type: boolean
      title: UpdateRemoteSupportConfigRequest
      type: object
    RevertPluginInstanceConfigFileRequest:
      example:
        version: 0
      properties:
        version:
          description: Version to revert to
          type: integer
      required:
      - version
      title: RevertPluginInstanceConfigFileRequest
      type: object
    AlertDetailResponse:
      example:
        response:
          updated_at: 2000-01-23T04:56:07.000+00:00
          webhook_id: 1
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          custom_properties:
          - name: name
            value: value
          - name: name
            value: value
          url: url
          enabled: true
          events:
          - events
          - events
      properties:
        response:
          $ref: '#/components/schemas/Alert'
      title: AlertDetailResponse
      type: object
    AllocateContainerRequest:
      example:
        ipaddress: ipaddress
        environment: environment
        name: name
        description: description
        uuid: uuid
        image_uuid: image_uuid
        command: command
      oneOf:
      - required:
        - uuid
      - required:
        - command
        - image_uuid
        - name
      properties:
        uuid:
          description: Id of container if present
          type: string
        image_uuid:
          description: Container image from which to allocate container
          type: string
        name:
          description: Name for the allocated container
          type: string
        ipaddress:
          description: IP address to use for container
          type: string
        description:
          type: string
        command:
          description: Command used to run container
          type: string
        environment:
          description: Environment string to pass to container
          type: string
      title: AllocateContainerRequest
      type: object
    UpdateConfigureContainerSystemRequest:
      example:
        network: network
      properties:
        network:
          description: Subnet CIDR that will be used for the container network.
          type: string
      required:
      - network
      title: UpdateConfigureContainerSystemRequest
      type: object
    UpdatePeerRequest:
      example:
        name: name
        overlay_mtu: overlay_mtu
        force: true
      properties:
        name:
          description: IP address or host name of the one you are peering with.
          type: string
        overlay_mtu:
          description: link MTU between 500 and 4800
          type: string
        force:
          description: |
            Setting false will NOT finalize the peering operation.  A peer "reconfigure" call would then be required. Default is true
          type: boolean
      title: UpdatePeerRequest
      type: object
    PluginInstanceFirewallRule:
      example:
        plugin_port: 1
        destination_port: 5
        rule: rule
        tags:
        - tags
        - tags
      properties:
        rule:
          type: string
        tags:
          items:
            type: string
          type: array
        plugin_port:
          type: integer
        destination_port:
          type: integer
      title: PluginInstanceFirewallRule
      type: object
    Topology_clients_inner:
      example:
        octets:
        - 5
        - 5
        ip_address: ip_address
      properties:
        ip_address:
          type: string
        octets:
          items:
            type: integer
          type: array
      type: object
    RunContainerDetail:
      example:
        ip_address: ip_address
        uuid: uuid
        container_started: true
        status: status
      properties:
        uuid:
          type: string
        container_started:
          type: boolean
        ip_address:
          type: string
        status:
          description: Container system status for allocated container
          type: string
      title: RunContainerDetail
      type: object
    postTestLdapSettingsRequest:
      properties:
        host:
          description: IP address or resolvable hostname of LDAP server
          type: string
        port:
          default: 389
          description: Port for LDAP
          type: integer
        encrypt:
          default: false
          description: Use SSL
          type: boolean
        encrypt_ldaps:
          default: true
          description: Use LDAPS or start TLS (default)?
          type: boolean
        encrypt_auth:
          default: false
          description: Use certificates to authenticate via encrypted connection
          type: boolean
        encrypt_verify_ca:
          default: false
          description: Verify certicate using authority
          type: boolean
        binddn:
          description: Bind Username
          type: string
        bindpw:
          description: Bind Password
          type: string
        auth_cert:
          description: Authentication certificate text content to use
          type: string
        auth_cert_current:
          default: false
          description: Test with current uploaded authentication certificate?
          type: boolean
        auth_key:
          description: Authentication key text content to use
          type: string
        auth_key_current:
          default: false
          description: Test with current uploaded authentication key?
          type: boolean
        ca_cert:
          description: CA certificate text content to use
          type: string
        ca_cert_current:
          default: false
          description: Test with current uploaded CA certificate?
          type: boolean
      required:
      - host
      title: postTestLdapSettingsRequest
      type: object
    putLdapGroupSchemaSettingsRequest:
      properties:
        group_required:
          description: Require use of LDAP groups
          type: boolean
        group_base:
          description: Base DN from which to search for Groups
          type: string
        group_id_attribute:
          description: Attribute type for the Groups
          type: string
        group_list_filter:
          description: Search filter for Groups
          type: string
        group_member_attribute:
          description: ttribute used to search for a user within the Group
          type: string
        group_member_attr_format:
          description: Format of the Group Member attribute
          type: string
        group_search_scope:
          description: Default=subtree
          type: string
      required:
      - group_required
      title: putLdapGroupSchemaSettingsRequest
      type: object
    FirewallActionRequest:
      example:
        action: action
      properties:
        action:
          description: Action to take. Currently only reset_connection_tracking supported
          type: string
      required:
      - action
      title: FirewallActionRequest
      type: object
    LinkEvent:
      example:
        timestamp_i: 6
        event: event
        timestamp: timestamp
      properties:
        event:
          description: "Tunnel event, up or down"
          type: string
        timestamp:
          type: string
        timestamp_i:
          type: integer
      title: LinkEvent
      type: object
    SystemInterface:
      example:
        ip_internal: ip_internal
        description: description
        enabled: true
        ip_external: ip_external
        mtu: 6
        system_default: true
        tags:
        - tags
        - tags
        name: name
        mask_bits: mask_bits
        id: 1
        interface_type: interface_type
        gateway: gateway
        status: status
      properties:
        id:
          minimum: 1
          type: integer
        name:
          type: string
        interface_type:
          description: system or system_virtual
          type: string
        description:
          type: string
        ip_internal:
          nullable: true
          type: string
        mtu:
          type: integer
        enabled:
          type: boolean
        status:
          description: "Availability of interface, Up or Down"
          type: string
        mask_bits:
          nullable: true
          type: string
        gateway:
          nullable: true
          type: string
        system_default:
          type: boolean
        ip_external:
          nullable: true
          type: string
        tags:
          items:
            type: string
          type: array
      title: SystemInterface
      type: object
    AccessToken:
      example:
        refreshes: true
        expires_at: 2000-01-23T04:56:07.000+00:00
        expired: true
        last_accessed_ip: last_accessed_ip
        name: name
        lifetime: lifetime
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        last_accessed_at: last_accessed_at
        created_ip: created_ip
        token: token
      properties:
        id:
          minimum: 1
          type: integer
        created_at:
          format: date-time
          type: string
        token:
          type: string
        name:
          type: string
        created_ip:
          type: string
        expires_at:
          format: date-time
          type: string
        lifetime:
          type: string
        refreshes:
          type: boolean
        expired:
          type: boolean
        last_accessed_at:
          nullable: true
          type: string
        last_accessed_ip:
          nullable: true
          type: string
      title: AccessToken
      type: object
    ConnectedSubnetsDetail:
      oneOf:
      - description: "Array of arrays with each element of length 2 representing [network,\
          \ subnet mask]"
        items:
          items:
            type: string
          type: array
        title: ConnectedSubnets
        type: array
      - items:
          $ref: '#/components/schemas/ConnectedSubnet'
        title: ConnectedSubnetsVerbose
        type: array
      title: ConnectedSubnetsDetail
    UpdateIpsecAddressRequest:
      example:
        ipsec_local_ipaddress: ipsec_local_ipaddress
        async: false
      properties:
        ipsec_local_ipaddress:
          description: "This is effectively a \"cloud NAT\" address, since you don't\
            \ know what your LAN address  will be between invocations in a cloud,\
            \ this address can be used by remote endpoints  as your \"behind a NAT\"\
            \ address, sometimes referred to Peer or IKE ID, if needed (e.g. Watchguard\
            \ or Juniper). It can ALSO be thought of even more simply as an IPsec\
            \ \"loopback\" interface that you can use to terminate traffic.\n"
          type: string
        async:
          default: false
          description: "Return a task token waiting for IPsec configuration update,\
            \ default is false, meaning the request will block"
          type: boolean
      required:
      - ipsec_local_ipaddress
      title: UpdateIpsecAddressRequest
      type: object
    AccessUrlDetail:
      example:
        response:
          expires_at: 2000-01-23T04:56:07.000+00:00
          expired: true
          last_accessed_ip: last_accessed_ip
          name: name
          lifetime: lifetime
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          last_accessed_at: last_accessed_at
          created_ip: created_ip
          url: url
      properties:
        response:
          $ref: '#/components/schemas/AccessUrl'
      title: AccessUrlDetail
      type: object
    UpgradeLicenseResponse_response:
      example:
        finalized: true
        license: license
        new_managers: 6
        uniq: uniq
        new_clientpacks: 0
      properties:
        finalized:
          type: boolean
        uniq:
          description: new sha1 hash of license
          type: string
        license:
          description: "State of license, accepted, in-progress, failed"
          type: string
        new_clientpacks:
          type: integer
        new_managers:
          type: integer
      type: object
    ContainerSystemStatus:
      example:
        running: null
        network: network
      properties:
        network:
          description: Local network in CIDR notation container system is running
            on
          type: string
        running:
          $ref: '#/components/schemas/ContainerSystemStatus_running'
      title: ContainerSystemStatus
      type: object
    ContainerSystemStatusDetailResponse:
      example:
        response:
          running: null
          network: network
      properties:
        response:
          $ref: '#/components/schemas/ContainerSystemStatus'
      title: ContainerSystemStatusDetailResponse
      type: object
    SnapshotsList_snapshots_value:
      example:
        sha1_checksum: sha1_checksum
        size: 6
        created_at: created_at
        created_at_i: 0
        status: status
        token: token
      properties:
        sha1_checksum:
          type: string
        created_at:
          type: string
        created_at_i:
          type: integer
        size:
          type: integer
        status:
          description: "Status of snapshot, pending, finished_ok, finished_failed\
            \ or invalid"
          type: string
        token:
          description: Token if snapshot task is still pending for polling
          type: string
      title: Snapshot
      type: object
    PluginInstanceListResponse:
      example:
        response:
        - manager:
            log_files:
            - path: path
              description: description
            - path: path
              description: description
            executables:
            - path: path
              commands:
                key: commands
            - path: path
              commands:
                key: commands
            configuration_files:
            - path: path
              name: name
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              version: 2
              previous_versions:
              - path: path
                created_at: created_at
                version: 7
              - path: path
                created_at: created_at
                version: 7
            - path: path
              name: name
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              version: 2
              previous_versions:
              - path: path
                created_at: created_at
                version: 7
              - path: path
                created_at: created_at
                version: 7
            ports:
            - protocol: protocol
              ui: true
              port: 9
              ui_path: ui_path
              ssl: true
            - protocol: protocol
              ui: true
              port: 9
              ui_path: ui_path
              ssl: true
            process_manager:
              subprocesses:
              - subprocesses
              - subprocesses
              name: name
          data:
            Path: Path
            Args:
            - Args
            - Args
            ProcessLabel: ProcessLabel
            Platform: Platform
            Config:
              User: User
              Entrypoint: Entrypoint
              AttachStderr: true
              Memory: 0
              Dns: Dns
              VolumesFrom: VolumesFrom
              Hostname: Hostname
              OpenStdin: true
              Env:
                key: ""
              Image: Image
              NetworkDisabled: true
              ExposedPorts:
                key: ""
              StdinOnce: true
              AttachStdout: true
              WorkingDir: WorkingDir
              Volumes: Volumes
              CpuShares: 1
              PortSpecs:
                key: ""
              OnBuild: OnBuild
              AttachStdin: true
              Domainname: Domainname
              MemorySwap: 6
              Tty: true
              Cmd: Cmd
            AppArmorProfile: AppArmorProfile
            Driver: Driver
            VolumesRW:
              key: ""
            HostsPath: HostsPath
            HostnamePath: HostnamePath
            Image: Image
            Created: Created
            Name: Name
            RestartCount: 0
            NetworkSettings:
              HairpinMode: true
              SandboxKey: SandboxKey
              GlobalIPv6Address: GlobalIPv6Address
              Ports:
                key: ""
              GlobalIPv6PrefixLen: 5
              IPPrefixLen: 2
              MacAddress: MacAddress
              SandboxID: SandboxID
              LinkLocalIPv6Address: LinkLocalIPv6Address
              LinkLocalIPv6PrefixLen: 5
              Gateway: Gateway
              EndpointID: EndpointID
              SecondaryIPv6Addresses: SecondaryIPv6Addresses
              IPv6Gateway: IPv6Gateway
              SecondaryIPAddresses: SecondaryIPAddresses
              PortMapping:
                key: ""
              IPAddress: IPAddress
              Bridge: Bridge
            MountLabel: MountLabel
            Volumes:
              key: ""
            State:
              Status: Status
              Restarting: true
              Dead: true
              Ghost: true
              ExitCode: 1
              Running: true
              Error: Error
              FinishedAt: FinishedAt
              OOMKilled: true
              Pid: 6
              StartedAt: StartedAt
              Paused: true
            ResolvConfPath: ResolvConfPath
            ExecIDs:
            - ExecIDs
            - ExecIDs
            HostConfig:
              key: ""
            ExecDriver: ExecDriver
            Id: Id
            LogPath: LogPath
          description: description
          created_at: created_at
          ip_address: ip_address
          port_maps:
            key: 5
          uuid: uuid
          url: url
          command: command
          image_name: image_name
          environment: environment
          updated_at: updated_at
          firewall:
          - plugin_port: 1
            destination_port: 5
            rule: rule
            tags:
            - tags
            - tags
          - plugin_port: 1
            destination_port: 5
            rule: rule
            tags:
            - tags
            - tags
          name: name
          status_msg: status_msg
          id: 0
          image_id: 6
          status: status
        - manager:
            log_files:
            - path: path
              description: description
            - path: path
              description: description
            executables:
            - path: path
              commands:
                key: commands
            - path: path
              commands:
                key: commands
            configuration_files:
            - path: path
              name: name
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              version: 2
              previous_versions:
              - path: path
                created_at: created_at
                version: 7
              - path: path
                created_at: created_at
                version: 7
            - path: path
              name: name
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              version: 2
              previous_versions:
              - path: path
                created_at: created_at
                version: 7
              - path: path
                created_at: created_at
                version: 7
            ports:
            - protocol: protocol
              ui: true
              port: 9
              ui_path: ui_path
              ssl: true
            - protocol: protocol
              ui: true
              port: 9
              ui_path: ui_path
              ssl: true
            process_manager:
              subprocesses:
              - subprocesses
              - subprocesses
              name: name
          data:
            Path: Path
            Args:
            - Args
            - Args
            ProcessLabel: ProcessLabel
            Platform: Platform
            Config:
              User: User
              Entrypoint: Entrypoint
              AttachStderr: true
              Memory: 0
              Dns: Dns
              VolumesFrom: VolumesFrom
              Hostname: Hostname
              OpenStdin: true
              Env:
                key: ""
              Image: Image
              NetworkDisabled: true
              ExposedPorts:
                key: ""
              StdinOnce: true
              AttachStdout: true
              WorkingDir: WorkingDir
              Volumes: Volumes
              CpuShares: 1
              PortSpecs:
                key: ""
              OnBuild: OnBuild
              AttachStdin: true
              Domainname: Domainname
              MemorySwap: 6
              Tty: true
              Cmd: Cmd
            AppArmorProfile: AppArmorProfile
            Driver: Driver
            VolumesRW:
              key: ""
            HostsPath: HostsPath
            HostnamePath: HostnamePath
            Image: Image
            Created: Created
            Name: Name
            RestartCount: 0
            NetworkSettings:
              HairpinMode: true
              SandboxKey: SandboxKey
              GlobalIPv6Address: GlobalIPv6Address
              Ports:
                key: ""
              GlobalIPv6PrefixLen: 5
              IPPrefixLen: 2
              MacAddress: MacAddress
              SandboxID: SandboxID
              LinkLocalIPv6Address: LinkLocalIPv6Address
              LinkLocalIPv6PrefixLen: 5
              Gateway: Gateway
              EndpointID: EndpointID
              SecondaryIPv6Addresses: SecondaryIPv6Addresses
              IPv6Gateway: IPv6Gateway
              SecondaryIPAddresses: SecondaryIPAddresses
              PortMapping:
                key: ""
              IPAddress: IPAddress
              Bridge: Bridge
            MountLabel: MountLabel
            Volumes:
              key: ""
            State:
              Status: Status
              Restarting: true
              Dead: true
              Ghost: true
              ExitCode: 1
              Running: true
              Error: Error
              FinishedAt: FinishedAt
              OOMKilled: true
              Pid: 6
              StartedAt: StartedAt
              Paused: true
            ResolvConfPath: ResolvConfPath
            ExecIDs:
            - ExecIDs
            - ExecIDs
            HostConfig:
              key: ""
            ExecDriver: ExecDriver
            Id: Id
            LogPath: LogPath
          description: description
          created_at: created_at
          ip_address: ip_address
          port_maps:
            key: 5
          uuid: uuid
          url: url
          command: command
          image_name: image_name
          environment: environment
          updated_at: updated_at
          firewall:
          - plugin_port: 1
            destination_port: 5
            rule: rule
            tags:
            - tags
            - tags
          - plugin_port: 1
            destination_port: 5
            rule: rule
            tags:
            - tags
            - tags
          name: name
          status_msg: status_msg
          id: 0
          image_id: 6
          status: status
      properties:
        response:
          items:
            $ref: '#/components/schemas/PluginInstance'
          type: array
      title: PluginInstanceListResponse
      type: object
    PasswordResetResponse:
      example:
        response:
          password_reset: password_reset
      properties:
        response:
          $ref: '#/components/schemas/PasswordResetResponse_response'
      title: PasswordResetResponse
      type: object
    AlertEventTypesListResponse:
      example:
        response:
        - tunnel_up
        - tunnel_down
        - process_change
        - user_password_change
        - controller_reboot
        - controller_reset_defaults
        - system_general
        - clientpack_up
        - clientpack_down
      properties:
        response:
          items:
            type: string
          type: array
      title: AlertEventTypesListResponse
      type: object
    RebootRequest:
      example:
        reboot: true
      properties:
        reboot:
          type: boolean
      title: RebootRequest
      type: object
    SystemStatus_data:
      additionalProperties: true
      example:
        sysstat:
        - - vnscubed
          - "597"
          - "1564089901"
          - all
          - '%user'
          - "2.91"
        - - vnscubed
          - "597"
          - "1564089901"
          - all
          - '%nice'
          - "0.02"
        - - vnscubed
          - "597"
          - "1564089901"
          - all
          - '%system'
          - "1.49"
        - - vnscubed
          - "597"
          - "1564089901"
          - all
          - '%iowait'
          - "0.51"
        - - vnscubed
          - "597"
          - "1564089901"
          - all
          - '%steal'
          - "0.01"
      properties:
        sysstat:
          example:
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%user'
            - "2.91"
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%nice'
            - "0.02"
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%system'
            - "1.49"
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%iowait'
            - "0.51"
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%steal'
            - "0.01"
          items:
            items:
              type: string
            type: array
          title: SystemSysStat
          type: array
      type: object
    RestartRequest:
      example:
        restart: true
      properties:
        restart:
          description: Restarts target system on server if true
          type: boolean
      required:
      - restart
      title: RestartRequest
      type: object
    Topology:
      example:
        overlay_max_clients: 2
        clients:
        - octets:
          - 5
          - 5
          ip_address: ip_address
        - octets:
          - 5
          - 5
          ip_address: ip_address
        total_clients: 7
        ipsec_max_subnets: 9
        ipsec_max_endpoints: 3
        license_upgrades:
        - license_upgrades
        - license_upgrades
        overlay_subnet: overlay_subnet
        managers:
        - manager_id: 1
          overlay_ipaddress:
            octets:
            - 5
            - 5
            ip_address: ip_address
          asn: 5
        - manager_id: 1
          overlay_ipaddress:
            octets:
            - 5
            - 5
            ip_address: ip_address
          asn: 5
      properties:
        clients:
          description: IPs for clientpacks
          items:
            $ref: '#/components/schemas/Topology_clients_inner'
          type: array
        managers:
          items:
            $ref: '#/components/schemas/VNS3Controller'
          type: array
        total_clients:
          type: integer
        ipsec_max_subnets:
          type: integer
        ipsec_max_endpoints:
          type: integer
        license_upgrades:
          items:
            type: string
          type: array
        overlay_max_clients:
          type: integer
        overlay_subnet:
          description: CIDR for overlay clients
          type: string
      title: Topology
      type: object
    LicenseDetail:
      example:
        response:
          finalized: true
          license: license
          capabilities:
          - capabilities
          - capabilities
          sha1_checksum: sha1_checksum
          uploaded_at: uploaded_at
          topology:
            overlay_max_clients: 2
            clients:
            - octets:
              - 5
              - 5
              ip_address: ip_address
            - octets:
              - 5
              - 5
              ip_address: ip_address
            total_clients: 7
            ipsec_max_subnets: 9
            ipsec_max_endpoints: 3
            license_upgrades:
            - license_upgrades
            - license_upgrades
            overlay_subnet: overlay_subnet
            managers:
            - manager_id: 1
              overlay_ipaddress:
                octets:
                - 5
                - 5
                ip_address: ip_address
              asn: 5
            - manager_id: 1
              overlay_ipaddress:
                octets:
                - 5
                - 5
                ip_address: ip_address
              asn: 5
          custom_addressing: true
          my_manager_vip: my_manager_vip
          container_details:
            containers_run_count: 6
            containers_image_count: 1
          license_present: true
          uploaded_at_i: 0
      properties:
        response:
          $ref: '#/components/schemas/License'
      title: LicenseDetail
      type: object
    UpdateClientpackRequest:
      example:
        regenerate: true
        name: name
        checked_out: true
        compression: compression
        enabled: true
      oneOf:
      - required:
        - enabled
        - name
      - required:
        - checked_out
        - name
      - required:
        - name
        - regenerate
      - required:
        - compression
        - name
      properties:
        name:
          description: Name of the clientpack (IP snake case)
          type: string
        enabled:
          description: Enable or disable clientpack.
          type: boolean
        checked_out:
          description: Update whether clientpack is checked out and thus unavailable
          type: boolean
        regenerate:
          description: Regenerate clientpack file. Returns a task token in the response.
          type: boolean
        compression:
          description: Turn compression on or off for all. Can be "on" or "off" currently.
          type: string
      title: UpdateClientpackRequest
      type: object
    AdminUISettingsDetail:
      example:
        response:
          enabled: true
          username: username
      properties:
        response:
          $ref: '#/components/schemas/AdminUISettingsDetail_response'
      title: AdminUISettingsDetail
      type: object
    UpdateAlertRequest:
      example:
        webhook_id: 0
        name: name
        custom_properties:
        - name: name
          value: value
        - name: name
          value: value
        url: url
        events:
        - events
        - events
        enabled: true
      properties:
        name:
          type: string
        url:
          type: string
        webhook_id:
          type: integer
        events:
          items:
            type: string
          type: array
        custom_properties:
          items:
            $ref: '#/components/schemas/CreateWebookRequest_headers_inner'
          type: array
        enabled:
          default: true
          type: boolean
      title: UpdateAlertRequest
      type: object
    CreateIpsecEndpointRequest:
      example:
        ipaddress: ipaddress
        route_based_remote: route_based_remote
        route_based_local: route_based_local
        nat_t_enabled: true
        description: description
        route_based_int_address: route_based_int_address
        secret: secret
        vpn_type: policy
        name: name
        ike_version: 0
        gre: true
        pfs: true
        extra_config: extra_config
        private_ipaddress: private_ipaddress
        gre_interface_address: gre_interface_address
      properties:
        name:
          description: Name for the connection.
          type: string
        description:
          description: Description of this IPsec endpoint
          type: string
        ipaddress:
          description: IP of the remote gateway
          type: string
        secret:
          description: Pre-shared key
          type: string
        pfs:
          default: true
          description: "Perfect Forward Secrecy if true, disables if false."
          type: boolean
        ike_version:
          default: 1
          description: Version for IKE algorithm
          enum:
          - 1
          - 2
          type: integer
        nat_t_enabled:
          default: true
          description: True if you want encapsulated IPsec protocol to this gateway
          type: boolean
        extra_config:
          description: Additional optionals for connection such as 'phase1=aes256_gcm-sha2_256-dh14
            phase2=aes256_gcm'
          type: string
        private_ipaddress:
          description: Internal NAT address of the remote gateway
          type: string
        gre:
          description: True if GRE is being used for the specific endpoint
          type: boolean
        gre_interface_address:
          description: Interface for GRE in /30 format
          type: string
        vpn_type:
          default: policy
          description: "policy, gre, vti"
          type: string
        route_based_int_address:
          type: string
        route_based_local:
          type: string
        route_based_remote:
          type: string
      required:
      - ipaddress
      - name
      - secret
      title: CreateIpsecEndpointRequest
      type: object
    LdapVpnRadiusSettingsResponse:
      example:
        response:
          vpn_radius_auth_port: 0
          vpn_auth_provider: vpn_auth_provider
          vpn_radius_server: vpn_radius_server
          vpn_auth_enabled: true
          vpn_radius_accounting_port: 6
          token: token
      properties:
        response:
          $ref: '#/components/schemas/LdapVpnRadiusSettings'
      title: LdapVpnRadiusSettingsResponse
      type: object
    PluginManagerConfigConfigFilesResponse:
      example:
        response:
        - path: path
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          version: 2
          previous_versions:
          - path: path
            created_at: created_at
            version: 7
          - path: path
            created_at: created_at
            version: 7
        - path: path
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          version: 2
          previous_versions:
          - path: path
            created_at: created_at
            version: 7
          - path: path
            created_at: created_at
            version: 7
      properties:
        response:
          items:
            $ref: '#/components/schemas/PluginManagerConfigConfigFile'
          type: array
      title: PluginManagerConfigConfigFilesResponse
      type: object
    ClientpackListResponse:
      example:
        response:
          key:
            tarball_file: tarball_file
            ipaddress: ipaddress
            sequential_id: 0
            conf_sha1: conf_sha1
            ovpn_sha1: ovpn_sha1
            overlay_ipaddress: overlay_ipaddress
            checked_out: true
            windows_onefile: windows_onefile
            enabled: true
            zip_sha1: zip_sha1
            tags:
              key: tags
            connected: true
            linux_onefile: linux_onefile
            last_disconnect: last_disconnect
            manager_id: manager_id
            name: name
            tarball_sha1: tarball_sha1
            last_connect: last_connect
            compression: compression
            zip_file: zip_file
            status: status
      properties:
        response:
          additionalProperties:
            $ref: '#/components/schemas/ClientpackList'
          title: ClientpackList
          type: object
      title: ClientpackListResponse
      type: object
    PasswordResetResponse_response:
      example:
        password_reset: password_reset
      properties:
        password_reset:
          type: string
      type: object
    postCreateFirewallFwSet_200_response:
      example:
        response:
          status: ok
          rules: Rule 1\n Rule 2\n Rule 3
      oneOf:
      - $ref: '#/paths/~1firewall~1rules~1subgroup/post/responses/200/content/application~1json/schema/oneOf/1'
      - $ref: '#/components/schemas/FirewallFWSetDetail'
    PacketMonitor:
      example:
        filter: filter
        duration: duration
        name: name
        destination: destination
        type: type
        interface: interface
      properties:
        name:
          description: Name of packet monitor. Must be conntrack for type=conntrack
            as only one conntrack monitor can run at a time
          type: string
        type:
          description: "conntrack, netflow or pcap"
          type: string
        interface:
          type: string
        filter:
          description: "filter strings are particular to the type of packet monitor.\
            \ For instance, \"-p 8000\" for pcap"
          type: string
        duration:
          description: Indicates length of time to run capture for. Can be forever
            or some string parsable by the Linux date command
          type: string
        destination:
          description: must be file if pcap or conntrack. Otherwise a host should
            be specified with the prefix "host". E.g. "host:10.0.3.2:4000"
          type: string
      title: PacketMonitor
      type: object
    PluginManagerCommandResponse:
      example:
        response:
          output: output
          failed: true
          error: error
          timeout: true
      properties:
        response:
          $ref: '#/components/schemas/PluginManagerCommandResponse_response'
      title: PluginManagerCommandResponse
      type: object
    DeleteContainerDetail:
      example:
        container_deleted: true
        uuid: uuid
      properties:
        uuid:
          type: string
        container_deleted:
          type: boolean
      title: DeleteContainerDetail
      type: object
    ExpireRequest:
      example:
        expired: true
      properties:
        expired:
          type: boolean
      title: ExpireRequest
      type: object
    CommandOutputResponse:
      properties:
        response:
          items:
            $ref: '#/components/schemas/CommandOutput_inner'
          maxItems: 3
          minItems: 3
          title: CommandOutput
          type: array
      title: CommandOutputResponse
      type: object
    PluginManagerConfigProcessManager:
      example:
        subprocesses:
        - subprocesses
        - subprocesses
        name: name
      properties:
        name:
          description: |
            name of process manager such as supervisor. Currently  we support commands for supervisor and service.
          type: string
        subprocesses:
          description: "Name of programs, services or units managed"
          items:
            type: string
          type: array
      title: PluginManagerConfigProcessManager
      type: object
    VNS3Controller:
      example:
        manager_id: 1
        overlay_ipaddress:
          octets:
          - 5
          - 5
          ip_address: ip_address
        asn: 5
      properties:
        asn:
          type: integer
        manager_id:
          minimum: 1
          type: integer
        overlay_ipaddress:
          $ref: '#/components/schemas/Topology_clients_inner'
      title: VNS3Controller
      type: object
    PluginManagerConfig_log_files_inner:
      example:
        path: path
        description: description
      properties:
        path:
          type: string
        description:
          type: string
      type: object
    CreateSnapshotRequest:
      example:
        async: true
        name: name
      properties:
        name:
          description: Name of file. Defaults to a timestamped name
          type: string
        async:
          description: "If true, will return a task id rather than wait for snapshot\
            \ generation"
          type: boolean
      title: CreateSnapshotRequest
      type: object
    WebhookDetailResponse:
      example:
        response:
          headers:
          - name: name
            value: value
          - name: name
            value: value
          system: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          custom_properties:
          - name: name
            description: description
            value: value
          - name: name
            description: description
            value: value
          body: body
          parameters:
          - name: name
            value: value
          - name: name
            value: value
          url: url
          events:
          - events
          - events
          validate_cert: true
      properties:
        response:
          $ref: '#/components/schemas/WebhookIntegration'
      title: WebhookDetailResponse
      type: object
    CreateAccessURLRequest:
      example:
        expires: 20812
        name: name
        description: description
      properties:
        expires:
          default: 3600
          description: Number of seconds before expiration
          maximum: 259200
          minimum: 60
          type: integer
        name:
          description: Optional name
          type: string
        description:
          description: Optional name (deprecated)
          type: string
      title: CreateAccessURLRequest
      type: object
    putUploadLdapAuthCert_200_response:
      example:
        response: response
      properties:
        response:
          type: string
      type: object
    UpdateBGPPeerRequest:
      example:
        ipaddress: ipaddress
        local_asn_alias: 6
        add_network_distance: true
        add_network_distance_hops: 1
        access_list: access_list
        bgp_password: bgp_password
        asn: 0
        add_network_distance_direction: add_network_distance_direction
      properties:
        ipaddress:
          description: IP address of the desired BGP peer.
          type: string
        asn:
          description: Autonomous system number assigned to device at ipaddress
          type: integer
        local_asn_alias:
          description: Autonomous system number alias
          type: integer
        access_list:
          description: List of "in permit CIDR" and/or "out permit CIDR" statements
            in a string delimited by "\n"
          type: string
        bgp_password:
          description: String to be agreed upon by both peers as a simple password.
          type: string
        add_network_distance:
          description: Enable network distance for BGP peer
          type: boolean
        add_network_distance_direction:
          description: "Add distance direction for BGP peer, in or out"
          type: string
        add_network_distance_hops:
          description: Distance metric weight indicating distance in hops for BGP
            peer
          type: integer
      required:
      - asn
      - ipaddress
      title: UpdateBGPPeerRequest
      type: object
    SimpleEnabledResponse_response:
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      type: object
    FirewallSubgroupStatusListResponse:
      properties:
        response:
          $ref: '#/components/schemas/FirewallSubgroupStatusListResponse_response'
      title: FirewallSubgroupStatusListResponse
      type: object
    WebhookIntegration:
      example:
        headers:
        - name: name
          value: value
        - name: name
          value: value
        system: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        custom_properties:
        - name: name
          description: description
          value: value
        - name: name
          description: description
          value: value
        body: body
        parameters:
        - name: name
          value: value
        - name: name
          value: value
        url: url
        events:
        - events
        - events
        validate_cert: true
      properties:
        id:
          minimum: 1
          type: integer
        name:
          type: string
        validate_cert:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        system:
          type: boolean
        url:
          nullable: true
          type: string
        body:
          nullable: true
          type: string
        custom_properties:
          items:
            $ref: '#/components/schemas/WebhookCustomProperty'
          type: array
        headers:
          items:
            $ref: '#/components/schemas/WebhookHeader'
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/WebhookParameter'
          type: array
        events:
          items:
            type: string
          type: array
      title: WebhookIntegration
      type: object
    SystemStatus:
      example:
        meminfo:
        - meminfo
        - meminfo
        timestamp_i: 0
        kernel_version: kernel_version
        data:
          sysstat:
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%user'
            - "2.91"
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%nice'
            - "0.02"
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%system'
            - "1.49"
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%iowait'
            - "0.51"
          - - vnscubed
            - "597"
            - "1564089901"
            - all
            - '%steal'
            - "0.01"
        container_system:
          container_network: container_network
          containers_active: 2
          images_limit: 1
          images_stored: 5
          containers_limit: 5
          container_system_running: true
        vns3_version: vns3_version
        loadavg:
        - loadavg
        - loadavg
        diskinfo:
        - - diskinfo
          - diskinfo
        - - diskinfo
          - diskinfo
        timestamp: timestamp
        uptime: 6
        swapinfo:
        - swapinfo
        - swapinfo
      properties:
        timestamp:
          type: string
        timestamp_i:
          type: integer
        vns3_version:
          type: string
        kernel_version:
          type: string
        uptime:
          type: integer
        loadavg:
          items:
            type: string
          type: array
        diskinfo:
          items:
            items:
              type: string
            type: array
          type: array
        meminfo:
          items:
            type: string
          type: array
        swapinfo:
          items:
            type: string
          type: array
        container_system:
          $ref: '#/components/schemas/ContainerSystem'
        data:
          $ref: '#/components/schemas/SystemStatus_data'
      title: SystemStatus
      type: object
    SnapshotImportStatus:
      example:
        log_lines:
        - log_lines
        - log_lines
        snapshot: snapshot
      properties:
        snapshot:
          description: Status of import
          type: string
        log_lines:
          description: Log details if failed
          items:
            type: string
          type: array
      title: SnapshotImportStatus
      type: object
    WebhookHeader:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      title: WebhookHeader
      type: object
    InterfaceAddressListResponse:
      example:
        response:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          ip_internal: ip_internal
          mask_bits: 0
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          ip_external: ip_external
          gateway: gateway
        - updated_at: 2000-01-23T04:56:07.000+00:00
          ip_internal: ip_internal
          mask_bits: 0
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          ip_external: ip_external
          gateway: gateway
      properties:
        response:
          items:
            $ref: '#/components/schemas/InterfaceAddress'
          type: array
      title: InterfaceAddressListResponse
      type: object
    Error:
      properties:
        error:
          $ref: '#/components/schemas/Error_error'
      title: Error
      type: object
    postTestLdapGroupSchemaSettings_200_response_response_inner:
      example:
        ldap_user:
        - ldap_user
        - ldap_user
        ldap_group: ldap_group
      properties:
        ldap_group:
          type: string
        ldap_user:
          items:
            type: string
          type: array
      type: object
    License_container_details:
      example:
        containers_run_count: 6
        containers_image_count: 1
      properties:
        containers_run_count:
          type: integer
        containers_image_count:
          type: integer
      type: object
    PeersDetailResponse:
      example:
        response:
          controllers:
            key:
              not_set: true
              address: address
              self: true
              overlay_ipaddress: overlay_ipaddress
              id: 1
              reachable: true
              mtu: mtu
          id: 1
          peered: true
          managers:
            key:
              not_set: true
              address: address
              self: true
              overlay_ipaddress: overlay_ipaddress
              id: 1
              reachable: true
              mtu: mtu
      properties:
        response:
          $ref: '#/components/schemas/PeersDetail'
      title: PeersDetailResponse
      type: object
    LicenseParameters:
      example:
        subnet: subnet
        clients:
        - clients
        - clients
        controllers:
        - controllers
        - controllers
        asns:
        - 0
        - 0
        my_manager_vip: my_manager_vip
        managers:
        - managers
        - managers
      properties:
        subnet:
          type: string
        controllers:
          description: IP addresses of VNS3 controllers in topology
          items:
            type: string
          type: array
        managers:
          description: IP addresses of VNS3 controllers in topology
          items:
            type: string
          type: array
        clients:
          description: IP addresses of clients in topology
          items:
            type: string
          type: array
        asns:
          description: ASNs used by controllers in topology
          items:
            type: integer
          type: array
        my_manager_vip:
          type: string
      title: LicenseParameters
      type: object
    CreateImageDetail:
      example:
        import_uuid: import_uuid
        status: status
      properties:
        status:
          type: string
        import_uuid:
          type: string
      title: CreateImageDetail
      type: object
    Plugin_data:
      example:
        container_config:
          key: ""
        comment: comment
      properties:
        comment:
          type: string
        container_config:
          additionalProperties: true
          type: object
      type: object
    GREEndpointListResponse:
      example:
        response:
        - null
        - null
      properties:
        response:
          items:
            $ref: '#/components/schemas/GREEndpoint'
          type: array
      title: GREEndpointListResponse
      type: object
    postTestLdapUserSchemaSettings_200_response:
      example:
        response:
        - response
        - response
      properties:
        response:
          items:
            type: string
          type: array
      type: object
    IpsecSystemDetail_response:
      example:
        this_endpoint:
          ipsec_local_ipaddress: ipsec_local_ipaddress
          ipaddress: ipaddress
          nat_traversal: true
          overlay_subnet: overlay_subnet
          private_ipaddress: private_ipaddress
          asn: 0
        remote_endpoints:
          key:
            ipaddress: ipaddress
            route_based_remote: route_based_remote
            bgp_peers:
              key:
                ipaddress: ipaddress
                connection_detail: connection_detail
                add_network_distance: true
                add_network_distance_hops: 2
                access_list: access_list
                bgp_password: bgp_password
                id: 1
                asn: 5
                add_network_distance_direction: add_network_distance_direction
            route_based_local: route_based_local
            nat_t_enabled: true
            description: description
            psk: psk
            route_based_int_address: route_based_int_address
            type: type
            vpn_type: vpn_type
            tunnels:
              key:
                tunnel_params:
                  bytes_in: bytes_in
                  isakmp_port: isakmp_port
                  last_dpd: last_dpd
                  inbound_spi: inbound_spi
                  phase1_cipher: phase1_cipher
                  nat_t: nat_t
                  esp_time_remaining: esp_time_remaining
                  esp_port: esp_port
                  phase1: phase1
                  phase2: phase2
                  phase2_algo: phase2_algo
                  isakmp_time_remaining: isakmp_time_remaining
                  pfs_dh_group: pfs_dh_group
                  bytes_out: bytes_out
                  ike_version: ike_version
                  outbound_spi: outbound_spi
                  dpd: dpd
                  phase1_dh_group: phase1_dh_group
                  phase2_hash: phase2_hash
                  phase1_prf: phase1_prf
                bounce: true
                endpointid: 1
                endpoint_name: endpoint_name
                endpoint_id: 1
                active: true
                description: description
                local_subnet: local_subnet
                ping_ipaddress: ping_ipaddress
                enabled: true
                connected: true
                ping_interval: 5
                ping_interface: eth0
                remote_subnet: remote_subnet
                id: 1
            name: name
            ike_version: 1
            id: 1
            pfs: true
            private_ipaddress: private_ipaddress
            extra_config:
            - extra_config
            - extra_config
            gre_interface_address: gre_interface_address
      properties:
        this_endpoint:
          $ref: '#/components/schemas/IpsecLocalEndpoint'
        remote_endpoints:
          additionalProperties:
            $ref: '#/components/schemas/IpsecSystemDetail_response_remote_endpoints_value'
          type: object
      type: object
    postTestAlert_200_response:
      example:
        response:
          code: code
          message: message
          status: status
      properties:
        response:
          $ref: '#/components/schemas/postTestAlert_200_response_response'
      type: object
    Plugin:
      example:
        running_containers: 1
        data:
          container_config:
            key: ""
          comment: comment
        tag_name: tag_name
        import_id: import_id
        created_at: created_at
        description: description
        uuid: uuid
        url: url
        name: name
        status_msg: status_msg
        containers:
        - id: 6
          status: status
        - id: 6
          status: status
        id: 0
        status: status
      properties:
        id:
          type: integer
        uuid:
          nullable: true
          type: string
        name:
          type: string
        tag_name:
          type: string
        status:
          type: string
        status_msg:
          type: string
        import_id:
          type: string
        created_at:
          type: string
        description:
          type: string
        url:
          type: string
        containers:
          items:
            $ref: '#/components/schemas/Plugin_containers_inner'
          type: array
        running_containers:
          type: integer
        data:
          $ref: '#/components/schemas/Plugin_data'
      title: Plugin
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
