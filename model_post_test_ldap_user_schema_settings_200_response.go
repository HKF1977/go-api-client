/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 5.1.5
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostTestLdapUserSchemaSettings200Response struct for PostTestLdapUserSchemaSettings200Response
type PostTestLdapUserSchemaSettings200Response struct {
	Response []string `json:"response,omitempty"`
}

// NewPostTestLdapUserSchemaSettings200Response instantiates a new PostTestLdapUserSchemaSettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTestLdapUserSchemaSettings200Response() *PostTestLdapUserSchemaSettings200Response {
	this := PostTestLdapUserSchemaSettings200Response{}
	return &this
}

// NewPostTestLdapUserSchemaSettings200ResponseWithDefaults instantiates a new PostTestLdapUserSchemaSettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTestLdapUserSchemaSettings200ResponseWithDefaults() *PostTestLdapUserSchemaSettings200Response {
	this := PostTestLdapUserSchemaSettings200Response{}
	return &this
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *PostTestLdapUserSchemaSettings200Response) GetResponse() []string {
	if o == nil || o.Response == nil {
		var ret []string
		return ret
	}
	return o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestLdapUserSchemaSettings200Response) GetResponseOk() ([]string, bool) {
	if o == nil || o.Response == nil {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *PostTestLdapUserSchemaSettings200Response) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given []string and assigns it to the Response field.
func (o *PostTestLdapUserSchemaSettings200Response) SetResponse(v []string) {
	o.Response = v
}

func (o PostTestLdapUserSchemaSettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Response != nil {
		toSerialize["response"] = o.Response
	}
	return json.Marshal(toSerialize)
}

type NullablePostTestLdapUserSchemaSettings200Response struct {
	value *PostTestLdapUserSchemaSettings200Response
	isSet bool
}

func (v NullablePostTestLdapUserSchemaSettings200Response) Get() *PostTestLdapUserSchemaSettings200Response {
	return v.value
}

func (v *NullablePostTestLdapUserSchemaSettings200Response) Set(val *PostTestLdapUserSchemaSettings200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTestLdapUserSchemaSettings200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTestLdapUserSchemaSettings200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTestLdapUserSchemaSettings200Response(val *PostTestLdapUserSchemaSettings200Response) *NullablePostTestLdapUserSchemaSettings200Response {
	return &NullablePostTestLdapUserSchemaSettings200Response{value: val, isSet: true}
}

func (v NullablePostTestLdapUserSchemaSettings200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTestLdapUserSchemaSettings200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


